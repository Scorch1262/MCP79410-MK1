

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Mar 03 19:28:42 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,inline
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,inline
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1,inline
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1,inline
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1,inline
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1,inline
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1,inline
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1,inline
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1,inline
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	text73,global,reloc=2,class=CODE,delta=1
    87                           	psect	text74,global,reloc=2,class=CODE,delta=1,inline
    88                           	psect	text75,global,reloc=2,class=CODE,delta=1,inline
    89                           	psect	text76,global,reloc=2,class=CODE,delta=1,inline
    90                           	psect	text77,global,reloc=2,class=CODE,delta=1
    91                           	psect	text78,global,reloc=2,class=CODE,delta=1,inline
    92                           	psect	text79,global,reloc=2,class=CODE,delta=1,inline
    93                           	psect	text80,global,reloc=2,class=CODE,delta=1,inline
    94                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    95                           	psect	text82,global,reloc=2,class=CODE,delta=1
    96                           	psect	text83,global,reloc=2,class=CODE,delta=1
    97                           	psect	text84,global,reloc=2,class=CODE,delta=1
    98                           	psect	text85,global,reloc=2,class=CODE,delta=1
    99                           	psect	text86,global,reloc=2,class=CODE,delta=1
   100                           	psect	text87,global,reloc=2,class=CODE,delta=1
   101                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   102                           	psect	text88,global,reloc=2,class=CODE,delta=1
   103                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   104                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   105                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   106                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   107  0000                     
   108                           ; Version 2.20
   109                           ; Generated 05/05/2020 GMT
   110                           ; 
   111                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   112                           ; All rights reserved.
   113                           ; 
   114                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   115                           ; 
   116                           ; Redistribution and use in source and binary forms, with or without modification, are
   117                           ; permitted provided that the following conditions are met:
   118                           ; 
   119                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   120                           ;        conditions and the following disclaimer.
   121                           ; 
   122                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   123                           ;        of conditions and the following disclaimer in the documentation and/or other
   124                           ;        materials provided with the distribution.
   125                           ; 
   126                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   127                           ;        software without specific prior written permission.
   128                           ; 
   129                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   130                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   131                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   132                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   133                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   134                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   135                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   136                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   137                           ; 
   138                           ; 
   139                           ; Code-generator required, PIC18F46K20 Definitions
   140                           ; 
   141                           ; SFR Addresses
   142  0000                     
   143                           	psect	smallconst
   144  001000                     __psmallconst:
   145                           	callstack 0
   146  001000  00                 	db	0
   147  001001                     _fsmStateTable:
   148                           	callstack 0
   149  001001  FC                 	db	low _I2C_DO_IDLE
   150  001002  26                 	db	high _I2C_DO_IDLE
   151  001003  D4                 	db	low _I2C_DO_SEND_ADR_READ
   152  001004  26                 	db	high _I2C_DO_SEND_ADR_READ
   153  001005  C4                 	db	low _I2C_DO_SEND_ADR_WRITE
   154  001006  26                 	db	high _I2C_DO_SEND_ADR_WRITE
   155  001007  1C                 	db	low _I2C_DO_TX
   156  001008  19                 	db	high _I2C_DO_TX
   157  001009  42                 	db	low _I2C_DO_RX
   158  00100A  1B                 	db	high _I2C_DO_RX
   159  00100B  F0                 	db	low _I2C_DO_RCEN
   160  00100C  26                 	db	high _I2C_DO_RCEN
   161  00100D  8C                 	db	low _I2C_DO_TX_EMPTY
   162  00100E  1D                 	db	high _I2C_DO_TX_EMPTY
   163  00100F  86                 	db	low _I2C_DO_SEND_RESTART_READ
   164  001010  27                 	db	high _I2C_DO_SEND_RESTART_READ
   165  001011  7E                 	db	low _I2C_DO_SEND_RESTART_WRITE
   166  001012  27                 	db	high _I2C_DO_SEND_RESTART_WRITE
   167  001013  76                 	db	low _I2C_DO_SEND_RESTART
   168  001014  27                 	db	high _I2C_DO_SEND_RESTART
   169  001015  6E                 	db	low _I2C_DO_SEND_STOP
   170  001016  27                 	db	high _I2C_DO_SEND_STOP
   171  001017  66                 	db	low _I2C_DO_RX_ACK
   172  001018  27                 	db	high _I2C_DO_RX_ACK
   173  001019  5E                 	db	low _I2C_DO_RX_NACK_STOP
   174  00101A  27                 	db	high _I2C_DO_RX_NACK_STOP
   175  00101B  56                 	db	low _I2C_DO_RX_NACK_RESTART
   176  00101C  27                 	db	high _I2C_DO_RX_NACK_RESTART
   177  00101D  E4                 	db	low _I2C_DO_RESET
   178  00101E  26                 	db	high _I2C_DO_RESET
   179  00101F  46                 	db	low _I2C_DO_ADDRESS_NACK
   180  001020  20                 	db	high _I2C_DO_ADDRESS_NACK
   181  001021                     __end_of_fsmStateTable:
   182                           	callstack 0
   183  001021                     STR_1:
   184                           
   185                           ; BSR set to: 0
   186  001021  52                 	db	82	;'R'
   187  001022  54                 	db	84	;'T'
   188  001023  43                 	db	67	;'C'
   189  001024  3A                 	db	58	;':'
   190  001025  20                 	db	32
   191  001026  32                 	db	50	;'2'
   192  001027  30                 	db	48	;'0'
   193  001028  25                 	db	37
   194  001029  30                 	db	48	;'0'
   195  00102A  32                 	db	50	;'2'
   196  00102B  78                 	db	120	;'x'
   197  00102C  2D                 	db	45
   198  00102D  25                 	db	37
   199  00102E  30                 	db	48	;'0'
   200  00102F  32                 	db	50	;'2'
   201  001030  78                 	db	120	;'x'
   202  001031  2D                 	db	45
   203  001032  25                 	db	37
   204  001033  30                 	db	48	;'0'
   205  001034  32                 	db	50	;'2'
   206  001035  78                 	db	120	;'x'
   207  001036  20                 	db	32
   208  001037  25                 	db	37
   209  001038  30                 	db	48	;'0'
   210  001039  32                 	db	50	;'2'
   211  00103A  78                 	db	120	;'x'
   212  00103B  3A                 	db	58	;':'
   213  00103C  25                 	db	37
   214  00103D  30                 	db	48	;'0'
   215  00103E  32                 	db	50	;'2'
   216  00103F  78                 	db	120	;'x'
   217  001040  3A                 	db	58	;':'
   218  001041  25                 	db	37
   219  001042  30                 	db	48	;'0'
   220  001043  32                 	db	50	;'2'
   221  001044  78                 	db	120	;'x'
   222  001045  0D                 	db	13
   223  001046  0A                 	db	10
   224  001047  00                 	db	0
   225  001048  00                 	db	0	; dummy byte at the end
   226  0000                     
   227                           	psect	nvBANK0
   228  0000ED                     __pnvBANK0:
   229                           	callstack 0
   230  0000ED                     _EUSART_ErrorHandler:
   231                           	callstack 0
   232  0000ED                     	ds	2
   233  0000EF                     _EUSART_OverrunErrorHandler:
   234                           	callstack 0
   235  0000EF                     	ds	2
   236  0000F1                     _EUSART_FramingErrorHandler:
   237                           	callstack 0
   238  0000F1                     	ds	2
   239  0000F3                     _EUSART_RxDefaultInterruptHandler:
   240                           	callstack 0
   241  0000F3                     	ds	2
   242  0000F5                     _EUSART_TxDefaultInterruptHandler:
   243                           	callstack 0
   244  0000F5                     	ds	2
   245  0000F7                     _eusartTxBufferRemaining:
   246                           	callstack 0
   247  0000F7                     	ds	1
   248  0000F8                     _min:
   249                           	callstack 0
   250  0000F8                     	ds	1
   251  0000F9                     _hour:
   252                           	callstack 0
   253  0000F9                     	ds	1
   254  0000FA                     _year:
   255                           	callstack 0
   256  0000FA                     	ds	1
   257  0000FB                     _month:
   258                           	callstack 0
   259  0000FB                     	ds	1
   260  0000FC                     _day:
   261                           	callstack 0
   262  0000FC                     	ds	1
   263  0000                     _RCONbits	set	4048
   264  0000                     _RCREG	set	4014
   265  0000                     _RCSTAbits	set	4011
   266  0000                     _TXREG	set	4013
   267  0000                     _TXSTAbits	set	4012
   268  0000                     _SPBRGH	set	4016
   269  0000                     _SPBRG	set	4015
   270  0000                     _TXSTA	set	4012
   271  0000                     _RCSTA	set	4011
   272  0000                     _BAUDCON	set	4024
   273  0000                     _INTCONbits	set	4082
   274  0000                     _INTCON2bits	set	4081
   275  0000                     _WPUB	set	3964
   276  0000                     _ANSELH	set	3967
   277  0000                     _ANSEL	set	3966
   278  0000                     _TRISD	set	3989
   279  0000                     _TRISC	set	3988
   280  0000                     _TRISB	set	3987
   281  0000                     _TRISA	set	3986
   282  0000                     _TRISE	set	3990
   283  0000                     _LATC	set	3979
   284  0000                     _LATB	set	3978
   285  0000                     _LATA	set	3977
   286  0000                     _LATD	set	3980
   287  0000                     _LATE	set	3981
   288  0000                     _OSCTUNE	set	3995
   289  0000                     _OSCCON	set	4051
   290  0000                     _PIR1bits	set	3998
   291  0000                     _PIE1bits	set	3997
   292  0000                     _SSPSTATbits	set	4039
   293  0000                     _PIR2bits	set	4001
   294  0000                     _SSPCON2bits	set	4037
   295  0000                     _SSPBUF	set	4041
   296  0000                     _SSPCON1bits	set	4038
   297  0000                     _SSPADD	set	4040
   298  0000                     _SSPCON2	set	4037
   299  0000                     _SSPCON1	set	4038
   300  0000                     _SSPSTAT	set	4039
   301                           
   302                           ; #config settings
   303                           
   304                           	psect	cinit
   305  00260A                     __pcinit:
   306                           	callstack 0
   307  00260A                     start_initialization:
   308                           	callstack 0
   309  00260A                     __initialization:
   310                           	callstack 0
   311                           
   312                           ; Clear objects allocated to BANK0 (108 bytes)
   313  00260A  EE00  F060         	lfsr	0,__pbssBANK0
   314  00260E  0E6C               	movlw	108
   315  002610                     clear_0:
   316  002610  6AEE               	clrf	postinc0,c
   317  002612  06E8               	decf	wreg,f,c
   318  002614  E1FD               	bnz	clear_0
   319                           
   320                           ; Clear objects allocated to COMRAM (4 bytes)
   321  002616  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   322  002618  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   323  00261A  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   324  00261C  6A57               	clrf	__pbssCOMRAM& (0+255),c
   325  00261E                     end_of_initialization:
   326                           	callstack 0
   327  00261E                     __end_of__initialization:
   328                           	callstack 0
   329  00261E  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   330  002620  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   331  002622  0100               	movlb	0
   332  002624  EF4E  F00D         	goto	_main	;jump to C main() function
   333                           
   334                           	psect	bssCOMRAM
   335  000057                     __pbssCOMRAM:
   336                           	callstack 0
   337  000057                     _eusartRxTail:
   338                           	callstack 0
   339  000057                     	ds	1
   340  000058                     _eusartRxHead:
   341                           	callstack 0
   342  000058                     	ds	1
   343  000059                     _eusartTxTail:
   344                           	callstack 0
   345  000059                     	ds	1
   346  00005A                     _eusartTxHead:
   347                           	callstack 0
   348  00005A                     	ds	1
   349                           
   350                           	psect	bssBANK0
   351  000060                     __pbssBANK0:
   352                           	callstack 0
   353  000060                     _I2C_Status:
   354                           	callstack 0
   355  000060                     	ds	36
   356  000084                     _eusartRxStatusBuffer:
   357                           	callstack 0
   358  000084                     	ds	8
   359  00008C                     _eusartRxBuffer:
   360                           	callstack 0
   361  00008C                     	ds	8
   362  000094                     _eusartTxBuffer:
   363                           	callstack 0
   364  000094                     	ds	8
   365  00009C                     _writeBuffer:
   366                           	callstack 0
   367  00009C                     	ds	3
   368  00009F                     _nout:
   369                           	callstack 0
   370  00009F                     	ds	2
   371  0000A1                     _width:
   372                           	callstack 0
   373  0000A1                     	ds	2
   374  0000A3                     _prec:
   375                           	callstack 0
   376  0000A3                     	ds	2
   377  0000A5                     _flags:
   378                           	callstack 0
   379  0000A5                     	ds	2
   380  0000A7                     _readBuffer:
   381                           	callstack 0
   382  0000A7                     	ds	1
   383  0000A8                     _Slave_Address:
   384                           	callstack 0
   385  0000A8                     	ds	1
   386  0000A9                     _eusartRxLastError:
   387                           	callstack 0
   388  0000A9                     	ds	1
   389  0000AA                     _eusartRxCount:
   390                           	callstack 0
   391  0000AA                     	ds	1
   392  0000AB                     _dbuf:
   393                           	callstack 0
   394  0000AB                     	ds	32
   395  0000CB                     _sec:
   396                           	callstack 0
   397  0000CB                     	ds	1
   398                           
   399                           	psect	cstackBANK1
   400  000100                     __pcstackBANK1:
   401                           	callstack 0
   402  000100                     	ds	2
   403  000102                     printf@ap:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x2
   407  000102                     	ds	2
   408                           
   409                           	psect	cstackBANK0
   410  0000CC                     __pcstackBANK0:
   411                           	callstack 0
   412  0000CC                     vfpfcnvrt@llu:
   413                           	callstack 0
   414                           
   415                           ; 8 bytes @ 0x0
   416  0000CC                     	ds	8
   417  0000D4                     vfpfcnvrt@c:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0x8
   421  0000D4                     	ds	1
   422  0000D5                     vfpfcnvrt@done:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x9
   426  0000D5                     	ds	2
   427  0000D7                     _vfpfcnvrt$2097:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0xB
   431  0000D7                     	ds	2
   432  0000D9                     ?_vfprintf:
   433                           	callstack 0
   434  0000D9                     vfprintf@fp:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0xD
   438  0000D9                     	ds	2
   439  0000DB                     vfprintf@fmt:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0xF
   443  0000DB                     	ds	2
   444  0000DD                     vfprintf@ap:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x11
   448  0000DD                     	ds	2
   449  0000DF                     ?_printf:
   450                           	callstack 0
   451  0000DF                     printf@fmt:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x13
   455  0000DF                     	ds	14
   456                           
   457                           	psect	cstackCOMRAM
   458  000001                     __pcstackCOMRAM:
   459                           	callstack 0
   460  000001                     ??_INTERRUPT_InterruptManager:
   461  000001                     
   462                           ; 1 bytes @ 0x0
   463  000001                     	ds	4
   464  000005                     ?_strlen:
   465                           	callstack 0
   466  000005                     ?_isupper:
   467                           	callstack 0
   468  000005                     ?_isalpha:
   469                           	callstack 0
   470  000005                     ?_isdigit:
   471                           	callstack 0
   472  000005                     ?_isspace:
   473                           	callstack 0
   474  000005                     ?_islower:
   475                           	callstack 0
   476  000005                     ?___wmul:
   477                           	callstack 0
   478  000005                     I2C_Open@address:
   479                           	callstack 0
   480  000005                     I2C_Close@returnValue:
   481                           	callstack 0
   482  000005                     I2C_MasterSendTxData@data:
   483                           	callstack 0
   484  000005                     EUSART_Write@txData:
   485                           	callstack 0
   486  000005                     I2C_SetBuffer@buffer:
   487                           	callstack 0
   488  000005                     I2C_SetCallback@cb:
   489                           	callstack 0
   490  000005                     EUSART_SetFramingErrorHandler@interruptHandler:
   491                           	callstack 0
   492  000005                     EUSART_SetOverrunErrorHandler@interruptHandler:
   493                           	callstack 0
   494  000005                     EUSART_SetErrorHandler@interruptHandler:
   495                           	callstack 0
   496  000005                     EUSART_SetTxInterruptHandler@interruptHandler:
   497                           	callstack 0
   498  000005                     EUSART_SetRxInterruptHandler@interruptHandler:
   499                           	callstack 0
   500  000005                     ___wmul@multiplier:
   501                           	callstack 0
   502  000005                     isalpha@c:
   503                           	callstack 0
   504  000005                     isdigit@c:
   505                           	callstack 0
   506  000005                     isspace@c:
   507                           	callstack 0
   508  000005                     isupper@c:
   509                           	callstack 0
   510  000005                     strlen@s:
   511                           	callstack 0
   512  000005                     islower@c:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x4
   516  000005                     	ds	1
   517  000006                     I2C_Open@returnValue:
   518                           	callstack 0
   519  000006                     putch@txData:
   520                           	callstack 0
   521                           
   522                           ; 1 bytes @ 0x5
   523  000006                     	ds	1
   524  000007                     ??_isupper:
   525  000007                     ??_isalpha:
   526  000007                     ??_isdigit:
   527  000007                     ??_isspace:
   528  000007                     ??_islower:
   529  000007                     I2C_SetBuffer@bufferSize:
   530                           	callstack 0
   531  000007                     I2C_SetCallback@ptr:
   532                           	callstack 0
   533  000007                     ___wmul@multiplicand:
   534                           	callstack 0
   535  000007                     fputc@c:
   536                           	callstack 0
   537  000007                     strlen@a:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x6
   541  000007                     	ds	2
   542  000009                     I2C_SetCallback@idx:
   543                           	callstack 0
   544  000009                     ___wmul@product:
   545                           	callstack 0
   546  000009                     fputc@fp:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x8
   550  000009                     	ds	1
   551  00000A                     I2C_SetDataCompleteCallback@cb:
   552                           	callstack 0
   553  00000A                     I2C_SetAddressNackCallback@cb:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x9
   557  00000A                     	ds	1
   558  00000B                     ??_fputc:
   559  00000B                     ?_toupper:
   560                           	callstack 0
   561  00000B                     _isspace$2142:
   562                           	callstack 0
   563  00000B                     toupper@c:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0xA
   567  00000B                     	ds	1
   568  00000C                     ?_atoi:
   569                           	callstack 0
   570  00000C                     I2C_SetDataCompleteCallback@ptr:
   571                           	callstack 0
   572  00000C                     I2C_SetAddressNackCallback@ptr:
   573                           	callstack 0
   574  00000C                     atoi@s:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0xB
   578  00000C                     	ds	1
   579  00000D                     ??_toupper:
   580                           
   581                           ; 1 bytes @ 0xC
   582  00000D                     	ds	1
   583  00000E                     ??_atoi:
   584  00000E                     rd1RegCompleteHandler@ptr:
   585                           	callstack 0
   586  00000E                     rd2RegCompleteHandler@ptr:
   587                           	callstack 0
   588  00000E                     wr1RegCompleteHandler@ptr:
   589                           	callstack 0
   590  00000E                     wr2RegCompleteHandler@ptr:
   591                           	callstack 0
   592  00000E                     rdBlkRegCompleteHandler@ptr:
   593                           	callstack 0
   594  00000E                     I2C_CallbackReturnReset@funPtr:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0xD
   598  00000E                     	ds	2
   599  000010                     ??_I2C_DO_TX:
   600  000010                     ??_I2C_DO_RX:
   601  000010                     ??_I2C_DO_TX_EMPTY:
   602  000010                     ??_I2C_DO_ADDRESS_NACK:
   603  000010                     fputs@s:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0xF
   607  000010                     	ds	1
   608  000011                     _toupper$2191:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x10
   612  000011                     	ds	1
   613  000012                     ??_I2C_MasterFsm:
   614  000012                     atoi@neg:
   615                           	callstack 0
   616  000012                     fputs@fp:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x11
   620  000012                     	ds	2
   621  000014                     I2C_MasterOperation@read:
   622                           	callstack 0
   623  000014                     fputs@c:
   624                           	callstack 0
   625  000014                     _atoi$2115:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x13
   629  000014                     	ds	1
   630  000015                     I2C_MasterOperation@returnValue:
   631                           	callstack 0
   632  000015                     fputs@i:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x14
   636  000015                     	ds	1
   637  000016                     I2C_Read1ByteRegister@reg:
   638                           	callstack 0
   639  000016                     _atoi$2117:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x15
   643  000016                     	ds	1
   644  000017                     ?_pad:
   645                           	callstack 0
   646  000017                     I2C_Read1ByteRegister@address:
   647                           	callstack 0
   648  000017                     pad@fp:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x16
   652  000017                     	ds	1
   653  000018                     I2C_Read1ByteRegister@returnValue:
   654                           	callstack 0
   655  000018                     _atoi$2116:
   656                           	callstack 0
   657                           
   658                           ; 1 bytes @ 0x17
   659  000018                     	ds	1
   660  000019                     MCP79410_get_date@day:
   661                           	callstack 0
   662  000019                     MCP79410_get_time@hour:
   663                           	callstack 0
   664  000019                     pad@buf:
   665                           	callstack 0
   666  000019                     atoi@n:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x18
   670  000019                     	ds	2
   671  00001B                     MCP79410_get_date@mouth:
   672                           	callstack 0
   673  00001B                     MCP79410_get_time@min:
   674                           	callstack 0
   675  00001B                     pad@p:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x1A
   679  00001B                     	ds	2
   680  00001D                     ??_pad:
   681  00001D                     MCP79410_get_date@year:
   682                           	callstack 0
   683  00001D                     MCP79410_get_time@sec:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x1C
   687  00001D                     	ds	1
   688  00001E                     pad@i:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x1D
   692  00001E                     	ds	1
   693  00001F                     
   694                           ; 1 bytes @ 0x1E
   695  00001F                     	ds	1
   696  000020                     pad@w:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x1F
   700  000020                     	ds	2
   701  000022                     ?_xtoa:
   702                           	callstack 0
   703  000022                     xtoa@fp:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x21
   707  000022                     	ds	2
   708  000024                     xtoa@d:
   709                           	callstack 0
   710                           
   711                           ; 8 bytes @ 0x23
   712  000024                     	ds	8
   713  00002C                     xtoa@x:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0x2B
   717  00002C                     	ds	1
   718  00002D                     ??_xtoa:
   719                           
   720                           ; 1 bytes @ 0x2C
   721  00002D                     	ds	8
   722  000035                     _xtoa$2081:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x34
   726  000035                     	ds	2
   727  000037                     _xtoa$2082:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x36
   731  000037                     	ds	2
   732  000039                     xtoa@p:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x38
   736  000039                     	ds	2
   737  00003B                     xtoa@w:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x3A
   741  00003B                     	ds	2
   742  00003D                     xtoa@n:
   743                           	callstack 0
   744                           
   745                           ; 8 bytes @ 0x3C
   746  00003D                     	ds	8
   747  000045                     xtoa@i:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x44
   751  000045                     	ds	2
   752  000047                     xtoa@c:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x46
   756  000047                     	ds	2
   757  000049                     ?_vfpfcnvrt:
   758                           	callstack 0
   759  000049                     vfpfcnvrt@fp:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x48
   763  000049                     	ds	2
   764  00004B                     vfpfcnvrt@fmt:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x4A
   768  00004B                     	ds	2
   769  00004D                     vfpfcnvrt@ap:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x4C
   773  00004D                     	ds	2
   774  00004F                     ??_vfpfcnvrt:
   775                           
   776                           ; 1 bytes @ 0x4E
   777  00004F                     	ds	4
   778  000053                     vfprintf@cfmt:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x52
   782  000053                     	ds	2
   783  000055                     ??_main:
   784                           
   785                           ; 1 bytes @ 0x54
   786  000055                     	ds	2
   787                           
   788 ;;
   789 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   790 ;;
   791 ;; *************** function _main *****************
   792 ;; Defined at:
   793 ;;		line 58 in file "main.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;		None
   796 ;; Auto vars:     Size  Location     Type
   797 ;;		None
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   809 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;Total ram usage:        2 bytes
   812 ;; Hardware stack levels required when called:   14
   813 ;; This function calls:
   814 ;;		_MCP79410_get_date
   815 ;;		_MCP79410_get_time
   816 ;;		_SYSTEM_Initialize
   817 ;;		_printf
   818 ;; This function is called by:
   819 ;;		Startup code after reset
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           	psect	text0
   824  001A9C                     __ptext0:
   825                           	callstack 0
   826  001A9C                     _main:
   827                           	callstack 17
   828  001A9C                     
   829                           ;main.c: 60:     SYSTEM_Initialize();
   830  001A9C  EC3B  F013         	call	_SYSTEM_Initialize	;wreg free
   831  001AA0                     
   832                           ;main.c: 67:     (INTCONbits.GIE = 1);
   833  001AA0  8EF2               	bsf	242,7,c	;volatile
   834  001AA2                     
   835                           ;main.c: 73:     (INTCONbits.PEIE = 1);
   836  001AA2  8CF2               	bsf	242,6,c	;volatile
   837  001AA4                     
   838                           ;main.c: 78:     day = 0x03;
   839  001AA4  0E03               	movlw	3
   840  001AA6  0100               	movlb	0	; () banked
   841  001AA8  6FFC               	movwf	_day& (0+255),b
   842  001AAA                     
   843                           ; BSR set to: 0
   844                           ;main.c: 79:     month = 0x03;
   845  001AAA  0E03               	movlw	3
   846  001AAC  6FFB               	movwf	_month& (0+255),b
   847  001AAE                     
   848                           ; BSR set to: 0
   849                           ;main.c: 80:     year = 0x21;
   850  001AAE  0E21               	movlw	33
   851  001AB0  6FFA               	movwf	_year& (0+255),b
   852  001AB2                     
   853                           ; BSR set to: 0
   854                           ;main.c: 81:     hour = 0x19;
   855  001AB2  0E19               	movlw	25
   856  001AB4  6FF9               	movwf	_hour& (0+255),b
   857  001AB6                     
   858                           ; BSR set to: 0
   859                           ;main.c: 82:     min = 0x30;
   860  001AB6  0E30               	movlw	48
   861  001AB8  6FF8               	movwf	_min& (0+255),b
   862  001ABA                     l4353:
   863                           
   864                           ;main.c: 86:         MCP79410_get_date(&day,&month,&year);
   865  001ABA  0EFC               	movlw	low _day
   866  001ABC  6E19               	movwf	MCP79410_get_date@day^0,c
   867  001ABE  0E00               	movlw	high _day
   868  001AC0  6E1A               	movwf	(MCP79410_get_date@day+1)^0,c
   869  001AC2  0EFB               	movlw	low _month
   870  001AC4  6E1B               	movwf	MCP79410_get_date@mouth^0,c
   871  001AC6  0E00               	movlw	high _month
   872  001AC8  6E1C               	movwf	(MCP79410_get_date@mouth+1)^0,c
   873  001ACA  0EFA               	movlw	low _year
   874  001ACC  6E1D               	movwf	MCP79410_get_date@year^0,c
   875  001ACE  0E00               	movlw	high _year
   876  001AD0  6E1E               	movwf	(MCP79410_get_date@year+1)^0,c
   877  001AD2  ECEE  F00F         	call	_MCP79410_get_date	;wreg free
   878  001AD6                     
   879                           ;main.c: 87:         MCP79410_get_time(&hour,&min,&sec);
   880  001AD6  0EF9               	movlw	low _hour
   881  001AD8  6E19               	movwf	MCP79410_get_time@hour^0,c
   882  001ADA  0E00               	movlw	high _hour
   883  001ADC  6E1A               	movwf	(MCP79410_get_time@hour+1)^0,c
   884  001ADE  0EF8               	movlw	low _min
   885  001AE0  6E1B               	movwf	MCP79410_get_time@min^0,c
   886  001AE2  0E00               	movlw	high _min
   887  001AE4  6E1C               	movwf	(MCP79410_get_time@min+1)^0,c
   888  001AE6  0ECB               	movlw	low _sec
   889  001AE8  6E1D               	movwf	MCP79410_get_time@sec^0,c
   890  001AEA  0E00               	movlw	high _sec
   891  001AEC  6E1E               	movwf	(MCP79410_get_time@sec+1)^0,c
   892  001AEE  EC86  F00E         	call	_MCP79410_get_time	;wreg free
   893  001AF2                     
   894                           ;main.c: 88:         printf("RTC: 20%02x-%02x-%02x %02x:%02x:%02x\r\n",year,month,day,ho
      +                          ur,min,sec);
   895  001AF2  0E21               	movlw	low STR_1
   896  001AF4  0100               	movlb	0	; () banked
   897  001AF6  6FDF               	movwf	printf@fmt& (0+255),b
   898  001AF8  0E10               	movlw	high STR_1
   899  001AFA  6FE0               	movwf	(printf@fmt+1)& (0+255),b
   900  001AFC  C0FA  F0E1         	movff	_year,?_printf+2
   901  001B00  6BE2               	clrf	(?_printf+3)& (0+255),b
   902  001B02  C0FB  F0E3         	movff	_month,?_printf+4
   903  001B06  6BE4               	clrf	(?_printf+5)& (0+255),b
   904  001B08  C0FC  F0E5         	movff	_day,?_printf+6
   905  001B0C  6BE6               	clrf	(?_printf+7)& (0+255),b
   906  001B0E  C0F9  F0E7         	movff	_hour,?_printf+8
   907  001B12  6BE8               	clrf	(?_printf+9)& (0+255),b
   908  001B14  C0F8  F0E9         	movff	_min,?_printf+10
   909  001B18  6BEA               	clrf	(?_printf+11)& (0+255),b
   910  001B1A  C0CB  F0EB         	movff	_sec,?_printf+12
   911  001B1E  6BEC               	clrf	(?_printf+13)& (0+255),b
   912  001B20  ECBA  F012         	call	_printf	;wreg free
   913  001B24                     
   914                           ;main.c: 89:      _delay((unsigned long)((1000)*(8000000/4000.0)));
   915  001B24  0E0B               	movlw	11
   916  001B26  6E56               	movwf	(??_main+1)^0,c
   917  001B28  0E26               	movlw	38
   918  001B2A  6E55               	movwf	??_main^0,c
   919  001B2C  0E5E               	movlw	94
   920  001B2E                     u2957:
   921  001B2E  2EE8               	decfsz	wreg,f,c
   922  001B30  D7FE               	bra	u2957
   923  001B32  2E55               	decfsz	??_main^0,f,c
   924  001B34  D7FC               	bra	u2957
   925  001B36  2E56               	decfsz	(??_main+1)^0,f,c
   926  001B38  D7FA               	bra	u2957
   927  001B3A  EF5D  F00D         	goto	l4353
   928  001B3E  EF58  F000         	goto	start
   929  001B42                     __end_of_main:
   930                           	callstack 0
   931                           
   932 ;; *************** function _printf *****************
   933 ;; Defined at:
   934 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\printf.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;  fmt             2   19[BANK0 ] PTR const unsigned char 
   937 ;;		 -> STR_1(39), 
   938 ;; Auto vars:     Size  Location     Type
   939 ;;  ap              2    2[BANK1 ] PTR void [1]
   940 ;;		 -> ?_printf(2), 
   941 ;;  ret             2    0        int 
   942 ;; Return value:  Size  Location     Type
   943 ;;                  2   19[BANK0 ] int 
   944 ;; Registers used:
   945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   951 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   952 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Totals:         0      14       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;Total ram usage:       18 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; Hardware stack levels required when called:   12
   958 ;; This function calls:
   959 ;;		_vfprintf
   960 ;; This function is called by:
   961 ;;		_main
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text1
   966  002574                     __ptext1:
   967                           	callstack 0
   968  002574                     _printf:
   969                           	callstack 18
   970  002574  0EE1               	movlw	low (?_printf+2)
   971  002576  0101               	movlb	1	; () banked
   972  002578  6F02               	movwf	printf@ap& (0+255),b
   973  00257A  0E00               	movlw	high (?_printf+2)
   974  00257C  6F03               	movwf	(printf@ap+1)& (0+255),b
   975  00257E                     
   976                           ; BSR set to: 1
   977  00257E  0E00               	movlw	0
   978  002580  0100               	movlb	0	; () banked
   979  002582  6FD9               	movwf	vfprintf@fp& (0+255),b
   980  002584  0E00               	movlw	0
   981  002586  6FDA               	movwf	(vfprintf@fp+1)& (0+255),b
   982  002588  C0DF  F0DB         	movff	printf@fmt,vfprintf@fmt
   983  00258C  C0E0  F0DC         	movff	printf@fmt+1,vfprintf@fmt+1
   984  002590  0E02               	movlw	low printf@ap
   985  002592  6FDD               	movwf	vfprintf@ap& (0+255),b
   986  002594  0E01               	movlw	high printf@ap
   987  002596  6FDE               	movwf	(vfprintf@ap+1)& (0+255),b
   988  002598  EC56  F010         	call	_vfprintf	;wreg free
   989  00259C  0012               	return		;funcret
   990  00259E                     __end_of_printf:
   991                           	callstack 0
   992                           
   993 ;; *************** function _vfprintf *****************
   994 ;; Defined at:
   995 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
   998 ;;		 -> NULL(0), 
   999 ;;  fmt             2   15[BANK0 ] PTR const unsigned char 
  1000 ;;		 -> STR_1(39), 
  1001 ;;  ap              2   17[BANK0 ] PTR PTR void 
  1002 ;;		 -> printf@ap(2), 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  1005 ;;		 -> STR_1(39), 
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  2   13[BANK0 ] int 
  1008 ;; Registers used:
  1009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1015 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;Total ram usage:        8 bytes
  1020 ;; Hardware stack levels used:    1
  1021 ;; Hardware stack levels required when called:   11
  1022 ;; This function calls:
  1023 ;;		_vfpfcnvrt
  1024 ;; This function is called by:
  1025 ;;		_printf
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	text2
  1030  0020AC                     __ptext2:
  1031                           	callstack 0
  1032  0020AC                     _vfprintf:
  1033                           	callstack 18
  1034  0020AC                     
  1035                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1036  0020AC  C0DB  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  1037  0020B0  C0DC  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1038  0020B4                     
  1039                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  1040  0020B4  0E00               	movlw	0
  1041  0020B6  0100               	movlb	0	; () banked
  1042  0020B8  6FA0               	movwf	(_nout+1)& (0+255),b
  1043  0020BA  0E00               	movlw	0
  1044  0020BC  6F9F               	movwf	_nout& (0+255),b
  1045                           
  1046                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1047  0020BE  EF74  F010         	goto	l4329
  1048  0020C2                     l4327:
  1049                           
  1050                           ; BSR set to: 0
  1051                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1052  0020C2  C0D9  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  1053  0020C6  C0DA  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1054  0020CA  0E53               	movlw	low vfprintf@cfmt
  1055  0020CC  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  1056  0020CE  0E00               	movlw	high vfprintf@cfmt
  1057  0020D0  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1058  0020D2  C0DD  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1059  0020D6  C0DE  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1060  0020DA  EC25  F008         	call	_vfpfcnvrt	;wreg free
  1061  0020DE  5049               	movf	?_vfpfcnvrt^0,w,c
  1062  0020E0  0100               	movlb	0	; () banked
  1063  0020E2  279F               	addwf	_nout& (0+255),f,b
  1064  0020E4  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
  1065  0020E6  23A0               	addwfc	(_nout+1)& (0+255),f,b
  1066  0020E8                     l4329:
  1067                           
  1068                           ; BSR set to: 0
  1069                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1070  0020E8  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  1071  0020EC  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1072  0020F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1073  0020F0  6AF8               	clrf	tblptru,c
  1074  0020F2                     	endif
  1075  0020F2                     	if	0	;tblptru may be non-zero
  1076  0020F2                     	endif
  1077  0020F2  0008               	tblrd		*
  1078  0020F4  50F5               	movf	tablat,w,c
  1079  0020F6  0900               	iorlw	0
  1080  0020F8  A4D8               	btfss	status,2,c
  1081  0020FA  EF81  F010         	goto	u2941
  1082  0020FE  EF83  F010         	goto	u2940
  1083  002102                     u2941:
  1084  002102  EF61  F010         	goto	l4327
  1085  002106                     u2940:
  1086  002106                     
  1087                           ; BSR set to: 0
  1088                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1089  002106  C09F  F0D9         	movff	_nout,?_vfprintf
  1090  00210A  C0A0  F0DA         	movff	_nout+1,?_vfprintf+1
  1091  00210E                     
  1092                           ; BSR set to: 0
  1093  00210E  0012               	return		;funcret
  1094  002110                     __end_of_vfprintf:
  1095                           	callstack 0
  1096                           
  1097 ;; *************** function _vfpfcnvrt *****************
  1098 ;; Defined at:
  1099 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  1102 ;;		 -> NULL(0), 
  1103 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  1104 ;;		 -> vfprintf@cfmt(2), 
  1105 ;;  ap              2   76[COMRAM] PTR PTR void 
  1106 ;;		 -> printf@ap(2), 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  llu             8    0[BANK0 ] unsigned long long 
  1109 ;;  ll              8    0        long long 
  1110 ;;  f               4    0        long long 
  1111 ;;  vp              3    0        PTR void 
  1112 ;;  ct              3    0        unsigned char [3]
  1113 ;;  cp              3    0        PTR unsigned char 
  1114 ;;  done            2    9[BANK0 ] int 
  1115 ;;  i               2    0        int 
  1116 ;;  c               1    8[BANK0 ] unsigned char 
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  2   72[COMRAM] int 
  1119 ;; Registers used:
  1120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1126 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1127 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1129 ;;      Totals:        10      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1130 ;;Total ram usage:       23 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; Hardware stack levels required when called:   10
  1133 ;; This function calls:
  1134 ;;		_atoi
  1135 ;;		_fputc
  1136 ;;		_isdigit
  1137 ;;		_xtoa
  1138 ;; This function is called by:
  1139 ;;		_vfprintf
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           	psect	text3
  1144  00104A                     __ptext3:
  1145                           	callstack 0
  1146  00104A                     _vfpfcnvrt:
  1147                           	callstack 18
  1148  00104A                     
  1149                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  1150  00104A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1151  00104E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1152  001052  CFDE FFF6          	movff	postinc2,tblptrl
  1153  001056  CFDD FFF7          	movff	postdec2,tblptrh
  1154  00105A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1155  00105A  6AF8               	clrf	tblptru,c
  1156  00105C                     	endif
  1157  00105C                     	if	0	;tblptru may be non-zero
  1158  00105C                     	endif
  1159  00105C  0008               	tblrd		*
  1160  00105E  50F5               	movf	tablat,w,c
  1161  001060  0A25               	xorlw	37
  1162  001062  A4D8               	btfss	status,2,c
  1163  001064  EF36  F008         	goto	u2831
  1164  001068  EF38  F008         	goto	u2830
  1165  00106C                     u2831:
  1166  00106C  EFD5  F009         	goto	l4309
  1167  001070                     u2830:
  1168  001070                     
  1169                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1170  001070  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1171  001074  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1172  001078  2ADE               	incf	postinc2,f,c
  1173  00107A  0E00               	movlw	0
  1174  00107C  22DD               	addwfc	postdec2,f,c
  1175  00107E                     
  1176                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1177  00107E  0E00               	movlw	0
  1178  001080  0100               	movlb	0	; () banked
  1179  001082  6FA2               	movwf	(_width+1)& (0+255),b
  1180  001084  0E00               	movlw	0
  1181  001086  6FA1               	movwf	_width& (0+255),b
  1182  001088  C0A1  F0A5         	movff	_width,_flags
  1183  00108C  C0A2  F0A6         	movff	_width+1,_flags+1
  1184  001090                     
  1185                           ; BSR set to: 0
  1186                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1187  001090  69A3               	setf	_prec& (0+255),b
  1188  001092  69A4               	setf	(_prec+1)& (0+255),b
  1189  001094                     
  1190                           ; BSR set to: 0
  1191                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  1192  001094  0E00               	movlw	0
  1193  001096  6FD6               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1194  001098  0E00               	movlw	0
  1195  00109A  6FD5               	movwf	vfpfcnvrt@done& (0+255),b
  1196                           
  1197                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1198  00109C  EF97  F008         	goto	l4257
  1199  0010A0                     l4231:
  1200                           
  1201                           ; BSR set to: 0
  1202                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  1203  0010A0  81A5               	bsf	_flags& (0+255),0,b
  1204  0010A2                     l4233:
  1205                           
  1206                           ; BSR set to: 0
  1207                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  1208  0010A2  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1209  0010A6  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1210  0010AA  2ADE               	incf	postinc2,f,c
  1211  0010AC  0E00               	movlw	0
  1212  0010AE  22DD               	addwfc	postdec2,f,c
  1213                           
  1214                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  1215  0010B0  EF97  F008         	goto	l4257
  1216  0010B4                     l4235:
  1217                           
  1218                           ; BSR set to: 0
  1219                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  1220  0010B4  83A5               	bsf	_flags& (0+255),1,b
  1221  0010B6  EF51  F008         	goto	l4233
  1222  0010BA                     l4239:
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  1226  0010BA  85A5               	bsf	_flags& (0+255),2,b
  1227  0010BC  EF51  F008         	goto	l4233
  1228  0010C0                     l4243:
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  1232  0010C0  87A5               	bsf	_flags& (0+255),3,b
  1233  0010C2  EF51  F008         	goto	l4233
  1234  0010C6                     l4247:
  1235                           
  1236                           ; BSR set to: 0
  1237                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  1238  0010C6  89A5               	bsf	_flags& (0+255),4,b
  1239  0010C8  EF51  F008         	goto	l4233
  1240  0010CC                     l4251:
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  1244  0010CC  0E00               	movlw	0
  1245  0010CE  6FD6               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1246  0010D0  0E01               	movlw	1
  1247  0010D2  6FD5               	movwf	vfpfcnvrt@done& (0+255),b
  1248                           
  1249                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  1250  0010D4  EF97  F008         	goto	l4257
  1251  0010D8                     l4255:
  1252                           
  1253                           ; BSR set to: 0
  1254  0010D8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1255  0010DC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1256  0010E0  CFDE FFF6          	movff	postinc2,tblptrl
  1257  0010E4  CFDD FFF7          	movff	postdec2,tblptrh
  1258  0010E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1259  0010E8  6AF8               	clrf	tblptru,c
  1260  0010EA                     	endif
  1261  0010EA                     	if	0	;tblptru may be non-zero
  1262  0010EA                     	endif
  1263  0010EA  0008               	tblrd		*
  1264  0010EC  50F5               	movf	tablat,w,c
  1265  0010EE  6E4F               	movwf	??_vfpfcnvrt^0,c
  1266  0010F0  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
  1267                           
  1268                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1269                           ; Switch size 1, requested type "simple"
  1270                           ; Number of cases is 1, Range of values is 0 to 0
  1271                           ; switch strategies available:
  1272                           ; Name         Instructions Cycles
  1273                           ; simple_byte            4     3 (average)
  1274                           ;	Chosen strategy is simple_byte
  1275  0010F2  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  1276  0010F4  0A00               	xorlw	0	; case 0
  1277  0010F6  B4D8               	btfsc	status,2,c
  1278  0010F8  EF80  F008         	goto	l4491
  1279  0010FC  EF66  F008         	goto	l4251
  1280  001100                     l4491:
  1281                           
  1282                           ; BSR set to: 0
  1283                           ; Switch size 1, requested type "simple"
  1284                           ; Number of cases is 5, Range of values is 32 to 48
  1285                           ; switch strategies available:
  1286                           ; Name         Instructions Cycles
  1287                           ; simple_byte           16     9 (average)
  1288                           ;	Chosen strategy is simple_byte
  1289  001100  504F               	movf	??_vfpfcnvrt^0,w,c
  1290  001102  0A20               	xorlw	32	; case 32
  1291  001104  B4D8               	btfsc	status,2,c
  1292  001106  EF60  F008         	goto	l4243
  1293  00110A  0A03               	xorlw	3	; case 35
  1294  00110C  B4D8               	btfsc	status,2,c
  1295  00110E  EF63  F008         	goto	l4247
  1296  001112  0A08               	xorlw	8	; case 43
  1297  001114  B4D8               	btfsc	status,2,c
  1298  001116  EF5D  F008         	goto	l4239
  1299  00111A  0A06               	xorlw	6	; case 45
  1300  00111C  B4D8               	btfsc	status,2,c
  1301  00111E  EF50  F008         	goto	l4231
  1302  001122  0A1D               	xorlw	29	; case 48
  1303  001124  B4D8               	btfsc	status,2,c
  1304  001126  EF5A  F008         	goto	l4235
  1305  00112A  EF66  F008         	goto	l4251
  1306  00112E                     l4257:
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1310  00112E  51D5               	movf	vfpfcnvrt@done& (0+255),w,b
  1311  001130  11D6               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1312  001132  B4D8               	btfsc	status,2,c
  1313  001134  EF9E  F008         	goto	u2841
  1314  001138  EFA0  F008         	goto	u2840
  1315  00113C                     u2841:
  1316  00113C  EF6C  F008         	goto	l4255
  1317  001140                     u2840:
  1318  001140                     
  1319                           ; BSR set to: 0
  1320                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  1321  001140  A1A5               	btfss	_flags& (0+255),0,b
  1322  001142  EFA5  F008         	goto	u2851
  1323  001146  EFA7  F008         	goto	u2850
  1324  00114A                     u2851:
  1325  00114A  EFA8  F008         	goto	l4261
  1326  00114E                     u2850:
  1327  00114E                     
  1328                           ; BSR set to: 0
  1329                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  1330  00114E  93A5               	bcf	_flags& (0+255),1,b
  1331  001150                     l4261:
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  1335  001150  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1336  001154  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1337  001158  CFDE FFF6          	movff	postinc2,tblptrl
  1338  00115C  CFDD FFF7          	movff	postdec2,tblptrh
  1339  001160                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1340  001160  6AF8               	clrf	tblptru,c
  1341  001162                     	endif
  1342  001162                     	if	0	;tblptru may be non-zero
  1343  001162                     	endif
  1344  001162  0008               	tblrd		*
  1345  001164  50F5               	movf	tablat,w,c
  1346  001166  0A2A               	xorlw	42
  1347  001168  A4D8               	btfss	status,2,c
  1348  00116A  EFB9  F008         	goto	u2861
  1349  00116E  EFBB  F008         	goto	u2860
  1350  001172                     u2861:
  1351  001172  EFE4  F008         	goto	l4269
  1352  001176                     u2860:
  1353  001176                     
  1354                           ; BSR set to: 0
  1355                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  1356  001176  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1357  00117A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1358  00117E  2ADE               	incf	postinc2,f,c
  1359  001180  0E00               	movlw	0
  1360  001182  22DD               	addwfc	postdec2,f,c
  1361                           
  1362                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1363  001184  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1364  001188  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1365  00118C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  1366  001190  0E02               	movlw	2
  1367  001192  26DE               	addwf	postinc2,f,c
  1368  001194  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  1369  001198  0E00               	movlw	0
  1370  00119A  22DD               	addwfc	postdec2,f,c
  1371  00119C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1372  0011A0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1373  0011A4  CFDE F0A1          	movff	postinc2,_width
  1374  0011A8  CFDD F0A2          	movff	postdec2,_width+1
  1375  0011AC                     
  1376                           ; BSR set to: 0
  1377                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  1378  0011AC  BFA2               	btfsc	(_width+1)& (0+255),7,b
  1379  0011AE  EFDD  F008         	goto	u2870
  1380  0011B2  EFDB  F008         	goto	u2871
  1381  0011B6                     u2871:
  1382  0011B6  EF29  F009         	goto	l4279
  1383  0011BA                     u2870:
  1384  0011BA                     
  1385                           ; BSR set to: 0
  1386                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  1387  0011BA  81A5               	bsf	_flags& (0+255),0,b
  1388                           
  1389                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  1390  0011BC  6DA1               	negf	_width& (0+255),b
  1391  0011BE  1FA2               	comf	(_width+1)& (0+255),f,b
  1392  0011C0  B0D8               	btfsc	status,0,c
  1393  0011C2  2BA2               	incf	(_width+1)& (0+255),f,b
  1394  0011C4  EF29  F009         	goto	l4279
  1395  0011C8                     l4269:
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  1399  0011C8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1400  0011CC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1401  0011D0  CFDE F00C          	movff	postinc2,atoi@s
  1402  0011D4  CFDD F00D          	movff	postdec2,atoi@s+1
  1403  0011D8  EC5E  F00B         	call	_atoi	;wreg free
  1404  0011DC  C00C  F0A1         	movff	?_atoi,_width
  1405  0011E0  C00D  F0A2         	movff	?_atoi+1,_width+1
  1406                           
  1407                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1408  0011E4  EFFB  F008         	goto	l4273
  1409  0011E8                     l4271:
  1410                           
  1411                           ; BSR set to: 0
  1412                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  1413  0011E8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1414  0011EC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1415  0011F0  2ADE               	incf	postinc2,f,c
  1416  0011F2  0E00               	movlw	0
  1417  0011F4  22DD               	addwfc	postdec2,f,c
  1418  0011F6                     l4273:
  1419  0011F6  0ED0               	movlw	208
  1420  0011F8  6E4F               	movwf	??_vfpfcnvrt^0,c
  1421  0011FA  0EFF               	movlw	255
  1422  0011FC  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
  1423  0011FE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1424  001202  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1425  001206  CFDE FFF6          	movff	postinc2,tblptrl
  1426  00120A  CFDD FFF7          	movff	postdec2,tblptrh
  1427  00120E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1428  00120E  6AF8               	clrf	tblptru,c
  1429  001210                     	endif
  1430  001210                     	if	0	;tblptru may be non-zero
  1431  001210                     	endif
  1432  001210  0008               	tblrd		*
  1433  001212  50F5               	movf	tablat,w,c
  1434  001214  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
  1435  001216  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
  1436  001218  504F               	movf	??_vfpfcnvrt^0,w,c
  1437  00121A  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1438  00121C  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  1439  00121E  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1440  001220  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  1441  001222  E10A               	bnz	u2880
  1442  001224  0E0A               	movlw	10
  1443  001226  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1444  001228  A0D8               	btfss	status,0,c
  1445  00122A  EF19  F009         	goto	u2881
  1446  00122E  EF1C  F009         	goto	u2880
  1447  001232                     u2881:
  1448  001232  0E01               	movlw	1
  1449  001234  EF1D  F009         	goto	u2890
  1450  001238                     u2880:
  1451  001238  0E00               	movlw	0
  1452  00123A                     u2890:
  1453  00123A  0100               	movlb	0	; () banked
  1454  00123C  6FD7               	movwf	_vfpfcnvrt$2097& (0+255),b
  1455  00123E  6BD8               	clrf	(_vfpfcnvrt$2097+1)& (0+255),b
  1456  001240                     
  1457                           ; BSR set to: 0
  1458  001240  51D7               	movf	_vfpfcnvrt$2097& (0+255),w,b
  1459  001242  11D8               	iorwf	(_vfpfcnvrt$2097+1)& (0+255),w,b
  1460  001244  A4D8               	btfss	status,2,c
  1461  001246  EF27  F009         	goto	u2901
  1462  00124A  EF29  F009         	goto	u2900
  1463  00124E                     u2901:
  1464  00124E  EFF4  F008         	goto	l4271
  1465  001252                     u2900:
  1466  001252                     l4279:
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1470  001252  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1471  001256  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1472  00125A  CFDE FFF6          	movff	postinc2,tblptrl
  1473  00125E  CFDD FFF7          	movff	postdec2,tblptrh
  1474  001262                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1475  001262  6AF8               	clrf	tblptru,c
  1476  001264                     	endif
  1477  001264                     	if	0	;tblptru may be non-zero
  1478  001264                     	endif
  1479  001264  0008               	tblrd		*
  1480  001266  50F5               	movf	tablat,w,c
  1481  001268  0A78               	xorlw	120
  1482  00126A  B4D8               	btfsc	status,2,c
  1483  00126C  EF3A  F009         	goto	u2911
  1484  001270  EF3C  F009         	goto	u2910
  1485  001274                     u2911:
  1486  001274  EF4F  F009         	goto	l4283
  1487  001278                     u2910:
  1488  001278                     
  1489                           ; BSR set to: 0
  1490  001278  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1491  00127C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1492  001280  CFDE FFF6          	movff	postinc2,tblptrl
  1493  001284  CFDD FFF7          	movff	postdec2,tblptrh
  1494  001288                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1495  001288  6AF8               	clrf	tblptru,c
  1496  00128A                     	endif
  1497  00128A                     	if	0	;tblptru may be non-zero
  1498  00128A                     	endif
  1499  00128A  0008               	tblrd		*
  1500  00128C  50F5               	movf	tablat,w,c
  1501  00128E  0A58               	xorlw	88
  1502  001290  A4D8               	btfss	status,2,c
  1503  001292  EF4D  F009         	goto	u2921
  1504  001296  EF4F  F009         	goto	u2920
  1505  00129A                     u2921:
  1506  00129A  EF9E  F009         	goto	l4293
  1507  00129E                     u2920:
  1508  00129E                     l4283:
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  1512  00129E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1513  0012A2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1514  0012A6  CFDE FFF6          	movff	postinc2,tblptrl
  1515  0012AA  CFDD FFF7          	movff	postdec2,tblptrh
  1516  0012AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1517  0012AE  6AF8               	clrf	tblptru,c
  1518  0012B0                     	endif
  1519  0012B0                     	if	0	;tblptru may be non-zero
  1520  0012B0                     	endif
  1521  0012B0  0008               	tblrd		*
  1522  0012B2  CFF5 F0D4          	movff	tablat,vfpfcnvrt@c
  1523  0012B6                     
  1524                           ; BSR set to: 0
  1525                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  1526  0012B6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1527  0012BA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1528  0012BE  2ADE               	incf	postinc2,f,c
  1529  0012C0  0E00               	movlw	0
  1530  0012C2  22DD               	addwfc	postdec2,f,c
  1531  0012C4                     
  1532                           ; BSR set to: 0
  1533                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1534  0012C4  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1535  0012C8  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1536  0012CC  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  1537  0012D0  0E02               	movlw	2
  1538  0012D2  26DE               	addwf	postinc2,f,c
  1539  0012D4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  1540  0012D8  0E00               	movlw	0
  1541  0012DA  22DD               	addwfc	postdec2,f,c
  1542  0012DC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1543  0012E0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1544  0012E4  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  1545  0012E8  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  1546  0012EC  C051  F0CC         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1547  0012F0  C052  F0CD         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1548  0012F4  6BCE               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  1549  0012F6  6BCF               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  1550  0012F8  6BD0               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  1551  0012FA  6BD1               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  1552  0012FC  6BD2               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  1553  0012FE  6BD3               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  1554  001300                     
  1555                           ; BSR set to: 0
  1556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1280:            
      +                           return xtoa(fp, llu, c);
  1557  001300  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  1558  001304  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1559  001308  C0CC  F024         	movff	vfpfcnvrt@llu,xtoa@d
  1560  00130C  C0CD  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1561  001310  C0CE  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1562  001314  C0CF  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1563  001318  C0D0  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1564  00131C  C0D1  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1565  001320  C0D2  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1566  001324  C0D3  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1567  001328  C0D4  F02C         	movff	vfpfcnvrt@c,xtoa@x
  1568  00132C  ECF2  F009         	call	_xtoa	;wreg free
  1569  001330  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  1570  001334  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1571  001338  EFF1  F009         	goto	l1504
  1572  00133C                     l4293:
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  1576  00133C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1577  001340  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1578  001344  CFDE FFF6          	movff	postinc2,tblptrl
  1579  001348  CFDD FFF7          	movff	postdec2,tblptrh
  1580  00134C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1581  00134C  6AF8               	clrf	tblptru,c
  1582  00134E                     	endif
  1583  00134E                     	if	0	;tblptru may be non-zero
  1584  00134E                     	endif
  1585  00134E  0008               	tblrd		*
  1586  001350  50F5               	movf	tablat,w,c
  1587  001352  0A25               	xorlw	37
  1588  001354  A4D8               	btfss	status,2,c
  1589  001356  EFAF  F009         	goto	u2931
  1590  00135A  EFB1  F009         	goto	u2930
  1591  00135E                     u2931:
  1592  00135E  EFC8  F009         	goto	l4303
  1593  001362                     u2930:
  1594  001362                     
  1595                           ; BSR set to: 0
  1596                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  1597  001362  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1598  001366  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1599  00136A  2ADE               	incf	postinc2,f,c
  1600  00136C  0E00               	movlw	0
  1601  00136E  22DD               	addwfc	postdec2,f,c
  1602  001370                     
  1603                           ; BSR set to: 0
  1604                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  1605  001370  0E00               	movlw	0
  1606  001372  6E08               	movwf	(fputc@c+1)^0,c
  1607  001374  0E25               	movlw	37
  1608  001376  6E07               	movwf	fputc@c^0,c
  1609  001378  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1610  00137C  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1611  001380  ECF4  F00D         	call	_fputc	;wreg free
  1612  001384                     l4299:
  1613                           
  1614                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  1615  001384  0E00               	movlw	0
  1616  001386  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  1617  001388  0E01               	movlw	1
  1618  00138A  6E49               	movwf	?_vfpfcnvrt^0,c
  1619  00138C  EFF1  F009         	goto	l1504
  1620  001390                     l4303:
  1621                           
  1622                           ; BSR set to: 0
  1623                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  1624  001390  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1625  001394  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1626  001398  2ADE               	incf	postinc2,f,c
  1627  00139A  0E00               	movlw	0
  1628  00139C  22DD               	addwfc	postdec2,f,c
  1629  00139E                     
  1630                           ; BSR set to: 0
  1631                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  1632  00139E  0E00               	movlw	0
  1633  0013A0  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  1634  0013A2  0E00               	movlw	0
  1635  0013A4  6E49               	movwf	?_vfpfcnvrt^0,c
  1636  0013A6  EFF1  F009         	goto	l1504
  1637  0013AA                     l4309:
  1638                           
  1639                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  1640  0013AA  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1641  0013AE  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1642  0013B2  CFDE FFF6          	movff	postinc2,tblptrl
  1643  0013B6  CFDD FFF7          	movff	postdec2,tblptrh
  1644  0013BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1645  0013BA  6AF8               	clrf	tblptru,c
  1646  0013BC                     	endif
  1647  0013BC                     	if	0	;tblptru may be non-zero
  1648  0013BC                     	endif
  1649  0013BC  0008               	tblrd		*
  1650  0013BE  50F5               	movf	tablat,w,c
  1651  0013C0  6E07               	movwf	fputc@c^0,c
  1652  0013C2  6A08               	clrf	(fputc@c+1)^0,c
  1653  0013C4  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1654  0013C8  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1655  0013CC  ECF4  F00D         	call	_fputc	;wreg free
  1656  0013D0                     
  1657                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  1658  0013D0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1659  0013D4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1660  0013D8  2ADE               	incf	postinc2,f,c
  1661  0013DA  0E00               	movlw	0
  1662  0013DC  22DD               	addwfc	postdec2,f,c
  1663  0013DE  EFC2  F009         	goto	l4299
  1664  0013E2                     l1504:
  1665  0013E2  0012               	return		;funcret
  1666  0013E4                     __end_of_vfpfcnvrt:
  1667                           	callstack 0
  1668                           
  1669 ;; *************** function _xtoa *****************
  1670 ;; Defined at:
  1671 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  1674 ;;		 -> NULL(0), 
  1675 ;;  d               8   35[COMRAM] unsigned long long 
  1676 ;;  x               1   43[COMRAM] unsigned char 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  n               8   60[COMRAM] unsigned long long 
  1679 ;;  c               2   70[COMRAM] int 
  1680 ;;  i               2   68[COMRAM] int 
  1681 ;;  w               2   58[COMRAM] int 
  1682 ;;  p               2   56[COMRAM] int 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  2   33[COMRAM] int 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1692 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1696 ;;Total ram usage:       39 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    9
  1699 ;; This function calls:
  1700 ;;		_isalpha
  1701 ;;		_isupper
  1702 ;;		_pad
  1703 ;;		_toupper
  1704 ;; This function is called by:
  1705 ;;		_vfpfcnvrt
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text4
  1710  0013E4                     __ptext4:
  1711                           	callstack 0
  1712  0013E4                     _xtoa:
  1713                           	callstack 18
  1714  0013E4                     
  1715                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  1716  0013E4  0100               	movlb	0	; () banked
  1717  0013E6  BFA4               	btfsc	(_prec+1)& (0+255),7,b
  1718  0013E8  EFF8  F009         	goto	u2591
  1719  0013EC  EFFA  F009         	goto	u2590
  1720  0013F0                     u2591:
  1721  0013F0  EFFB  F009         	goto	l4117
  1722  0013F4                     u2590:
  1723  0013F4                     
  1724                           ; BSR set to: 0
  1725                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  1726  0013F4  93A5               	bcf	_flags& (0+255),1,b
  1727  0013F6                     l4117:
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  1731  0013F6  BFA4               	btfsc	(_prec+1)& (0+255),7,b
  1732  0013F8  EF08  F00A         	goto	u2600
  1733  0013FC  51A4               	movf	(_prec+1)& (0+255),w,b
  1734  0013FE  E106               	bnz	u2601
  1735  001400  05A3               	decf	_prec& (0+255),w,b
  1736  001402  B0D8               	btfsc	status,0,c
  1737  001404  EF06  F00A         	goto	u2601
  1738  001408  EF08  F00A         	goto	u2600
  1739  00140C                     u2601:
  1740  00140C  EF0E  F00A         	goto	l1450
  1741  001410                     u2600:
  1742  001410                     
  1743                           ; BSR set to: 0
  1744  001410  0E00               	movlw	0
  1745  001412  6E3A               	movwf	(xtoa@p+1)^0,c
  1746  001414  0E01               	movlw	1
  1747  001416  6E39               	movwf	xtoa@p^0,c
  1748  001418  EF12  F00A         	goto	l1452
  1749  00141C                     l1450:
  1750                           
  1751                           ; BSR set to: 0
  1752  00141C  C0A3  F039         	movff	_prec,xtoa@p
  1753  001420  C0A4  F03A         	movff	_prec+1,xtoa@p+1
  1754  001424                     l1452:
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  1758  001424  C0A1  F03B         	movff	_width,xtoa@w
  1759  001428  C0A2  F03C         	movff	_width+1,xtoa@w+1
  1760                           
  1761                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  1762  00142C  A9A5               	btfss	_flags& (0+255),4,b
  1763  00142E  EF1B  F00A         	goto	u2611
  1764  001432  EF1D  F00A         	goto	u2610
  1765  001436                     u2611:
  1766  001436  EF21  F00A         	goto	l4123
  1767  00143A                     u2610:
  1768  00143A                     
  1769                           ; BSR set to: 0
  1770                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  1771  00143A  0EFE               	movlw	254
  1772  00143C  263B               	addwf	xtoa@w^0,f,c
  1773  00143E  0EFF               	movlw	255
  1774  001440  223C               	addwfc	(xtoa@w+1)^0,f,c
  1775  001442                     l4123:
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  1779  001442  C024  F03D         	movff	xtoa@d,xtoa@n
  1780  001446  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  1781  00144A  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  1782  00144E  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  1783  001452  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  1784  001456  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  1785  00145A  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  1786  00145E  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  1787  001462                     
  1788                           ; BSR set to: 0
  1789                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  1790  001462  0E00               	movlw	0
  1791  001464  6E46               	movwf	(xtoa@i+1)^0,c
  1792  001466  0E1F               	movlw	31
  1793  001468  6E45               	movwf	xtoa@i^0,c
  1794  00146A                     
  1795                           ; BSR set to: 0
  1796                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  1797  00146A  0E00               	movlw	0
  1798  00146C  6FCA               	movwf	(_dbuf+31)& (0+255),b
  1799                           
  1800                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1801  00146E  EFEC  F00A         	goto	l4159
  1802  001472                     l4129:
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  1805  001472  0645               	decf	xtoa@i^0,f,c
  1806  001474  A0D8               	btfss	status,0,c
  1807  001476  0646               	decf	(xtoa@i+1)^0,f,c
  1808  001478                     
  1809                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  1810  001478  0E0F               	movlw	15
  1811  00147A  143D               	andwf	xtoa@n^0,w,c
  1812  00147C  6E47               	movwf	xtoa@c^0,c
  1813  00147E  6A48               	clrf	(xtoa@c+1)^0,c
  1814  001480                     
  1815                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  1816  001480  BE48               	btfsc	(xtoa@c+1)^0,7,c
  1817  001482  EF4C  F00A         	goto	u2621
  1818  001486  5048               	movf	(xtoa@c+1)^0,w,c
  1819  001488  E109               	bnz	u2620
  1820  00148A  0E0A               	movlw	10
  1821  00148C  5C47               	subwf	xtoa@c^0,w,c
  1822  00148E  A0D8               	btfss	status,0,c
  1823  001490  EF4C  F00A         	goto	u2621
  1824  001494  EF4E  F00A         	goto	u2620
  1825  001498                     u2621:
  1826  001498  EF56  F00A         	goto	l4137
  1827  00149C                     u2620:
  1828  00149C  0E57               	movlw	87
  1829  00149E  2447               	addwf	xtoa@c^0,w,c
  1830  0014A0  6E47               	movwf	xtoa@c^0,c
  1831  0014A2  0E00               	movlw	0
  1832  0014A4  2048               	addwfc	(xtoa@c+1)^0,w,c
  1833  0014A6  6E48               	movwf	(xtoa@c+1)^0,c
  1834  0014A8  EF5C  F00A         	goto	l1459
  1835  0014AC                     l4137:
  1836  0014AC  0E30               	movlw	48
  1837  0014AE  2447               	addwf	xtoa@c^0,w,c
  1838  0014B0  6E47               	movwf	xtoa@c^0,c
  1839  0014B2  0E00               	movlw	0
  1840  0014B4  2048               	addwfc	(xtoa@c+1)^0,w,c
  1841  0014B6  6E48               	movwf	(xtoa@c+1)^0,c
  1842  0014B8                     l1459:
  1843  0014B8  0EBF               	movlw	191
  1844  0014BA  6E2D               	movwf	??_xtoa^0,c
  1845  0014BC  0EFF               	movlw	255
  1846  0014BE  6E2E               	movwf	(??_xtoa+1)^0,c
  1847  0014C0  502C               	movf	xtoa@x^0,w,c
  1848  0014C2  6E2F               	movwf	(??_xtoa+2)^0,c
  1849  0014C4  6A30               	clrf	(??_xtoa+3)^0,c
  1850  0014C6  502D               	movf	??_xtoa^0,w,c
  1851  0014C8  262F               	addwf	(??_xtoa+2)^0,f,c
  1852  0014CA  502E               	movf	(??_xtoa+1)^0,w,c
  1853  0014CC  2230               	addwfc	(??_xtoa+3)^0,f,c
  1854  0014CE  5030               	movf	(??_xtoa+3)^0,w,c
  1855  0014D0  E10A               	bnz	u2630
  1856  0014D2  0E1A               	movlw	26
  1857  0014D4  5C2F               	subwf	(??_xtoa+2)^0,w,c
  1858  0014D6  A0D8               	btfss	status,0,c
  1859  0014D8  EF70  F00A         	goto	u2631
  1860  0014DC  EF73  F00A         	goto	u2630
  1861  0014E0                     u2631:
  1862  0014E0  0E01               	movlw	1
  1863  0014E2  EF74  F00A         	goto	u2640
  1864  0014E6                     u2630:
  1865  0014E6  0E00               	movlw	0
  1866  0014E8                     u2640:
  1867  0014E8  6E35               	movwf	_xtoa$2081^0,c
  1868  0014EA  6A36               	clrf	(_xtoa$2081+1)^0,c
  1869  0014EC  5035               	movf	_xtoa$2081^0,w,c
  1870  0014EE  1036               	iorwf	(_xtoa$2081+1)^0,w,c
  1871  0014F0  B4D8               	btfsc	status,2,c
  1872  0014F2  EF7D  F00A         	goto	u2651
  1873  0014F6  EF7F  F00A         	goto	u2650
  1874  0014FA                     u2651:
  1875  0014FA  EFAF  F00A         	goto	l4151
  1876  0014FE                     u2650:
  1877  0014FE  0E9F               	movlw	159
  1878  001500  6E2D               	movwf	??_xtoa^0,c
  1879  001502  0EFF               	movlw	255
  1880  001504  6E2E               	movwf	(??_xtoa+1)^0,c
  1881  001506  0E20               	movlw	32
  1882  001508  1047               	iorwf	xtoa@c^0,w,c
  1883  00150A  6E2F               	movwf	(??_xtoa+2)^0,c
  1884  00150C  0E00               	movlw	0
  1885  00150E  1048               	iorwf	(xtoa@c+1)^0,w,c
  1886  001510  6E30               	movwf	(??_xtoa+3)^0,c
  1887  001512  502D               	movf	??_xtoa^0,w,c
  1888  001514  262F               	addwf	(??_xtoa+2)^0,f,c
  1889  001516  502E               	movf	(??_xtoa+1)^0,w,c
  1890  001518  2230               	addwfc	(??_xtoa+3)^0,f,c
  1891  00151A  5030               	movf	(??_xtoa+3)^0,w,c
  1892  00151C  E10A               	bnz	u2660
  1893  00151E  0E1A               	movlw	26
  1894  001520  5C2F               	subwf	(??_xtoa+2)^0,w,c
  1895  001522  A0D8               	btfss	status,0,c
  1896  001524  EF96  F00A         	goto	u2661
  1897  001528  EF99  F00A         	goto	u2660
  1898  00152C                     u2661:
  1899  00152C  0E01               	movlw	1
  1900  00152E  EF9A  F00A         	goto	u2670
  1901  001532                     u2660:
  1902  001532  0E00               	movlw	0
  1903  001534                     u2670:
  1904  001534  6E37               	movwf	_xtoa$2082^0,c
  1905  001536  6A38               	clrf	(_xtoa$2082+1)^0,c
  1906  001538  5037               	movf	_xtoa$2082^0,w,c
  1907  00153A  1038               	iorwf	(_xtoa$2082+1)^0,w,c
  1908  00153C  B4D8               	btfsc	status,2,c
  1909  00153E  EFA3  F00A         	goto	u2681
  1910  001542  EFA5  F00A         	goto	u2680
  1911  001546                     u2681:
  1912  001546  EFAF  F00A         	goto	l4151
  1913  00154A                     u2680:
  1914  00154A                     
  1915                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  1916  00154A  C047  F00B         	movff	xtoa@c,toupper@c
  1917  00154E  C048  F00C         	movff	xtoa@c+1,toupper@c+1
  1918  001552  EC88  F010         	call	_toupper	;wreg free
  1919  001556  C00B  F047         	movff	?_toupper,xtoa@c
  1920  00155A  C00C  F048         	movff	?_toupper+1,xtoa@c+1
  1921  00155E                     l4151:
  1922                           
  1923                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  1924  00155E  0EAB               	movlw	low _dbuf
  1925  001560  2445               	addwf	xtoa@i^0,w,c
  1926  001562  6ED9               	movwf	fsr2l,c
  1927  001564  0E00               	movlw	high _dbuf
  1928  001566  2046               	addwfc	(xtoa@i+1)^0,w,c
  1929  001568  6EDA               	movwf	fsr2h,c
  1930  00156A  C047  FFDF         	movff	xtoa@c,indf2
  1931  00156E                     
  1932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  1933  00156E  0639               	decf	xtoa@p^0,f,c
  1934  001570  A0D8               	btfss	status,0,c
  1935  001572  063A               	decf	(xtoa@p+1)^0,f,c
  1936  001574                     
  1937                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  1938  001574  063B               	decf	xtoa@w^0,f,c
  1939  001576  A0D8               	btfss	status,0,c
  1940  001578  063C               	decf	(xtoa@w+1)^0,f,c
  1941  00157A                     
  1942                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  1943  00157A  C03D  F02D         	movff	xtoa@n,??_xtoa
  1944  00157E  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  1945  001582  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  1946  001586  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  1947  00158A  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  1948  00158E  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  1949  001592  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  1950  001596  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  1951  00159A  0E05               	movlw	5
  1952  00159C  EFD9  F00A         	goto	u2690
  1953  0015A0                     u2695:
  1954  0015A0  90D8               	bcf	status,0,c
  1955  0015A2  3234               	rrcf	(??_xtoa+7)^0,f,c
  1956  0015A4  3233               	rrcf	(??_xtoa+6)^0,f,c
  1957  0015A6  3232               	rrcf	(??_xtoa+5)^0,f,c
  1958  0015A8  3231               	rrcf	(??_xtoa+4)^0,f,c
  1959  0015AA  3230               	rrcf	(??_xtoa+3)^0,f,c
  1960  0015AC  322F               	rrcf	(??_xtoa+2)^0,f,c
  1961  0015AE  322E               	rrcf	(??_xtoa+1)^0,f,c
  1962  0015B0  322D               	rrcf	??_xtoa^0,f,c
  1963  0015B2                     u2690:
  1964  0015B2  2EE8               	decfsz	wreg,f,c
  1965  0015B4  EFD0  F00A         	goto	u2695
  1966  0015B8  C02D  F03D         	movff	??_xtoa,xtoa@n
  1967  0015BC  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  1968  0015C0  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  1969  0015C4  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  1970  0015C8  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  1971  0015CC  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  1972  0015D0  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  1973  0015D4  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  1974  0015D8                     l4159:
  1975                           
  1976                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1977  0015D8  BE46               	btfsc	(xtoa@i+1)^0,7,c
  1978  0015DA  EFF8  F00A         	goto	u2701
  1979  0015DE  5046               	movf	(xtoa@i+1)^0,w,c
  1980  0015E0  E109               	bnz	u2700
  1981  0015E2  0E02               	movlw	2
  1982  0015E4  5C45               	subwf	xtoa@i^0,w,c
  1983  0015E6  A0D8               	btfss	status,0,c
  1984  0015E8  EFF8  F00A         	goto	u2701
  1985  0015EC  EFFA  F00A         	goto	u2700
  1986  0015F0                     u2701:
  1987  0015F0  EF2B  F00B         	goto	l1473
  1988  0015F4                     u2700:
  1989  0015F4  503D               	movf	xtoa@n^0,w,c
  1990  0015F6  103E               	iorwf	(xtoa@n+1)^0,w,c
  1991  0015F8  103F               	iorwf	(xtoa@n+2)^0,w,c
  1992  0015FA  1040               	iorwf	(xtoa@n+3)^0,w,c
  1993  0015FC  1041               	iorwf	(xtoa@n+4)^0,w,c
  1994  0015FE  1042               	iorwf	(xtoa@n+5)^0,w,c
  1995  001600  1043               	iorwf	(xtoa@n+6)^0,w,c
  1996  001602  1044               	iorwf	(xtoa@n+7)^0,w,c
  1997  001604  A4D8               	btfss	status,2,c
  1998  001606  EF07  F00B         	goto	u2711
  1999  00160A  EF09  F00B         	goto	u2710
  2000  00160E                     u2711:
  2001  00160E  EF39  F00A         	goto	l4129
  2002  001612                     u2710:
  2003  001612  BE3A               	btfsc	(xtoa@p+1)^0,7,c
  2004  001614  EF16  F00B         	goto	u2720
  2005  001618  503A               	movf	(xtoa@p+1)^0,w,c
  2006  00161A  E106               	bnz	u2721
  2007  00161C  0439               	decf	xtoa@p^0,w,c
  2008  00161E  B0D8               	btfsc	status,0,c
  2009  001620  EF14  F00B         	goto	u2721
  2010  001624  EF16  F00B         	goto	u2720
  2011  001628                     u2721:
  2012  001628  EF39  F00A         	goto	l4129
  2013  00162C                     u2720:
  2014  00162C  BE3C               	btfsc	(xtoa@w+1)^0,7,c
  2015  00162E  EF21  F00B         	goto	u2731
  2016  001632  503C               	movf	(xtoa@w+1)^0,w,c
  2017  001634  E108               	bnz	u2730
  2018  001636  043B               	decf	xtoa@w^0,w,c
  2019  001638  A0D8               	btfss	status,0,c
  2020  00163A  EF21  F00B         	goto	u2731
  2021  00163E  EF23  F00B         	goto	u2730
  2022  001642                     u2731:
  2023  001642  EF2B  F00B         	goto	l1473
  2024  001646                     u2730:
  2025  001646  0100               	movlb	0	; () banked
  2026  001648  B3A5               	btfsc	_flags& (0+255),1,b
  2027  00164A  EF29  F00B         	goto	u2741
  2028  00164E  EF2B  F00B         	goto	u2740
  2029  001652                     u2741:
  2030  001652  EF39  F00A         	goto	l4129
  2031  001656                     u2740:
  2032  001656                     l1473:
  2033                           
  2034                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  2035  001656  0100               	movlb	0	; () banked
  2036  001658  A9A5               	btfss	_flags& (0+255),4,b
  2037  00165A  EF31  F00B         	goto	u2751
  2038  00165E  EF33  F00B         	goto	u2750
  2039  001662                     u2751:
  2040  001662  EF49  F00B         	goto	l4175
  2041  001666                     u2750:
  2042  001666                     
  2043                           ; BSR set to: 0
  2044                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  2045  001666  0645               	decf	xtoa@i^0,f,c
  2046  001668  A0D8               	btfss	status,0,c
  2047  00166A  0646               	decf	(xtoa@i+1)^0,f,c
  2048  00166C                     
  2049                           ; BSR set to: 0
  2050                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  2051  00166C  0EAB               	movlw	low _dbuf
  2052  00166E  2445               	addwf	xtoa@i^0,w,c
  2053  001670  6ED9               	movwf	fsr2l,c
  2054  001672  0E00               	movlw	high _dbuf
  2055  001674  2046               	addwfc	(xtoa@i+1)^0,w,c
  2056  001676  6EDA               	movwf	fsr2h,c
  2057  001678  C02C  FFDF         	movff	xtoa@x,indf2
  2058  00167C                     
  2059                           ; BSR set to: 0
  2060                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  2061  00167C  0645               	decf	xtoa@i^0,f,c
  2062  00167E  A0D8               	btfss	status,0,c
  2063  001680  0646               	decf	(xtoa@i+1)^0,f,c
  2064                           
  2065                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  2066  001682  0EAB               	movlw	low _dbuf
  2067  001684  2445               	addwf	xtoa@i^0,w,c
  2068  001686  6ED9               	movwf	fsr2l,c
  2069  001688  0E00               	movlw	high _dbuf
  2070  00168A  2046               	addwfc	(xtoa@i+1)^0,w,c
  2071  00168C  6EDA               	movwf	fsr2h,c
  2072  00168E  0E30               	movlw	48
  2073  001690  6EDF               	movwf	indf2,c
  2074  001692                     l4175:
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  2078  001692  C022  F017         	movff	xtoa@fp,pad@fp
  2079  001696  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  2080  00169A  0EAB               	movlw	low _dbuf
  2081  00169C  2445               	addwf	xtoa@i^0,w,c
  2082  00169E  6E19               	movwf	pad@buf^0,c
  2083  0016A0  0E00               	movlw	high _dbuf
  2084  0016A2  2046               	addwfc	(xtoa@i+1)^0,w,c
  2085  0016A4  6E1A               	movwf	(pad@buf+1)^0,c
  2086  0016A6  C03B  F01B         	movff	xtoa@w,pad@p
  2087  0016AA  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  2088  0016AE  EC2B  F00C         	call	_pad	;wreg free
  2089  0016B2  C017  F022         	movff	?_pad,?_xtoa
  2090  0016B6  C018  F023         	movff	?_pad+1,?_xtoa+1
  2091  0016BA  0012               	return		;funcret
  2092  0016BC                     __end_of_xtoa:
  2093                           	callstack 0
  2094                           
  2095 ;; *************** function _toupper *****************
  2096 ;; Defined at:
  2097 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  c               2   10[COMRAM] int 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  2   10[COMRAM] int 
  2104 ;; Registers used:
  2105 ;;		wreg, status,2, status,0
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;Total ram usage:        8 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    5
  2118 ;; This function calls:
  2119 ;;		_islower
  2120 ;; This function is called by:
  2121 ;;		_xtoa
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text5
  2126  002110                     __ptext5:
  2127                           	callstack 0
  2128  002110                     _toupper:
  2129                           	callstack 21
  2130  002110  0E9F               	movlw	159
  2131  002112  6E0D               	movwf	??_toupper^0,c
  2132  002114  0EFF               	movlw	255
  2133  002116  6E0E               	movwf	(??_toupper+1)^0,c
  2134  002118  C00B  F00F         	movff	toupper@c,??_toupper+2
  2135  00211C  C00C  F010         	movff	toupper@c+1,??_toupper+3
  2136  002120  500D               	movf	??_toupper^0,w,c
  2137  002122  260F               	addwf	(??_toupper+2)^0,f,c
  2138  002124  500E               	movf	(??_toupper+1)^0,w,c
  2139  002126  2210               	addwfc	(??_toupper+3)^0,f,c
  2140  002128  5010               	movf	(??_toupper+3)^0,w,c
  2141  00212A  E10A               	bnz	u2520
  2142  00212C  0E1A               	movlw	26
  2143  00212E  5C0F               	subwf	(??_toupper+2)^0,w,c
  2144  002130  A0D8               	btfss	status,0,c
  2145  002132  EF9D  F010         	goto	u2521
  2146  002136  EFA0  F010         	goto	u2520
  2147  00213A                     u2521:
  2148  00213A  0E01               	movlw	1
  2149  00213C  EFA1  F010         	goto	u2530
  2150  002140                     u2520:
  2151  002140  0E00               	movlw	0
  2152  002142                     u2530:
  2153  002142  6E11               	movwf	_toupper$2191^0,c
  2154  002144  6A12               	clrf	(_toupper$2191+1)^0,c
  2155  002146  5011               	movf	_toupper$2191^0,w,c
  2156  002148  1012               	iorwf	(_toupper$2191+1)^0,w,c
  2157  00214A  B4D8               	btfsc	status,2,c
  2158  00214C  EFAA  F010         	goto	u2541
  2159  002150  EFAC  F010         	goto	u2540
  2160  002154                     u2541:
  2161  002154  EFB2  F010         	goto	l1599
  2162  002158                     u2540:
  2163  002158  0E5F               	movlw	95
  2164  00215A  140B               	andwf	toupper@c^0,w,c
  2165  00215C  6E0B               	movwf	?_toupper^0,c
  2166  00215E  6A0C               	clrf	(?_toupper+1)^0,c
  2167  002160  EFB6  F010         	goto	l1604
  2168  002164                     l1599:
  2169  002164  C00B  F00B         	movff	toupper@c,?_toupper
  2170  002168  C00C  F00C         	movff	toupper@c+1,?_toupper+1
  2171  00216C                     l1604:
  2172  00216C  0012               	return		;funcret
  2173  00216E                     __end_of_toupper:
  2174                           	callstack 0
  2175                           
  2176 ;; *************** function _islower *****************
  2177 ;; Defined at:
  2178 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  c               2    4[COMRAM] int 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  2    4[COMRAM] int 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;Total ram usage:        6 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    4
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_toupper
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text6
  2207  00235E                     __ptext6:
  2208                           	callstack 0
  2209  00235E                     _islower:
  2210                           	callstack 21
  2211  00235E  0E9F               	movlw	159
  2212  002360  6E07               	movwf	??_islower^0,c
  2213  002362  0EFF               	movlw	255
  2214  002364  6E08               	movwf	(??_islower+1)^0,c
  2215  002366  C005  F009         	movff	islower@c,??_islower+2
  2216  00236A  C006  F00A         	movff	islower@c+1,??_islower+3
  2217  00236E  5007               	movf	??_islower^0,w,c
  2218  002370  2609               	addwf	(??_islower+2)^0,f,c
  2219  002372  5008               	movf	(??_islower+1)^0,w,c
  2220  002374  220A               	addwfc	(??_islower+3)^0,f,c
  2221  002376  500A               	movf	(??_islower+3)^0,w,c
  2222  002378  E10A               	bnz	u2420
  2223  00237A  0E1A               	movlw	26
  2224  00237C  5C09               	subwf	(??_islower+2)^0,w,c
  2225  00237E  A0D8               	btfss	status,0,c
  2226  002380  EFC4  F011         	goto	u2421
  2227  002384  EFC7  F011         	goto	u2420
  2228  002388                     u2421:
  2229  002388  0E01               	movlw	1
  2230  00238A  EFC8  F011         	goto	u2430
  2231  00238E                     u2420:
  2232  00238E  0E00               	movlw	0
  2233  002390                     u2430:
  2234  002390  6E05               	movwf	?_islower^0,c
  2235  002392  6A06               	clrf	(?_islower+1)^0,c
  2236  002394  0012               	return		;funcret
  2237  002396                     __end_of_islower:
  2238                           	callstack 0
  2239                           
  2240 ;; *************** function _pad *****************
  2241 ;; Defined at:
  2242 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  2245 ;;		 -> NULL(0), 
  2246 ;;  buf             2   24[COMRAM] PTR unsigned char 
  2247 ;;		 -> dbuf(32), 
  2248 ;;  p               2   26[COMRAM] int 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  w               2   31[COMRAM] int 
  2251 ;;  i               2   29[COMRAM] int 
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  2   22[COMRAM] int 
  2254 ;; Registers used:
  2255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2261 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2262 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2263 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;Total ram usage:       11 bytes
  2266 ;; Hardware stack levels used:    1
  2267 ;; Hardware stack levels required when called:    8
  2268 ;; This function calls:
  2269 ;;		_fputc
  2270 ;;		_fputs
  2271 ;;		_strlen
  2272 ;; This function is called by:
  2273 ;;		_xtoa
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text7
  2278  001856                     __ptext7:
  2279                           	callstack 0
  2280  001856                     _pad:
  2281                           	callstack 18
  2282  001856                     
  2283                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2284  001856  0100               	movlb	0	; () banked
  2285  001858  A1A5               	btfss	_flags& (0+255),0,b
  2286  00185A  EF31  F00C         	goto	u2441
  2287  00185E  EF33  F00C         	goto	u2440
  2288  001862                     u2441:
  2289  001862  EF3D  F00C         	goto	l4061
  2290  001866                     u2440:
  2291  001866                     
  2292                           ; BSR set to: 0
  2293                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2294  001866  C019  F010         	movff	pad@buf,fputs@s
  2295  00186A  C01A  F011         	movff	pad@buf+1,fputs@s+1
  2296  00186E  C017  F012         	movff	pad@fp,fputs@fp
  2297  001872  C018  F013         	movff	pad@fp+1,fputs@fp+1
  2298  001876  EC0C  F011         	call	_fputs	;wreg free
  2299  00187A                     l4061:
  2300                           
  2301                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2302  00187A  BE1C               	btfsc	(pad@p+1)^0,7,c
  2303  00187C  EF42  F00C         	goto	u2451
  2304  001880  EF44  F00C         	goto	u2450
  2305  001884                     u2451:
  2306  001884  EF4A  F00C         	goto	l4065
  2307  001888                     u2450:
  2308  001888  C01B  F020         	movff	pad@p,pad@w
  2309  00188C  C01C  F021         	movff	pad@p+1,pad@w+1
  2310  001890  EF4E  F00C         	goto	l1440
  2311  001894                     l4065:
  2312  001894  0E00               	movlw	0
  2313  001896  6E21               	movwf	(pad@w+1)^0,c
  2314  001898  0E00               	movlw	0
  2315  00189A  6E20               	movwf	pad@w^0,c
  2316  00189C                     l1440:
  2317                           
  2318                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2319  00189C  0E00               	movlw	0
  2320  00189E  6E1F               	movwf	(pad@i+1)^0,c
  2321  0018A0  0E00               	movlw	0
  2322  0018A2  6E1E               	movwf	pad@i^0,c
  2323                           
  2324                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2325  0018A4  EF60  F00C         	goto	l4071
  2326  0018A8                     l4067:
  2327                           
  2328                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2329  0018A8  0E00               	movlw	0
  2330  0018AA  6E08               	movwf	(fputc@c+1)^0,c
  2331  0018AC  0E20               	movlw	32
  2332  0018AE  6E07               	movwf	fputc@c^0,c
  2333  0018B0  C017  F009         	movff	pad@fp,fputc@fp
  2334  0018B4  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  2335  0018B8  ECF4  F00D         	call	_fputc	;wreg free
  2336  0018BC                     
  2337                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2338  0018BC  4A1E               	infsnz	pad@i^0,f,c
  2339  0018BE  2A1F               	incf	(pad@i+1)^0,f,c
  2340  0018C0                     l4071:
  2341                           
  2342                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2343  0018C0  5020               	movf	pad@w^0,w,c
  2344  0018C2  5C1E               	subwf	pad@i^0,w,c
  2345  0018C4  501F               	movf	(pad@i+1)^0,w,c
  2346  0018C6  0A80               	xorlw	128
  2347  0018C8  6E1D               	movwf	??_pad^0,c
  2348  0018CA  5021               	movf	(pad@w+1)^0,w,c
  2349  0018CC  0A80               	xorlw	128
  2350  0018CE  581D               	subwfb	??_pad^0,w,c
  2351  0018D0  A0D8               	btfss	status,0,c
  2352  0018D2  EF6D  F00C         	goto	u2461
  2353  0018D6  EF6F  F00C         	goto	u2460
  2354  0018DA                     u2461:
  2355  0018DA  EF54  F00C         	goto	l4067
  2356  0018DE                     u2460:
  2357  0018DE                     
  2358                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2359  0018DE  0100               	movlb	0	; () banked
  2360  0018E0  B1A5               	btfsc	_flags& (0+255),0,b
  2361  0018E2  EF75  F00C         	goto	u2471
  2362  0018E6  EF77  F00C         	goto	u2470
  2363  0018EA                     u2471:
  2364  0018EA  EF81  F00C         	goto	l4075
  2365  0018EE                     u2470:
  2366  0018EE                     
  2367                           ; BSR set to: 0
  2368                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2369  0018EE  C019  F010         	movff	pad@buf,fputs@s
  2370  0018F2  C01A  F011         	movff	pad@buf+1,fputs@s+1
  2371  0018F6  C017  F012         	movff	pad@fp,fputs@fp
  2372  0018FA  C018  F013         	movff	pad@fp+1,fputs@fp+1
  2373  0018FE  EC0C  F011         	call	_fputs	;wreg free
  2374  001902                     l4075:
  2375                           
  2376                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  2377  001902  C019  F005         	movff	pad@buf,strlen@s
  2378  001906  C01A  F006         	movff	pad@buf+1,strlen@s+1
  2379  00190A  EC03  F012         	call	_strlen	;wreg free
  2380  00190E  5020               	movf	pad@w^0,w,c
  2381  001910  2405               	addwf	?_strlen^0,w,c
  2382  001912  6E17               	movwf	?_pad^0,c
  2383  001914  5021               	movf	(pad@w+1)^0,w,c
  2384  001916  2006               	addwfc	(?_strlen+1)^0,w,c
  2385  001918  6E18               	movwf	(?_pad+1)^0,c
  2386  00191A  0012               	return		;funcret
  2387  00191C                     __end_of_pad:
  2388                           	callstack 0
  2389                           
  2390 ;; *************** function _strlen *****************
  2391 ;; Defined at:
  2392 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;  s               2    4[COMRAM] PTR const unsigned char 
  2395 ;;		 -> dbuf(32), 
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;  a               2    6[COMRAM] PTR const unsigned char 
  2398 ;;		 -> dbuf(32), 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  2    4[COMRAM] unsigned int 
  2401 ;; Registers used:
  2402 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2408 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2411 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2412 ;;Total ram usage:        4 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:    4
  2415 ;; This function calls:
  2416 ;;		Nothing
  2417 ;; This function is called by:
  2418 ;;		_pad
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text8
  2423  002406                     __ptext8:
  2424                           	callstack 0
  2425  002406                     _strlen:
  2426                           	callstack 21
  2427  002406  C005  F007         	movff	strlen@s,strlen@a
  2428  00240A  C006  F008         	movff	strlen@s+1,strlen@a+1
  2429  00240E  EF0B  F012         	goto	l4041
  2430  002412                     l4039:
  2431  002412  4A05               	infsnz	strlen@s^0,f,c
  2432  002414  2A06               	incf	(strlen@s+1)^0,f,c
  2433  002416                     l4041:
  2434  002416  C005  FFD9         	movff	strlen@s,fsr2l
  2435  00241A  C006  FFDA         	movff	strlen@s+1,fsr2h
  2436  00241E  50DF               	movf	indf2,w,c
  2437  002420  A4D8               	btfss	status,2,c
  2438  002422  EF15  F012         	goto	u2411
  2439  002426  EF17  F012         	goto	u2410
  2440  00242A                     u2411:
  2441  00242A  EF09  F012         	goto	l4039
  2442  00242E                     u2410:
  2443  00242E  5007               	movf	strlen@a^0,w,c
  2444  002430  5C05               	subwf	strlen@s^0,w,c
  2445  002432  6E05               	movwf	?_strlen^0,c
  2446  002434  5008               	movf	(strlen@a+1)^0,w,c
  2447  002436  5806               	subwfb	(strlen@s+1)^0,w,c
  2448  002438  6E06               	movwf	(?_strlen+1)^0,c
  2449  00243A  0012               	return		;funcret
  2450  00243C                     __end_of_strlen:
  2451                           	callstack 0
  2452                           
  2453 ;; *************** function _fputs *****************
  2454 ;; Defined at:
  2455 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  s               2   15[COMRAM] PTR const unsigned char 
  2458 ;;		 -> dbuf(32), 
  2459 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  2460 ;;		 -> NULL(0), 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  i               2   20[COMRAM] int 
  2463 ;;  c               1   19[COMRAM] unsigned char 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  2   15[COMRAM] int 
  2466 ;; Registers used:
  2467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2473 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;Total ram usage:        7 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    7
  2480 ;; This function calls:
  2481 ;;		_fputc
  2482 ;; This function is called by:
  2483 ;;		_pad
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text9
  2488  002218                     __ptext9:
  2489                           	callstack 0
  2490  002218                     _fputs:
  2491                           	callstack 18
  2492  002218  0E00               	movlw	0
  2493  00221A  6E16               	movwf	(fputs@i+1)^0,c
  2494  00221C  0E00               	movlw	0
  2495  00221E  6E15               	movwf	fputs@i^0,c
  2496  002220  EF1D  F011         	goto	l4035
  2497  002224                     l4031:
  2498  002224  C014  F007         	movff	fputs@c,fputc@c
  2499  002228  6A08               	clrf	(fputc@c+1)^0,c
  2500  00222A  C012  F009         	movff	fputs@fp,fputc@fp
  2501  00222E  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  2502  002232  ECF4  F00D         	call	_fputc	;wreg free
  2503  002236  4A15               	infsnz	fputs@i^0,f,c
  2504  002238  2A16               	incf	(fputs@i+1)^0,f,c
  2505  00223A                     l4035:
  2506  00223A  5015               	movf	fputs@i^0,w,c
  2507  00223C  2410               	addwf	fputs@s^0,w,c
  2508  00223E  6ED9               	movwf	fsr2l,c
  2509  002240  5016               	movf	(fputs@i+1)^0,w,c
  2510  002242  2011               	addwfc	(fputs@s+1)^0,w,c
  2511  002244  6EDA               	movwf	fsr2h,c
  2512  002246  50DF               	movf	indf2,w,c
  2513  002248  6E14               	movwf	fputs@c^0,c
  2514  00224A  5014               	movf	fputs@c^0,w,c
  2515  00224C  A4D8               	btfss	status,2,c
  2516  00224E  EF2B  F011         	goto	u2401
  2517  002252  EF2D  F011         	goto	u2400
  2518  002256                     u2401:
  2519  002256  EF12  F011         	goto	l4031
  2520  00225A                     u2400:
  2521  00225A  0012               	return		;funcret
  2522  00225C                     __end_of_fputs:
  2523                           	callstack 0
  2524                           
  2525 ;; *************** function _fputc *****************
  2526 ;; Defined at:
  2527 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;  c               2    6[COMRAM] int 
  2530 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  2531 ;;		 -> NULL(0), 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;		None
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  2    6[COMRAM] int 
  2536 ;; Registers used:
  2537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2543 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2545 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2547 ;;Total ram usage:        9 bytes
  2548 ;; Hardware stack levels used:    1
  2549 ;; Hardware stack levels required when called:    6
  2550 ;; This function calls:
  2551 ;;		_putch
  2552 ;; This function is called by:
  2553 ;;		_pad
  2554 ;;		_vfpfcnvrt
  2555 ;;		_fputs
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           	psect	text10
  2560  001BE8                     __ptext10:
  2561                           	callstack 0
  2562  001BE8                     _fputc:
  2563                           	callstack 18
  2564  001BE8  5009               	movf	fputc@fp^0,w,c
  2565  001BEA  100A               	iorwf	(fputc@fp+1)^0,w,c
  2566  001BEC  B4D8               	btfsc	status,2,c
  2567  001BEE  EFFB  F00D         	goto	u2361
  2568  001BF2  EFFD  F00D         	goto	u2360
  2569  001BF6                     u2361:
  2570  001BF6  EF06  F00E         	goto	l4019
  2571  001BFA                     u2360:
  2572  001BFA  5009               	movf	fputc@fp^0,w,c
  2573  001BFC  100A               	iorwf	(fputc@fp+1)^0,w,c
  2574  001BFE  A4D8               	btfss	status,2,c
  2575  001C00  EF04  F00E         	goto	u2371
  2576  001C04  EF06  F00E         	goto	u2370
  2577  001C08                     u2371:
  2578  001C08  EF0B  F00E         	goto	l4021
  2579  001C0C                     u2370:
  2580  001C0C                     l4019:
  2581  001C0C  5007               	movf	fputc@c^0,w,c
  2582  001C0E  EC84  F013         	call	_putch
  2583  001C12  EF3E  F00E         	goto	l1580
  2584  001C16                     l4021:
  2585  001C16  EE20 F004          	lfsr	2,4
  2586  001C1A  5009               	movf	fputc@fp^0,w,c
  2587  001C1C  26D9               	addwf	fsr2l,f,c
  2588  001C1E  500A               	movf	(fputc@fp+1)^0,w,c
  2589  001C20  22DA               	addwfc	fsr2h,f,c
  2590  001C22  50DE               	movf	postinc2,w,c
  2591  001C24  10DE               	iorwf	postinc2,w,c
  2592  001C26  B4D8               	btfsc	status,2,c
  2593  001C28  EF18  F00E         	goto	u2381
  2594  001C2C  EF1A  F00E         	goto	u2380
  2595  001C30                     u2381:
  2596  001C30  EF35  F00E         	goto	l4025
  2597  001C34                     u2380:
  2598  001C34  EE20 F004          	lfsr	2,4
  2599  001C38  5009               	movf	fputc@fp^0,w,c
  2600  001C3A  26D9               	addwf	fsr2l,f,c
  2601  001C3C  500A               	movf	(fputc@fp+1)^0,w,c
  2602  001C3E  22DA               	addwfc	fsr2h,f,c
  2603  001C40  EE10 F002          	lfsr	1,2
  2604  001C44  5009               	movf	fputc@fp^0,w,c
  2605  001C46  26E1               	addwf	fsr1l,f,c
  2606  001C48  500A               	movf	(fputc@fp+1)^0,w,c
  2607  001C4A  22E2               	addwfc	fsr1h,f,c
  2608  001C4C  50DE               	movf	postinc2,w,c
  2609  001C4E  5CE6               	subwf	postinc1,w,c
  2610  001C50  50E6               	movf	postinc1,w,c
  2611  001C52  0A80               	xorlw	128
  2612  001C54  6E0F               	movwf	(??_fputc+4)^0,c
  2613  001C56  50DE               	movf	postinc2,w,c
  2614  001C58  0A80               	xorlw	128
  2615  001C5A  580F               	subwfb	(??_fputc+4)^0,w,c
  2616  001C5C  B0D8               	btfsc	status,0,c
  2617  001C5E  EF33  F00E         	goto	u2391
  2618  001C62  EF35  F00E         	goto	u2390
  2619  001C66                     u2391:
  2620  001C66  EF3E  F00E         	goto	l1580
  2621  001C6A                     u2390:
  2622  001C6A                     l4025:
  2623  001C6A  EE20 F002          	lfsr	2,2
  2624  001C6E  5009               	movf	fputc@fp^0,w,c
  2625  001C70  26D9               	addwf	fsr2l,f,c
  2626  001C72  500A               	movf	(fputc@fp+1)^0,w,c
  2627  001C74  22DA               	addwfc	fsr2h,f,c
  2628  001C76  2ADE               	incf	postinc2,f,c
  2629  001C78  0E00               	movlw	0
  2630  001C7A  22DD               	addwfc	postdec2,f,c
  2631  001C7C                     l1580:
  2632  001C7C  0012               	return		;funcret
  2633  001C7E                     __end_of_fputc:
  2634                           	callstack 0
  2635                           
  2636 ;; *************** function _putch *****************
  2637 ;; Defined at:
  2638 ;;		line 201 in file "mcc_generated_files/eusart.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  txData          1    wreg     unsigned char 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  txData          1    5[COMRAM] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      void 
  2645 ;; Registers used:
  2646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;Total ram usage:        1 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    5
  2659 ;; This function calls:
  2660 ;;		_EUSART_Write
  2661 ;; This function is called by:
  2662 ;;		_fputc
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text11
  2667  002708                     __ptext11:
  2668                           	callstack 0
  2669  002708                     _putch:
  2670                           	callstack 18
  2671                           
  2672                           ;incstack = 0
  2673                           ;putch@txData stored from wreg
  2674  002708  6E06               	movwf	putch@txData^0,c
  2675  00270A                     
  2676                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  2677  00270A  5006               	movf	putch@txData^0,w,c
  2678  00270C  ECB7  F010         	call	_EUSART_Write
  2679  002710  0012               	return		;funcret
  2680  002712                     __end_of_putch:
  2681                           	callstack 0
  2682                           
  2683 ;; *************** function _EUSART_Write *****************
  2684 ;; Defined at:
  2685 ;;		line 173 in file "mcc_generated_files/eusart.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  txData          1    wreg     unsigned char 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  txData          1    4[COMRAM] unsigned char 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      void 
  2692 ;; Registers used:
  2693 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;Total ram usage:        1 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    4
  2706 ;; This function calls:
  2707 ;;		Nothing
  2708 ;; This function is called by:
  2709 ;;		_putch
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           	psect	text12
  2714  00216E                     __ptext12:
  2715                           	callstack 0
  2716  00216E                     _EUSART_Write:
  2717                           	callstack 18
  2718                           
  2719                           ;incstack = 0
  2720                           ;EUSART_Write@txData stored from wreg
  2721  00216E  6E05               	movwf	EUSART_Write@txData^0,c
  2722  002170                     l3997:
  2723                           
  2724                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  2725  002170  0100               	movlb	0	; () banked
  2726  002172  51F7               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
  2727  002174  B4D8               	btfsc	status,2,c
  2728  002176  EFBF  F010         	goto	u2331
  2729  00217A  EFC1  F010         	goto	u2330
  2730  00217E                     u2331:
  2731  00217E  EFB8  F010         	goto	l3997
  2732  002182                     u2330:
  2733  002182                     
  2734                           ; BSR set to: 0
  2735                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TX1IE)
  2736  002182  B89D               	btfsc	157,4,c	;volatile
  2737  002184  EFC6  F010         	goto	u2341
  2738  002188  EFC8  F010         	goto	u2340
  2739  00218C                     u2341:
  2740  00218C  EFCC  F010         	goto	l595
  2741  002190                     u2340:
  2742  002190                     
  2743                           ; BSR set to: 0
  2744                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  2745  002190  C005  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  2746                           
  2747                           ;mcc_generated_files/eusart.c: 182:     }
  2748  002194  EFE1  F010         	goto	l4011
  2749  002198                     l595:
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TX1IE = 0;
  2753  002198  989D               	bcf	157,4,c	;volatile
  2754  00219A                     
  2755                           ; BSR set to: 0
  2756                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  2757  00219A  0E94               	movlw	low _eusartTxBuffer
  2758  00219C  245A               	addwf	_eusartTxHead^0,w,c	;volatile
  2759  00219E  6ED9               	movwf	fsr2l,c
  2760  0021A0  6ADA               	clrf	fsr2h,c
  2761  0021A2  0E00               	movlw	high _eusartTxBuffer
  2762  0021A4  22DA               	addwfc	fsr2h,f,c
  2763  0021A6  C005  FFDF         	movff	EUSART_Write@txData,indf2
  2764  0021AA                     
  2765                           ; BSR set to: 0
  2766  0021AA  2A5A               	incf	_eusartTxHead^0,f,c	;volatile
  2767  0021AC                     
  2768                           ; BSR set to: 0
  2769                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  2770  0021AC  0E07               	movlw	7
  2771  0021AE  645A               	cpfsgt	_eusartTxHead^0,c	;volatile
  2772  0021B0  EFDC  F010         	goto	u2351
  2773  0021B4  EFDE  F010         	goto	u2350
  2774  0021B8                     u2351:
  2775  0021B8  EFE0  F010         	goto	l4009
  2776  0021BC                     u2350:
  2777  0021BC                     
  2778                           ; BSR set to: 0
  2779                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  2780  0021BC  0E00               	movlw	0
  2781  0021BE  6E5A               	movwf	_eusartTxHead^0,c	;volatile
  2782  0021C0                     l4009:
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  2786  0021C0  07F7               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
  2787  0021C2                     l4011:
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TX1IE = 1;
  2791  0021C2  889D               	bsf	157,4,c	;volatile
  2792  0021C4                     
  2793                           ; BSR set to: 0
  2794  0021C4  0012               	return		;funcret
  2795  0021C6                     __end_of_EUSART_Write:
  2796                           	callstack 0
  2797                           
  2798 ;; *************** function _isupper *****************
  2799 ;; Defined at:
  2800 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;  c               2    4[COMRAM] int 
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;		None
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  2    4[COMRAM] int 
  2807 ;; Registers used:
  2808 ;;		wreg, status,2, status,0
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;Total ram usage:        6 bytes
  2819 ;; Hardware stack levels used:    1
  2820 ;; Hardware stack levels required when called:    4
  2821 ;; This function calls:
  2822 ;;		Nothing
  2823 ;; This function is called by:
  2824 ;;		_xtoa
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           	psect	text13
  2829  002396                     __ptext13:
  2830                           	callstack 0
  2831  002396                     _isupper:
  2832                           	callstack 22
  2833  002396  0EBF               	movlw	191
  2834  002398  6E07               	movwf	??_isupper^0,c
  2835  00239A  0EFF               	movlw	255
  2836  00239C  6E08               	movwf	(??_isupper+1)^0,c
  2837  00239E  C005  F009         	movff	isupper@c,??_isupper+2
  2838  0023A2  C006  F00A         	movff	isupper@c+1,??_isupper+3
  2839  0023A6  5007               	movf	??_isupper^0,w,c
  2840  0023A8  2609               	addwf	(??_isupper+2)^0,f,c
  2841  0023AA  5008               	movf	(??_isupper+1)^0,w,c
  2842  0023AC  220A               	addwfc	(??_isupper+3)^0,f,c
  2843  0023AE  500A               	movf	(??_isupper+3)^0,w,c
  2844  0023B0  E10A               	bnz	u2480
  2845  0023B2  0E1A               	movlw	26
  2846  0023B4  5C09               	subwf	(??_isupper+2)^0,w,c
  2847  0023B6  A0D8               	btfss	status,0,c
  2848  0023B8  EFE0  F011         	goto	u2481
  2849  0023BC  EFE3  F011         	goto	u2480
  2850  0023C0                     u2481:
  2851  0023C0  0E01               	movlw	1
  2852  0023C2  EFE4  F011         	goto	u2490
  2853  0023C6                     u2480:
  2854  0023C6  0E00               	movlw	0
  2855  0023C8                     u2490:
  2856  0023C8  6E05               	movwf	?_isupper^0,c
  2857  0023CA  6A06               	clrf	(?_isupper+1)^0,c
  2858  0023CC  0012               	return		;funcret
  2859  0023CE                     __end_of_isupper:
  2860                           	callstack 0
  2861                           
  2862 ;; *************** function _isalpha *****************
  2863 ;; Defined at:
  2864 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  c               2    4[COMRAM] int 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;		None
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  2    4[COMRAM] int 
  2871 ;; Registers used:
  2872 ;;		wreg, status,2, status,0
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2881 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2882 ;;Total ram usage:        6 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:    4
  2885 ;; This function calls:
  2886 ;;		Nothing
  2887 ;; This function is called by:
  2888 ;;		_xtoa
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text14
  2893  002322                     __ptext14:
  2894                           	callstack 0
  2895  002322                     _isalpha:
  2896                           	callstack 22
  2897  002322  0E9F               	movlw	159
  2898  002324  6E07               	movwf	??_isalpha^0,c
  2899  002326  0EFF               	movlw	255
  2900  002328  6E08               	movwf	(??_isalpha+1)^0,c
  2901  00232A  0E20               	movlw	32
  2902  00232C  1005               	iorwf	isalpha@c^0,w,c
  2903  00232E  6E09               	movwf	(??_isalpha+2)^0,c
  2904  002330  0E00               	movlw	0
  2905  002332  1006               	iorwf	(isalpha@c+1)^0,w,c
  2906  002334  6E0A               	movwf	(??_isalpha+3)^0,c
  2907  002336  5007               	movf	??_isalpha^0,w,c
  2908  002338  2609               	addwf	(??_isalpha+2)^0,f,c
  2909  00233A  5008               	movf	(??_isalpha+1)^0,w,c
  2910  00233C  220A               	addwfc	(??_isalpha+3)^0,f,c
  2911  00233E  500A               	movf	(??_isalpha+3)^0,w,c
  2912  002340  E10A               	bnz	u2500
  2913  002342  0E1A               	movlw	26
  2914  002344  5C09               	subwf	(??_isalpha+2)^0,w,c
  2915  002346  A0D8               	btfss	status,0,c
  2916  002348  EFA8  F011         	goto	u2501
  2917  00234C  EFAB  F011         	goto	u2500
  2918  002350                     u2501:
  2919  002350  0E01               	movlw	1
  2920  002352  EFAC  F011         	goto	u2510
  2921  002356                     u2500:
  2922  002356  0E00               	movlw	0
  2923  002358                     u2510:
  2924  002358  6E05               	movwf	?_isalpha^0,c
  2925  00235A  6A06               	clrf	(?_isalpha+1)^0,c
  2926  00235C  0012               	return		;funcret
  2927  00235E                     __end_of_isalpha:
  2928                           	callstack 0
  2929                           
  2930 ;; *************** function _atoi *****************
  2931 ;; Defined at:
  2932 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;  s               2   11[COMRAM] PTR const unsigned char 
  2935 ;;		 -> STR_1(39), 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;  n               2   24[COMRAM] int 
  2938 ;;  neg             2   17[COMRAM] int 
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  2   11[COMRAM] int 
  2941 ;; Registers used:
  2942 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2948 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2949 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2950 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2951 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2952 ;;Total ram usage:       15 bytes
  2953 ;; Hardware stack levels used:    1
  2954 ;; Hardware stack levels required when called:    5
  2955 ;; This function calls:
  2956 ;;		___wmul
  2957 ;;		_isdigit
  2958 ;;		_isspace
  2959 ;; This function is called by:
  2960 ;;		_vfpfcnvrt
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           	psect	text15
  2965  0016BC                     __ptext15:
  2966                           	callstack 0
  2967  0016BC                     _atoi:
  2968                           	callstack 22
  2969  0016BC  0E00               	movlw	0
  2970  0016BE  6E1A               	movwf	(atoi@n+1)^0,c
  2971  0016C0  0E00               	movlw	0
  2972  0016C2  6E19               	movwf	atoi@n^0,c
  2973  0016C4  0E00               	movlw	0
  2974  0016C6  6E13               	movwf	(atoi@neg+1)^0,c
  2975  0016C8  0E00               	movlw	0
  2976  0016CA  6E12               	movwf	atoi@neg^0,c
  2977  0016CC  EF6A  F00B         	goto	l4183
  2978  0016D0                     l4181:
  2979  0016D0  4A0C               	infsnz	atoi@s^0,f,c
  2980  0016D2  2A0D               	incf	(atoi@s+1)^0,f,c
  2981  0016D4                     l4183:
  2982  0016D4  0E01               	movlw	1
  2983  0016D6  6E18               	movwf	_atoi$2116^0,c
  2984  0016D8  C00C  FFF6         	movff	atoi@s,tblptrl
  2985  0016DC  C00D  FFF7         	movff	atoi@s+1,tblptrh
  2986  0016E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2987  0016E0  6AF8               	clrf	tblptru,c
  2988  0016E2                     	endif
  2989  0016E2                     	if	0	;tblptru may be non-zero
  2990  0016E2                     	endif
  2991  0016E2  0008               	tblrd		*
  2992  0016E4  50F5               	movf	tablat,w,c
  2993  0016E6  0A20               	xorlw	32
  2994  0016E8  B4D8               	btfsc	status,2,c
  2995  0016EA  EF79  F00B         	goto	u2761
  2996  0016EE  EF7B  F00B         	goto	u2760
  2997  0016F2                     u2761:
  2998  0016F2  EF99  F00B         	goto	l4191
  2999  0016F6                     u2760:
  3000  0016F6  0EF7               	movlw	247
  3001  0016F8  6E0E               	movwf	??_atoi^0,c
  3002  0016FA  0EFF               	movlw	255
  3003  0016FC  6E0F               	movwf	(??_atoi+1)^0,c
  3004  0016FE  C00C  FFF6         	movff	atoi@s,tblptrl
  3005  001702  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3006  001706                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3007  001706  6AF8               	clrf	tblptru,c
  3008  001708                     	endif
  3009  001708                     	if	0	;tblptru may be non-zero
  3010  001708                     	endif
  3011  001708  0008               	tblrd		*
  3012  00170A  50F5               	movf	tablat,w,c
  3013  00170C  6E10               	movwf	(??_atoi+2)^0,c
  3014  00170E  6A11               	clrf	(??_atoi+3)^0,c
  3015  001710  500E               	movf	??_atoi^0,w,c
  3016  001712  2610               	addwf	(??_atoi+2)^0,f,c
  3017  001714  500F               	movf	(??_atoi+1)^0,w,c
  3018  001716  2211               	addwfc	(??_atoi+3)^0,f,c
  3019  001718  5011               	movf	(??_atoi+3)^0,w,c
  3020  00171A  E109               	bnz	u2770
  3021  00171C  0E05               	movlw	5
  3022  00171E  5C10               	subwf	(??_atoi+2)^0,w,c
  3023  001720  A0D8               	btfss	status,0,c
  3024  001722  EF95  F00B         	goto	u2771
  3025  001726  EF97  F00B         	goto	u2770
  3026  00172A                     u2771:
  3027  00172A  EF99  F00B         	goto	l4191
  3028  00172E                     u2770:
  3029  00172E  0E00               	movlw	0
  3030  001730  6E18               	movwf	_atoi$2116^0,c
  3031  001732                     l4191:
  3032  001732  C018  F014         	movff	_atoi$2116,_atoi$2115
  3033  001736  6A15               	clrf	(_atoi$2115+1)^0,c
  3034  001738  5014               	movf	_atoi$2115^0,w,c
  3035  00173A  1015               	iorwf	(_atoi$2115+1)^0,w,c
  3036  00173C  A4D8               	btfss	status,2,c
  3037  00173E  EFA3  F00B         	goto	u2781
  3038  001742  EFA5  F00B         	goto	u2780
  3039  001746                     u2781:
  3040  001746  EF68  F00B         	goto	l4181
  3041  00174A                     u2780:
  3042  00174A  EFAF  F00B         	goto	l4201
  3043  00174E                     l4197:
  3044  00174E  0E00               	movlw	0
  3045  001750  6E13               	movwf	(atoi@neg+1)^0,c
  3046  001752  0E01               	movlw	1
  3047  001754  6E12               	movwf	atoi@neg^0,c
  3048  001756                     l4199:
  3049  001756  4A0C               	infsnz	atoi@s^0,f,c
  3050  001758  2A0D               	incf	(atoi@s+1)^0,f,c
  3051  00175A  EFE6  F00B         	goto	l4207
  3052  00175E                     l4201:
  3053  00175E  C00C  FFF6         	movff	atoi@s,tblptrl
  3054  001762  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3055  001766                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3056  001766  6AF8               	clrf	tblptru,c
  3057  001768                     	endif
  3058  001768                     	if	0	;tblptru may be non-zero
  3059  001768                     	endif
  3060  001768  0008               	tblrd		*
  3061  00176A  50F5               	movf	tablat,w,c
  3062  00176C  6E0E               	movwf	??_atoi^0,c
  3063  00176E  6A0F               	clrf	(??_atoi+1)^0,c
  3064                           
  3065                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3066                           ; Switch size 1, requested type "simple"
  3067                           ; Number of cases is 1, Range of values is 0 to 0
  3068                           ; switch strategies available:
  3069                           ; Name         Instructions Cycles
  3070                           ; simple_byte            4     3 (average)
  3071                           ;	Chosen strategy is simple_byte
  3072  001770  500F               	movf	(??_atoi+1)^0,w,c
  3073  001772  0A00               	xorlw	0	; case 0
  3074  001774  B4D8               	btfsc	status,2,c
  3075  001776  EFBF  F00B         	goto	l4493
  3076  00177A  EFE6  F00B         	goto	l4207
  3077  00177E                     l4493:
  3078                           
  3079                           ; Switch size 1, requested type "simple"
  3080                           ; Number of cases is 2, Range of values is 43 to 45
  3081                           ; switch strategies available:
  3082                           ; Name         Instructions Cycles
  3083                           ; simple_byte            7     4 (average)
  3084                           ;	Chosen strategy is simple_byte
  3085  00177E  500E               	movf	??_atoi^0,w,c
  3086  001780  0A2B               	xorlw	43	; case 43
  3087  001782  B4D8               	btfsc	status,2,c
  3088  001784  EFAB  F00B         	goto	l4199
  3089  001788  0A06               	xorlw	6	; case 45
  3090  00178A  B4D8               	btfsc	status,2,c
  3091  00178C  EFA7  F00B         	goto	l4197
  3092  001790  EFE6  F00B         	goto	l4207
  3093  001794                     l4203:
  3094  001794  C019  F005         	movff	atoi@n,___wmul@multiplier
  3095  001798  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  3096  00179C  0E00               	movlw	0
  3097  00179E  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  3098  0017A0  0E0A               	movlw	10
  3099  0017A2  6E07               	movwf	___wmul@multiplicand^0,c
  3100  0017A4  ECCF  F012         	call	___wmul	;wreg free
  3101  0017A8  C00C  FFF6         	movff	atoi@s,tblptrl
  3102  0017AC  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3103  0017B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3104  0017B0  6AF8               	clrf	tblptru,c
  3105  0017B2                     	endif
  3106  0017B2                     	if	0	;tblptru may be non-zero
  3107  0017B2                     	endif
  3108  0017B2  0008               	tblrd		*
  3109  0017B4  50F5               	movf	tablat,w,c
  3110  0017B6  5E05               	subwf	?___wmul^0,f,c
  3111  0017B8  0E00               	movlw	0
  3112  0017BA  5A06               	subwfb	(?___wmul+1)^0,f,c
  3113  0017BC  0E30               	movlw	48
  3114  0017BE  2405               	addwf	?___wmul^0,w,c
  3115  0017C0  6E19               	movwf	atoi@n^0,c
  3116  0017C2  0E00               	movlw	0
  3117  0017C4  2006               	addwfc	(?___wmul+1)^0,w,c
  3118  0017C6  6E1A               	movwf	(atoi@n+1)^0,c
  3119  0017C8  EFAB  F00B         	goto	l4199
  3120  0017CC                     l4207:
  3121  0017CC  0ED0               	movlw	208
  3122  0017CE  6E0E               	movwf	??_atoi^0,c
  3123  0017D0  0EFF               	movlw	255
  3124  0017D2  6E0F               	movwf	(??_atoi+1)^0,c
  3125  0017D4  C00C  FFF6         	movff	atoi@s,tblptrl
  3126  0017D8  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3127  0017DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3128  0017DC  6AF8               	clrf	tblptru,c
  3129  0017DE                     	endif
  3130  0017DE                     	if	0	;tblptru may be non-zero
  3131  0017DE                     	endif
  3132  0017DE  0008               	tblrd		*
  3133  0017E0  50F5               	movf	tablat,w,c
  3134  0017E2  6E10               	movwf	(??_atoi+2)^0,c
  3135  0017E4  6A11               	clrf	(??_atoi+3)^0,c
  3136  0017E6  500E               	movf	??_atoi^0,w,c
  3137  0017E8  2610               	addwf	(??_atoi+2)^0,f,c
  3138  0017EA  500F               	movf	(??_atoi+1)^0,w,c
  3139  0017EC  2211               	addwfc	(??_atoi+3)^0,f,c
  3140  0017EE  5011               	movf	(??_atoi+3)^0,w,c
  3141  0017F0  E10A               	bnz	u2790
  3142  0017F2  0E0A               	movlw	10
  3143  0017F4  5C10               	subwf	(??_atoi+2)^0,w,c
  3144  0017F6  A0D8               	btfss	status,0,c
  3145  0017F8  EF00  F00C         	goto	u2791
  3146  0017FC  EF03  F00C         	goto	u2790
  3147  001800                     u2791:
  3148  001800  0E01               	movlw	1
  3149  001802  EF04  F00C         	goto	u2800
  3150  001806                     u2790:
  3151  001806  0E00               	movlw	0
  3152  001808                     u2800:
  3153  001808  6E16               	movwf	_atoi$2117^0,c
  3154  00180A  6A17               	clrf	(_atoi$2117+1)^0,c
  3155  00180C  5016               	movf	_atoi$2117^0,w,c
  3156  00180E  1017               	iorwf	(_atoi$2117+1)^0,w,c
  3157  001810  A4D8               	btfss	status,2,c
  3158  001812  EF0D  F00C         	goto	u2811
  3159  001816  EF0F  F00C         	goto	u2810
  3160  00181A                     u2811:
  3161  00181A  EFCA  F00B         	goto	l4203
  3162  00181E                     u2810:
  3163  00181E  5012               	movf	atoi@neg^0,w,c
  3164  001820  1013               	iorwf	(atoi@neg+1)^0,w,c
  3165  001822  A4D8               	btfss	status,2,c
  3166  001824  EF16  F00C         	goto	u2821
  3167  001828  EF18  F00C         	goto	u2820
  3168  00182C                     u2821:
  3169  00182C  EF26  F00C         	goto	l1539
  3170  001830                     u2820:
  3171  001830  C019  F00E         	movff	atoi@n,??_atoi
  3172  001834  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  3173  001838  1E0E               	comf	??_atoi^0,f,c
  3174  00183A  1E0F               	comf	(??_atoi+1)^0,f,c
  3175  00183C  4A0E               	infsnz	??_atoi^0,f,c
  3176  00183E  2A0F               	incf	(??_atoi+1)^0,f,c
  3177  001840  C00E  F00C         	movff	??_atoi,?_atoi
  3178  001844  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  3179  001848  EF2A  F00C         	goto	l1542
  3180  00184C                     l1539:
  3181  00184C  C019  F00C         	movff	atoi@n,?_atoi
  3182  001850  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  3183  001854                     l1542:
  3184  001854  0012               	return		;funcret
  3185  001856                     __end_of_atoi:
  3186                           	callstack 0
  3187                           
  3188 ;; *************** function _isspace *****************
  3189 ;; Defined at:
  3190 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  c               2    4[COMRAM] int 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;		None
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  2    4[COMRAM] int 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2, status,0
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3206 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;Total ram usage:        7 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; Hardware stack levels required when called:    4
  3211 ;; This function calls:
  3212 ;;		Nothing
  3213 ;; This function is called by:
  3214 ;;		_atoi
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text16
  3219  0021C6                     __ptext16:
  3220                           	callstack 0
  3221  0021C6                     _isspace:
  3222                           	callstack 22
  3223  0021C6  0E01               	movlw	1
  3224  0021C8  6E0B               	movwf	_isspace$2142^0,c
  3225  0021CA  0E20               	movlw	32
  3226  0021CC  1805               	xorwf	isspace@c^0,w,c
  3227  0021CE  1006               	iorwf	(isspace@c+1)^0,w,c
  3228  0021D0  B4D8               	btfsc	status,2,c
  3229  0021D2  EFED  F010         	goto	u2571
  3230  0021D6  EFEF  F010         	goto	u2570
  3231  0021DA                     u2571:
  3232  0021DA  EF08  F011         	goto	l4109
  3233  0021DE                     u2570:
  3234  0021DE  0EF7               	movlw	247
  3235  0021E0  6E07               	movwf	??_isspace^0,c
  3236  0021E2  0EFF               	movlw	255
  3237  0021E4  6E08               	movwf	(??_isspace+1)^0,c
  3238  0021E6  C005  F009         	movff	isspace@c,??_isspace+2
  3239  0021EA  C006  F00A         	movff	isspace@c+1,??_isspace+3
  3240  0021EE  5007               	movf	??_isspace^0,w,c
  3241  0021F0  2609               	addwf	(??_isspace+2)^0,f,c
  3242  0021F2  5008               	movf	(??_isspace+1)^0,w,c
  3243  0021F4  220A               	addwfc	(??_isspace+3)^0,f,c
  3244  0021F6  500A               	movf	(??_isspace+3)^0,w,c
  3245  0021F8  E109               	bnz	u2580
  3246  0021FA  0E05               	movlw	5
  3247  0021FC  5C09               	subwf	(??_isspace+2)^0,w,c
  3248  0021FE  A0D8               	btfss	status,0,c
  3249  002200  EF04  F011         	goto	u2581
  3250  002204  EF06  F011         	goto	u2580
  3251  002208                     u2581:
  3252  002208  EF08  F011         	goto	l4109
  3253  00220C                     u2580:
  3254  00220C  0E00               	movlw	0
  3255  00220E  6E0B               	movwf	_isspace$2142^0,c
  3256  002210                     l4109:
  3257  002210  C00B  F005         	movff	_isspace$2142,?_isspace
  3258  002214  6A06               	clrf	(?_isspace+1)^0,c
  3259  002216  0012               	return		;funcret
  3260  002218                     __end_of_isspace:
  3261                           	callstack 0
  3262                           
  3263 ;; *************** function _isdigit *****************
  3264 ;; Defined at:
  3265 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  c               2    4[COMRAM] int 
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;		None
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  2    4[COMRAM] int 
  3272 ;; Registers used:
  3273 ;;		wreg, status,2, status,0
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3279 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;Total ram usage:        6 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; Hardware stack levels required when called:    4
  3286 ;; This function calls:
  3287 ;;		Nothing
  3288 ;; This function is called by:
  3289 ;;		_vfpfcnvrt
  3290 ;;		_atoi
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text17
  3295  0023CE                     __ptext17:
  3296                           	callstack 0
  3297  0023CE                     _isdigit:
  3298                           	callstack 23
  3299  0023CE  0ED0               	movlw	208
  3300  0023D0  6E07               	movwf	??_isdigit^0,c
  3301  0023D2  0EFF               	movlw	255
  3302  0023D4  6E08               	movwf	(??_isdigit+1)^0,c
  3303  0023D6  C005  F009         	movff	isdigit@c,??_isdigit+2
  3304  0023DA  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  3305  0023DE  5007               	movf	??_isdigit^0,w,c
  3306  0023E0  2609               	addwf	(??_isdigit+2)^0,f,c
  3307  0023E2  5008               	movf	(??_isdigit+1)^0,w,c
  3308  0023E4  220A               	addwfc	(??_isdigit+3)^0,f,c
  3309  0023E6  500A               	movf	(??_isdigit+3)^0,w,c
  3310  0023E8  E10A               	bnz	u2550
  3311  0023EA  0E0A               	movlw	10
  3312  0023EC  5C09               	subwf	(??_isdigit+2)^0,w,c
  3313  0023EE  A0D8               	btfss	status,0,c
  3314  0023F0  EFFC  F011         	goto	u2551
  3315  0023F4  EFFF  F011         	goto	u2550
  3316  0023F8                     u2551:
  3317  0023F8  0E01               	movlw	1
  3318  0023FA  EF00  F012         	goto	u2560
  3319  0023FE                     u2550:
  3320  0023FE  0E00               	movlw	0
  3321  002400                     u2560:
  3322  002400  6E05               	movwf	?_isdigit^0,c
  3323  002402  6A06               	clrf	(?_isdigit+1)^0,c
  3324  002404  0012               	return		;funcret
  3325  002406                     __end_of_isdigit:
  3326                           	callstack 0
  3327                           
  3328 ;; *************** function ___wmul *****************
  3329 ;; Defined at:
  3330 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  multiplier      2    4[COMRAM] unsigned int 
  3333 ;;  multiplicand    2    6[COMRAM] unsigned int 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  product         2    8[COMRAM] unsigned int 
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  2    4[COMRAM] unsigned int 
  3338 ;; Registers used:
  3339 ;;		wreg, status,2, status,0, prodl, prodh
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3345 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3346 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;Total ram usage:        6 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; Hardware stack levels required when called:    4
  3352 ;; This function calls:
  3353 ;;		Nothing
  3354 ;; This function is called by:
  3355 ;;		_atoi
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text18
  3360  00259E                     __ptext18:
  3361                           	callstack 0
  3362  00259E                     ___wmul:
  3363                           	callstack 22
  3364  00259E  5005               	movf	___wmul@multiplier^0,w,c
  3365  0025A0  0207               	mulwf	___wmul@multiplicand^0,c
  3366  0025A2  CFF3 F009          	movff	prodl,___wmul@product
  3367  0025A6  CFF4 F00A          	movff	prodh,___wmul@product+1
  3368  0025AA  5005               	movf	___wmul@multiplier^0,w,c
  3369  0025AC  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  3370  0025AE  50F3               	movf	243,w,c
  3371  0025B0  260A               	addwf	(___wmul@product+1)^0,f,c
  3372  0025B2  5006               	movf	(___wmul@multiplier+1)^0,w,c
  3373  0025B4  0207               	mulwf	___wmul@multiplicand^0,c
  3374  0025B6  50F3               	movf	243,w,c
  3375  0025B8  260A               	addwf	(___wmul@product+1)^0,f,c
  3376  0025BA  C009  F005         	movff	___wmul@product,?___wmul
  3377  0025BE  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  3378  0025C2  0012               	return		;funcret
  3379  0025C4                     __end_of___wmul:
  3380                           	callstack 0
  3381                           
  3382 ;; *************** function _SYSTEM_Initialize *****************
  3383 ;; Defined at:
  3384 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;		None
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;		None
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg, status,2, status,0, cstack
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;Total ram usage:        0 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; Hardware stack levels required when called:    6
  3405 ;; This function calls:
  3406 ;;		_EUSART_Initialize
  3407 ;;		_I2C_Initialize
  3408 ;;		_INTERRUPT_Initialize
  3409 ;;		_OSCILLATOR_Initialize
  3410 ;;		_PIN_MANAGER_Initialize
  3411 ;; This function is called by:
  3412 ;;		_main
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           	psect	text19
  3417  002676                     __ptext19:
  3418                           	callstack 0
  3419  002676                     _SYSTEM_Initialize:
  3420                           	callstack 24
  3421  002676                     
  3422                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3423  002676  ECD7  F013         	call	_INTERRUPT_Initialize	;wreg free
  3424  00267A                     
  3425                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  3426  00267A  EC46  F013         	call	_I2C_Initialize	;wreg free
  3427  00267E                     
  3428                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  3429  00267E  EC1E  F012         	call	_PIN_MANAGER_Initialize	;wreg free
  3430  002682                     
  3431                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  3432  002682  EC89  F013         	call	_OSCILLATOR_Initialize	;wreg free
  3433  002686                     
  3434                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  3435  002686  EC41  F00F         	call	_EUSART_Initialize	;wreg free
  3436  00268A  0012               	return		;funcret
  3437  00268C                     __end_of_SYSTEM_Initialize:
  3438                           	callstack 0
  3439                           
  3440 ;; *************** function _PIN_MANAGER_Initialize *****************
  3441 ;; Defined at:
  3442 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3460 ;;Total ram usage:        0 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    4
  3463 ;; This function calls:
  3464 ;;		Nothing
  3465 ;; This function is called by:
  3466 ;;		_SYSTEM_Initialize
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           	psect	text20
  3471  00243C                     __ptext20:
  3472                           	callstack 0
  3473  00243C                     _PIN_MANAGER_Initialize:
  3474                           	callstack 25
  3475  00243C                     
  3476                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3477  00243C  0E00               	movlw	0
  3478  00243E  6E8D               	movwf	141,c	;volatile
  3479                           
  3480                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  3481  002440  0E00               	movlw	0
  3482  002442  6E8C               	movwf	140,c	;volatile
  3483                           
  3484                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  3485  002444  0E00               	movlw	0
  3486  002446  6E89               	movwf	137,c	;volatile
  3487                           
  3488                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  3489  002448  0E00               	movlw	0
  3490  00244A  6E8A               	movwf	138,c	;volatile
  3491                           
  3492                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  3493  00244C  0E00               	movlw	0
  3494  00244E  6E8B               	movwf	139,c	;volatile
  3495                           
  3496                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  3497  002450  0E07               	movlw	7
  3498  002452  6E96               	movwf	150,c	;volatile
  3499  002454                     
  3500                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  3501  002454  6892               	setf	146,c	;volatile
  3502  002456                     
  3503                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  3504  002456  6893               	setf	147,c	;volatile
  3505                           
  3506                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  3507  002458  0EBF               	movlw	191
  3508  00245A  6E94               	movwf	148,c	;volatile
  3509  00245C                     
  3510                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  3511  00245C  6895               	setf	149,c	;volatile
  3512  00245E                     
  3513                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  3514  00245E  687E               	setf	126,c	;volatile
  3515                           
  3516                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  3517  002460  0E1F               	movlw	31
  3518  002462  6E7F               	movwf	127,c	;volatile
  3519                           
  3520                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  3521  002464  0E00               	movlw	0
  3522  002466  6E7C               	movwf	124,c	;volatile
  3523  002468                     
  3524                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  3525  002468  8EF1               	bsf	241,7,c	;volatile
  3526  00246A  0012               	return		;funcret
  3527  00246C                     __end_of_PIN_MANAGER_Initialize:
  3528                           	callstack 0
  3529                           
  3530 ;; *************** function _OSCILLATOR_Initialize *****************
  3531 ;; Defined at:
  3532 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;		None
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3550 ;;Total ram usage:        0 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:    4
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_SYSTEM_Initialize
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           	psect	text21
  3561  002712                     __ptext21:
  3562                           	callstack 0
  3563  002712                     _OSCILLATOR_Initialize:
  3564                           	callstack 25
  3565  002712                     
  3566                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x60;
  3567  002712  0E60               	movlw	96
  3568  002714  6ED3               	movwf	211,c	;volatile
  3569                           
  3570                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  3571  002716  0E00               	movlw	0
  3572  002718  6E9B               	movwf	155,c	;volatile
  3573  00271A  0012               	return		;funcret
  3574  00271C                     __end_of_OSCILLATOR_Initialize:
  3575                           	callstack 0
  3576                           
  3577 ;; *************** function _INTERRUPT_Initialize *****************
  3578 ;; Defined at:
  3579 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;		None
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;		None
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      void 
  3586 ;; Registers used:
  3587 ;;		None
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3597 ;;Total ram usage:        0 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    4
  3600 ;; This function calls:
  3601 ;;		Nothing
  3602 ;; This function is called by:
  3603 ;;		_SYSTEM_Initialize
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           	psect	text22
  3608  0027AE                     __ptext22:
  3609                           	callstack 0
  3610  0027AE                     _INTERRUPT_Initialize:
  3611                           	callstack 25
  3612  0027AE                     
  3613                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  3614  0027AE  9ED0               	bcf	208,7,c	;volatile
  3615  0027B0  0012               	return		;funcret
  3616  0027B2                     __end_of_INTERRUPT_Initialize:
  3617                           	callstack 0
  3618                           
  3619 ;; *************** function _I2C_Initialize *****************
  3620 ;; Defined at:
  3621 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;		None
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;		None
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      void 
  3628 ;; Registers used:
  3629 ;;		wreg, status,2
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3639 ;;Total ram usage:        0 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; Hardware stack levels required when called:    4
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_SYSTEM_Initialize
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text23
  3650  00268C                     __ptext23:
  3651                           	callstack 0
  3652  00268C                     _I2C_Initialize:
  3653                           	callstack 25
  3654  00268C                     
  3655                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  3656  00268C  0E00               	movlw	0
  3657  00268E  6EC7               	movwf	199,c	;volatile
  3658                           
  3659                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  3660  002690  0E08               	movlw	8
  3661  002692  6EC6               	movwf	198,c	;volatile
  3662                           
  3663                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  3664  002694  0E00               	movlw	0
  3665  002696  6EC5               	movwf	197,c	;volatile
  3666                           
  3667                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  3668  002698  0E13               	movlw	19
  3669  00269A  6EC8               	movwf	200,c	;volatile
  3670  00269C                     
  3671                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  3672  00269C  9AC6               	bcf	198,5,c	;volatile
  3673  00269E  0012               	return		;funcret
  3674  0026A0                     __end_of_I2C_Initialize:
  3675                           	callstack 0
  3676                           
  3677 ;; *************** function _EUSART_Initialize *****************
  3678 ;; Defined at:
  3679 ;;		line 88 in file "mcc_generated_files/eusart.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3697 ;;Total ram usage:        0 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    5
  3700 ;; This function calls:
  3701 ;;		_EUSART_SetErrorHandler
  3702 ;;		_EUSART_SetFramingErrorHandler
  3703 ;;		_EUSART_SetOverrunErrorHandler
  3704 ;;		_EUSART_SetRxInterruptHandler
  3705 ;;		_EUSART_SetTxInterruptHandler
  3706 ;; This function is called by:
  3707 ;;		_SYSTEM_Initialize
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text24
  3712  001E82                     __ptext24:
  3713                           	callstack 0
  3714  001E82                     _EUSART_Initialize:
  3715                           	callstack 24
  3716  001E82                     
  3717                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RC1IE = 0;
  3718  001E82  9A9D               	bcf	157,5,c	;volatile
  3719  001E84                     
  3720                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3721  001E84  0EE0               	movlw	low _EUSART_Receive_ISR
  3722  001E86  6E05               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
  3723  001E88  0E19               	movlw	high _EUSART_Receive_ISR
  3724  001E8A  6E06               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
  3725  001E8C  EC93  F013         	call	_EUSART_SetRxInterruptHandler	;wreg free
  3726  001E90                     
  3727                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TX1IE = 0;
  3728  001E90  989D               	bcf	157,4,c	;volatile
  3729                           
  3730                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  3731  001E92  0EA0               	movlw	low _EUSART_Transmit_ISR
  3732  001E94  6E05               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
  3733  001E96  0E22               	movlw	high _EUSART_Transmit_ISR
  3734  001E98  6E06               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
  3735  001E9A  EC8E  F013         	call	_EUSART_SetTxInterruptHandler	;wreg free
  3736  001E9E                     
  3737                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  3738  001E9E  0E08               	movlw	8
  3739  001EA0  6EB8               	movwf	184,c	;volatile
  3740  001EA2                     
  3741                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  3742  001EA2  0E90               	movlw	144
  3743  001EA4  6EAB               	movwf	171,c	;volatile
  3744  001EA6                     
  3745                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  3746  001EA6  0E24               	movlw	36
  3747  001EA8  6EAC               	movwf	172,c	;volatile
  3748  001EAA                     
  3749                           ;mcc_generated_files/eusart.c: 107:     SPBRG = 0xCF;
  3750  001EAA  0ECF               	movlw	207
  3751  001EAC  6EAF               	movwf	175,c	;volatile
  3752  001EAE                     
  3753                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  3754  001EAE  0E00               	movlw	0
  3755  001EB0  6EB0               	movwf	176,c	;volatile
  3756  001EB2                     
  3757                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  3758  001EB2  0EDE               	movlw	low _EUSART_DefaultFramingErrorHandler
  3759  001EB4  6E05               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  3760  001EB6  0E27               	movlw	high _EUSART_DefaultFramingErrorHandler
  3761  001EB8  6E06               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  3762  001EBA  EC9D  F013         	call	_EUSART_SetFramingErrorHandler	;wreg free
  3763  001EBE                     
  3764                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  3765  001EBE  0EA2               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3766  001EC0  6E05               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  3767  001EC2  0E27               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3768  001EC4  6E06               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3769  001EC6  EC98  F013         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  3770  001ECA                     
  3771                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  3772  001ECA  0EA8               	movlw	low _EUSART_DefaultErrorHandler
  3773  001ECC  6E05               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  3774  001ECE  0E27               	movlw	high _EUSART_DefaultErrorHandler
  3775  001ED0  6E06               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  3776  001ED2  ECA2  F013         	call	_EUSART_SetErrorHandler	;wreg free
  3777                           
  3778                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  3779  001ED6  0E00               	movlw	0
  3780  001ED8  0100               	movlb	0	; () banked
  3781  001EDA  6FA9               	movwf	_eusartRxLastError& (0+255),b	;volatile
  3782                           
  3783                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  3784  001EDC  0E00               	movlw	0
  3785  001EDE  6E5A               	movwf	_eusartTxHead^0,c	;volatile
  3786                           
  3787                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  3788  001EE0  0E00               	movlw	0
  3789  001EE2  6E59               	movwf	_eusartTxTail^0,c	;volatile
  3790                           
  3791                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  3792  001EE4  0E08               	movlw	8
  3793  001EE6  6FF7               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
  3794                           
  3795                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  3796  001EE8  0E00               	movlw	0
  3797  001EEA  6E58               	movwf	_eusartRxHead^0,c	;volatile
  3798                           
  3799                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  3800  001EEC  0E00               	movlw	0
  3801  001EEE  6E57               	movwf	_eusartRxTail^0,c	;volatile
  3802                           
  3803                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  3804  001EF0  0E00               	movlw	0
  3805  001EF2  6FAA               	movwf	_eusartRxCount& (0+255),b	;volatile
  3806  001EF4                     
  3807                           ; BSR set to: 0
  3808                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RC1IE = 1;
  3809  001EF4  8A9D               	bsf	157,5,c	;volatile
  3810  001EF6                     
  3811                           ; BSR set to: 0
  3812  001EF6  0012               	return		;funcret
  3813  001EF8                     __end_of_EUSART_Initialize:
  3814                           	callstack 0
  3815                           
  3816 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3817 ;; Defined at:
  3818 ;;		line 285 in file "mcc_generated_files/eusart.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3821 ;;		 -> EUSART_Transmit_ISR(1), 
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;		None
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  1    wreg      void 
  3826 ;; Registers used:
  3827 ;;		wreg, status,2, status,0
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3833 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;Total ram usage:        2 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:    4
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		_EUSART_Initialize
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           	psect	text25
  3848  00271C                     __ptext25:
  3849                           	callstack 0
  3850  00271C                     _EUSART_SetTxInterruptHandler:
  3851                           	callstack 24
  3852  00271C                     
  3853                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  3854  00271C  C005  F0F5         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  3855  002720  C006  F0F6         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  3856  002724  0012               	return		;funcret
  3857  002726                     __end_of_EUSART_SetTxInterruptHandler:
  3858                           	callstack 0
  3859                           
  3860 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3861 ;; Defined at:
  3862 ;;		line 289 in file "mcc_generated_files/eusart.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3865 ;;		 -> EUSART_Receive_ISR(1), 
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;		None
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  1    wreg      void 
  3870 ;; Registers used:
  3871 ;;		wreg, status,2, status,0
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3877 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3881 ;;Total ram usage:        2 bytes
  3882 ;; Hardware stack levels used:    1
  3883 ;; Hardware stack levels required when called:    4
  3884 ;; This function calls:
  3885 ;;		Nothing
  3886 ;; This function is called by:
  3887 ;;		_EUSART_Initialize
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           	psect	text26
  3892  002726                     __ptext26:
  3893                           	callstack 0
  3894  002726                     _EUSART_SetRxInterruptHandler:
  3895                           	callstack 24
  3896  002726                     
  3897                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  3898  002726  C005  F0F3         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  3899  00272A  C006  F0F4         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  3900  00272E  0012               	return		;funcret
  3901  002730                     __end_of_EUSART_SetRxInterruptHandler:
  3902                           	callstack 0
  3903                           
  3904 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3905 ;; Defined at:
  3906 ;;		line 277 in file "mcc_generated_files/eusart.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3909 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3921 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3924 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3925 ;;Total ram usage:        2 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    4
  3928 ;; This function calls:
  3929 ;;		Nothing
  3930 ;; This function is called by:
  3931 ;;		_EUSART_Initialize
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	text27
  3936  002730                     __ptext27:
  3937                           	callstack 0
  3938  002730                     _EUSART_SetOverrunErrorHandler:
  3939                           	callstack 24
  3940  002730                     
  3941                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  3942  002730  C005  F0EF         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  3943  002734  C006  F0F0         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  3944  002738  0012               	return		;funcret
  3945  00273A                     __end_of_EUSART_SetOverrunErrorHandler:
  3946                           	callstack 0
  3947                           
  3948 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3949 ;; Defined at:
  3950 ;;		line 273 in file "mcc_generated_files/eusart.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3953 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;		None
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      void 
  3958 ;; Registers used:
  3959 ;;		wreg, status,2, status,0
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3965 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3968 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3969 ;;Total ram usage:        2 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; Hardware stack levels required when called:    4
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_EUSART_Initialize
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text28
  3980  00273A                     __ptext28:
  3981                           	callstack 0
  3982  00273A                     _EUSART_SetFramingErrorHandler:
  3983                           	callstack 24
  3984  00273A                     
  3985                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  3986  00273A  C005  F0F1         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  3987  00273E  C006  F0F2         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  3988  002742  0012               	return		;funcret
  3989  002744                     __end_of_EUSART_SetFramingErrorHandler:
  3990                           	callstack 0
  3991                           
  3992 ;; *************** function _EUSART_SetErrorHandler *****************
  3993 ;; Defined at:
  3994 ;;		line 281 in file "mcc_generated_files/eusart.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3997 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;		None
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  1    wreg      void 
  4002 ;; Registers used:
  4003 ;;		wreg, status,2, status,0
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4009 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;Total ram usage:        2 bytes
  4014 ;; Hardware stack levels used:    1
  4015 ;; Hardware stack levels required when called:    4
  4016 ;; This function calls:
  4017 ;;		Nothing
  4018 ;; This function is called by:
  4019 ;;		_EUSART_Initialize
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023                           	psect	text29
  4024  002744                     __ptext29:
  4025                           	callstack 0
  4026  002744                     _EUSART_SetErrorHandler:
  4027                           	callstack 24
  4028  002744                     
  4029                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  4030  002744  C005  F0ED         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  4031  002748  C006  F0EE         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  4032  00274C  0012               	return		;funcret
  4033  00274E                     __end_of_EUSART_SetErrorHandler:
  4034                           	callstack 0
  4035                           
  4036 ;; *************** function _MCP79410_get_time *****************
  4037 ;; Defined at:
  4038 ;;		line 84 in file "mcp79410.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;  hour            2   24[COMRAM] PTR unsigned char 
  4041 ;;		 -> hour(1), 
  4042 ;;  min             2   26[COMRAM] PTR unsigned char 
  4043 ;;		 -> min(1), 
  4044 ;;  sec             2   28[COMRAM] PTR unsigned char 
  4045 ;;		 -> sec(1), 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;		None
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  1    wreg      void 
  4050 ;; Registers used:
  4051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/0
  4054 ;;		On exit  : 0/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4057 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4060 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4061 ;;Total ram usage:        6 bytes
  4062 ;; Hardware stack levels used:    1
  4063 ;; Hardware stack levels required when called:   13
  4064 ;; This function calls:
  4065 ;;		_I2C_Read1ByteRegister
  4066 ;; This function is called by:
  4067 ;;		_main
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           
  4071                           	psect	text30
  4072  001D0C                     __ptext30:
  4073                           	callstack 0
  4074  001D0C                     _MCP79410_get_time:
  4075                           	callstack 17
  4076  001D0C                     
  4077                           ;mcp79410.c: 85:                         uint8_t *hour,;mcp79410.c: 86:                 
      +                                  uint8_t *min,;mcp79410.c: 87:                         uint8_t *sec){;mcp79410.c:
      +                           89:     *sec = I2C_Read1ByteRegister(0x6F,0x00);
  4078  001D0C  0E00               	movlw	0
  4079  001D0E  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  4080  001D10  0E6F               	movlw	111
  4081  001D12  EC7C  F00F         	call	_I2C_Read1ByteRegister
  4082  001D16  C01D  FFD9         	movff	MCP79410_get_time@sec,fsr2l
  4083  001D1A  C01E  FFDA         	movff	MCP79410_get_time@sec+1,fsr2h
  4084  001D1E  6EDF               	movwf	indf2,c
  4085  001D20                     
  4086                           ;mcp79410.c: 90:     *sec = *sec & 0b01111111;
  4087  001D20  C01D  FFD9         	movff	MCP79410_get_time@sec,fsr2l
  4088  001D24  C01E  FFDA         	movff	MCP79410_get_time@sec+1,fsr2h
  4089  001D28  50DF               	movf	indf2,w,c
  4090  001D2A  0B7F               	andlw	127
  4091  001D2C  C01D  FFD9         	movff	MCP79410_get_time@sec,fsr2l
  4092  001D30  C01E  FFDA         	movff	MCP79410_get_time@sec+1,fsr2h
  4093  001D34  6EDF               	movwf	indf2,c
  4094  001D36                     
  4095                           ;mcp79410.c: 92:     *min = I2C_Read1ByteRegister(0x6F,0x01);
  4096  001D36  0E01               	movlw	1
  4097  001D38  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  4098  001D3A  0E6F               	movlw	111
  4099  001D3C  EC7C  F00F         	call	_I2C_Read1ByteRegister
  4100  001D40  C01B  FFD9         	movff	MCP79410_get_time@min,fsr2l
  4101  001D44  C01C  FFDA         	movff	MCP79410_get_time@min+1,fsr2h
  4102  001D48  6EDF               	movwf	indf2,c
  4103                           
  4104                           ;mcp79410.c: 93:     *min = *min & 0b01111111;
  4105  001D4A  C01B  FFD9         	movff	MCP79410_get_time@min,fsr2l
  4106  001D4E  C01C  FFDA         	movff	MCP79410_get_time@min+1,fsr2h
  4107  001D52  50DF               	movf	indf2,w,c
  4108  001D54  0B7F               	andlw	127
  4109  001D56  C01B  FFD9         	movff	MCP79410_get_time@min,fsr2l
  4110  001D5A  C01C  FFDA         	movff	MCP79410_get_time@min+1,fsr2h
  4111  001D5E  6EDF               	movwf	indf2,c
  4112  001D60                     
  4113                           ;mcp79410.c: 95:     *hour = I2C_Read1ByteRegister(0x6F,0x02);
  4114  001D60  0E02               	movlw	2
  4115  001D62  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  4116  001D64  0E6F               	movlw	111
  4117  001D66  EC7C  F00F         	call	_I2C_Read1ByteRegister
  4118  001D6A  C019  FFD9         	movff	MCP79410_get_time@hour,fsr2l
  4119  001D6E  C01A  FFDA         	movff	MCP79410_get_time@hour+1,fsr2h
  4120  001D72  6EDF               	movwf	indf2,c
  4121  001D74                     
  4122                           ;mcp79410.c: 96:     *hour = *hour & 0b00111111;
  4123  001D74  C019  FFD9         	movff	MCP79410_get_time@hour,fsr2l
  4124  001D78  C01A  FFDA         	movff	MCP79410_get_time@hour+1,fsr2h
  4125  001D7C  50DF               	movf	indf2,w,c
  4126  001D7E  0B3F               	andlw	63
  4127  001D80  C019  FFD9         	movff	MCP79410_get_time@hour,fsr2l
  4128  001D84  C01A  FFDA         	movff	MCP79410_get_time@hour+1,fsr2h
  4129  001D88  6EDF               	movwf	indf2,c
  4130  001D8A  0012               	return		;funcret
  4131  001D8C                     __end_of_MCP79410_get_time:
  4132                           	callstack 0
  4133                           
  4134 ;; *************** function _MCP79410_get_date *****************
  4135 ;; Defined at:
  4136 ;;		line 70 in file "mcp79410.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  day             2   24[COMRAM] PTR unsigned char 
  4139 ;;		 -> day(1), 
  4140 ;;  mouth           2   26[COMRAM] PTR unsigned char 
  4141 ;;		 -> month(1), 
  4142 ;;  year            2   28[COMRAM] PTR unsigned char 
  4143 ;;		 -> year(1), 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;		None
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  1    wreg      void 
  4148 ;; Registers used:
  4149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4155 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;Total ram usage:        6 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:   13
  4162 ;; This function calls:
  4163 ;;		_I2C_Read1ByteRegister
  4164 ;; This function is called by:
  4165 ;;		_main
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text31
  4170  001FDC                     __ptext31:
  4171                           	callstack 0
  4172  001FDC                     _MCP79410_get_date:
  4173                           	callstack 17
  4174  001FDC                     
  4175                           ;mcp79410.c: 71:                         uint8_t *day,;mcp79410.c: 72:                  
      +                                 uint8_t *mouth,;mcp79410.c: 73:                         uint8_t *year){;mcp79410.
      +                          c: 75:     *day = I2C_Read1ByteRegister(0x6F,0x04);
  4176  001FDC  0E04               	movlw	4
  4177  001FDE  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  4178  001FE0  0E6F               	movlw	111
  4179  001FE2  EC7C  F00F         	call	_I2C_Read1ByteRegister
  4180  001FE6  C019  FFD9         	movff	MCP79410_get_date@day,fsr2l
  4181  001FEA  C01A  FFDA         	movff	MCP79410_get_date@day+1,fsr2h
  4182  001FEE  6EDF               	movwf	indf2,c
  4183  001FF0                     
  4184                           ;mcp79410.c: 76:     *day = *day & 0b00111111;
  4185  001FF0  C019  FFD9         	movff	MCP79410_get_date@day,fsr2l
  4186  001FF4  C01A  FFDA         	movff	MCP79410_get_date@day+1,fsr2h
  4187  001FF8  50DF               	movf	indf2,w,c
  4188  001FFA  0B3F               	andlw	63
  4189  001FFC  C019  FFD9         	movff	MCP79410_get_date@day,fsr2l
  4190  002000  C01A  FFDA         	movff	MCP79410_get_date@day+1,fsr2h
  4191  002004  6EDF               	movwf	indf2,c
  4192  002006                     
  4193                           ;mcp79410.c: 78:     *mouth = I2C_Read1ByteRegister(0x6F,0x05);
  4194  002006  0E05               	movlw	5
  4195  002008  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  4196  00200A  0E6F               	movlw	111
  4197  00200C  EC7C  F00F         	call	_I2C_Read1ByteRegister
  4198  002010  C01B  FFD9         	movff	MCP79410_get_date@mouth,fsr2l
  4199  002014  C01C  FFDA         	movff	MCP79410_get_date@mouth+1,fsr2h
  4200  002018  6EDF               	movwf	indf2,c
  4201                           
  4202                           ;mcp79410.c: 79:     *mouth = *mouth & 0b00011111;
  4203  00201A  C01B  FFD9         	movff	MCP79410_get_date@mouth,fsr2l
  4204  00201E  C01C  FFDA         	movff	MCP79410_get_date@mouth+1,fsr2h
  4205  002022  50DF               	movf	indf2,w,c
  4206  002024  0B1F               	andlw	31
  4207  002026  C01B  FFD9         	movff	MCP79410_get_date@mouth,fsr2l
  4208  00202A  C01C  FFDA         	movff	MCP79410_get_date@mouth+1,fsr2h
  4209  00202E  6EDF               	movwf	indf2,c
  4210  002030                     
  4211                           ;mcp79410.c: 81:     *year = I2C_Read1ByteRegister(0x6F,0x06);
  4212  002030  0E06               	movlw	6
  4213  002032  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  4214  002034  0E6F               	movlw	111
  4215  002036  EC7C  F00F         	call	_I2C_Read1ByteRegister
  4216  00203A  C01D  FFD9         	movff	MCP79410_get_date@year,fsr2l
  4217  00203E  C01E  FFDA         	movff	MCP79410_get_date@year+1,fsr2h
  4218  002042  6EDF               	movwf	indf2,c
  4219  002044  0012               	return		;funcret
  4220  002046                     __end_of_MCP79410_get_date:
  4221                           	callstack 0
  4222                           
  4223 ;; *************** function _I2C_Read1ByteRegister *****************
  4224 ;; Defined at:
  4225 ;;		line 63 in file "mcc_generated_files/examples/i2c_master_example.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;  address         1    wreg     unsigned char 
  4228 ;;  reg             1   21[COMRAM] unsigned char 
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;  address         1   22[COMRAM] unsigned char 
  4231 ;;  returnValue     1   23[COMRAM] unsigned char 
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      unsigned char 
  4234 ;; Registers used:
  4235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4241 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4242 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;Total ram usage:        3 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:   12
  4248 ;; This function calls:
  4249 ;;		_I2C_Close
  4250 ;;		_I2C_MasterWrite
  4251 ;;		_I2C_Open
  4252 ;;		_I2C_SetAddressNackCallback
  4253 ;;		_I2C_SetBuffer
  4254 ;;		_I2C_SetDataCompleteCallback
  4255 ;; This function is called by:
  4256 ;;		_MCP79410_get_date
  4257 ;;		_MCP79410_get_time
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           	psect	text32
  4262  001EF8                     __ptext32:
  4263                           	callstack 0
  4264  001EF8                     _I2C_Read1ByteRegister:
  4265                           	callstack 17
  4266                           
  4267                           ;incstack = 0
  4268                           ;I2C_Read1ByteRegister@address stored from wreg
  4269  001EF8  6E17               	movwf	I2C_Read1ByteRegister@address^0,c
  4270  001EFA                     
  4271                           ;mcc_generated_files/examples/i2c_master_example.c: 63: uint8_t I2C_Read1ByteRegister(i2
      +                          c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 64:
      +                           {;mcc_generated_files/examples/i2c_master_example.c: 65:     uint8_t returnValue = 0x00
      +                          ;
  4272  001EFA  0E00               	movlw	0
  4273  001EFC  6E18               	movwf	I2C_Read1ByteRegister@returnValue^0,c
  4274  001EFE                     l3515:
  4275  001EFE  5017               	movf	I2C_Read1ByteRegister@address^0,w,c
  4276  001F00  EC3F  F00E         	call	_I2C_Open
  4277  001F04  0900               	iorlw	0
  4278  001F06  B4D8               	btfsc	status,2,c
  4279  001F08  EF88  F00F         	goto	u1991
  4280  001F0C  EF8A  F00F         	goto	u1990
  4281  001F10                     u1991:
  4282  001F10  EF7F  F00F         	goto	l3515
  4283  001F14                     u1990:
  4284  001F14                     
  4285                           ;mcc_generated_files/examples/i2c_master_example.c: 68:     I2C_SetDataCompleteCallback(
      +                          rd1RegCompleteHandler,&returnValue);
  4286  001F14  0EC4               	movlw	low _rd1RegCompleteHandler
  4287  001F16  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  4288  001F18  0E24               	movlw	high _rd1RegCompleteHandler
  4289  001F1A  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  4290  001F1C  0E18               	movlw	low I2C_Read1ByteRegister@returnValue
  4291  001F1E  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  4292  001F20  0E00               	movlw	high I2C_Read1ByteRegister@returnValue
  4293  001F22  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  4294  001F24  EC2F  F013         	call	_I2C_SetDataCompleteCallback	;wreg free
  4295  001F28                     
  4296                           ;mcc_generated_files/examples/i2c_master_example.c: 69:     I2C_SetBuffer(&reg,1);
  4297  001F28  0E16               	movlw	low I2C_Read1ByteRegister@reg
  4298  001F2A  6E05               	movwf	I2C_SetBuffer@buffer^0,c
  4299  001F2C  0E00               	movlw	high I2C_Read1ByteRegister@reg
  4300  001F2E  6E06               	movwf	(I2C_SetBuffer@buffer+1)^0,c
  4301  001F30  0E00               	movlw	0
  4302  001F32  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  4303  001F34  0E01               	movlw	1
  4304  001F36  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  4305  001F38  ECE2  F012         	call	_I2C_SetBuffer	;wreg free
  4306  001F3C                     
  4307                           ;mcc_generated_files/examples/i2c_master_example.c: 70:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  4308  001F3C  0E00               	movlw	0
  4309  001F3E  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
  4310  001F40  0E00               	movlw	0
  4311  001F42  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  4312  001F44  0E00               	movlw	0
  4313  001F46  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  4314  001F48  0E00               	movlw	0
  4315  001F4A  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  4316  001F4C  EC23  F013         	call	_I2C_SetAddressNackCallback	;wreg free
  4317  001F50                     
  4318                           ;mcc_generated_files/examples/i2c_master_example.c: 71:     I2C_MasterWrite();
  4319  001F50  ECA7  F013         	call	_I2C_MasterWrite	;wreg free
  4320  001F54                     l3525:
  4321  001F54  EC8E  F012         	call	_I2C_Close	;wreg free
  4322  001F58  06E8               	decf	wreg,f,c
  4323  001F5A  B4D8               	btfsc	status,2,c
  4324  001F5C  EFB2  F00F         	goto	u2001
  4325  001F60  EFB4  F00F         	goto	u2000
  4326  001F64                     u2001:
  4327  001F64  EFAA  F00F         	goto	l3525
  4328  001F68                     u2000:
  4329  001F68                     
  4330                           ;mcc_generated_files/examples/i2c_master_example.c: 74:     return returnValue;
  4331  001F68  5018               	movf	I2C_Read1ByteRegister@returnValue^0,w,c
  4332  001F6A  0012               	return		;funcret
  4333  001F6C                     __end_of_I2C_Read1ByteRegister:
  4334                           	callstack 0
  4335                           
  4336 ;; *************** function _I2C_SetAddressNackCallback *****************
  4337 ;; Defined at:
  4338 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
  4341 ;;		 -> Absolute function(1), 
  4342 ;;  ptr             2   11[COMRAM] PTR void 
  4343 ;;		 -> NULL(0), 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;		None
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      void 
  4348 ;; Registers used:
  4349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4355 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4359 ;;Total ram usage:        4 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; Hardware stack levels required when called:    5
  4362 ;; This function calls:
  4363 ;;		_I2C_SetCallback
  4364 ;; This function is called by:
  4365 ;;		_I2C_Read1ByteRegister
  4366 ;;		_I2C_Read2ByteRegister
  4367 ;;		_I2C_Write1ByteRegister
  4368 ;;		_I2C_Write2ByteRegister
  4369 ;;		_I2C_WriteNBytes
  4370 ;;		_I2C_ReadDataBlock
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           	psect	text33
  4375  002646                     __ptext33:
  4376                           	callstack 0
  4377  002646                     _I2C_SetAddressNackCallback:
  4378                           	callstack 23
  4379  002646                     
  4380                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  4381  002646  C00A  F005         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  4382  00264A  C00B  F006         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  4383  00264E  C00C  F007         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  4384  002652  C00D  F008         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  4385  002656  0E02               	movlw	2
  4386  002658  EC04  F00F         	call	_I2C_SetCallback
  4387  00265C  0012               	return		;funcret
  4388  00265E                     __end_of_I2C_SetAddressNackCallback:
  4389                           	callstack 0
  4390                           
  4391 ;; *************** function _I2C_Open *****************
  4392 ;; Defined at:
  4393 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;  address         1    wreg     unsigned char 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  address         1    4[COMRAM] unsigned char 
  4398 ;;  returnValue     1    5[COMRAM] enum E353
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  1    wreg      enum E353
  4401 ;; Registers used:
  4402 ;;		wreg, status,2, status,0, cstack
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4411 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;Total ram usage:        2 bytes
  4413 ;; Hardware stack levels used:    1
  4414 ;; Hardware stack levels required when called:    5
  4415 ;; This function calls:
  4416 ;;		_I2C_MasterClearIrq
  4417 ;;		_I2C_MasterOpen
  4418 ;; This function is called by:
  4419 ;;		_I2C_Read1ByteRegister
  4420 ;;		_I2C_Read2ByteRegister
  4421 ;;		_I2C_Write1ByteRegister
  4422 ;;		_I2C_Write2ByteRegister
  4423 ;;		_I2C_WriteNBytes
  4424 ;;		_I2C_ReadNBytes
  4425 ;;		_I2C_ReadDataBlock
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	text34
  4430  001C7E                     __ptext34:
  4431                           	callstack 0
  4432  001C7E                     _I2C_Open:
  4433                           	callstack 23
  4434                           
  4435                           ;incstack = 0
  4436                           ;I2C_Open@address stored from wreg
  4437  001C7E  6E05               	movwf	I2C_Open@address^0,c
  4438  001C80                     
  4439                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  4440  001C80  0E01               	movlw	1
  4441  001C82  6E06               	movwf	I2C_Open@returnValue^0,c
  4442  001C84                     
  4443                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  4444  001C84  0100               	movlb	0	; () banked
  4445  001C86  B583               	btfsc	(_I2C_Status+35)& (0+255),2,b
  4446  001C88  EF48  F00E         	goto	u1851
  4447  001C8C  EF4A  F00E         	goto	u1850
  4448  001C90                     u1851:
  4449  001C90  EF84  F00E         	goto	l3367
  4450  001C94                     u1850:
  4451  001C94                     
  4452                           ; BSR set to: 0
  4453                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  4454  001C94  C005  F07C         	movff	I2C_Open@address,_I2C_Status+28
  4455  001C98                     
  4456                           ; BSR set to: 0
  4457                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  4458  001C98  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  4459  001C9A                     
  4460                           ; BSR set to: 0
  4461                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  4462  001C9A  8583               	bsf	(_I2C_Status+35)& (0+255),2,b
  4463  001C9C                     
  4464                           ; BSR set to: 0
  4465                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  4466  001C9C  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  4467  001C9E                     
  4468                           ; BSR set to: 0
  4469                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  4470  001C9E  0E0E               	movlw	14
  4471  001CA0  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4472  001CA2                     
  4473                           ; BSR set to: 0
  4474                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  4475  001CA2  0E01               	movlw	1
  4476  001CA4  6F7B               	movwf	(_I2C_Status+27)& (0+255),b
  4477  001CA6  0EF4               	movlw	244
  4478  001CA8  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
  4479  001CAA                     
  4480                           ; BSR set to: 0
  4481                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  4482  001CAA  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  4483  001CAC                     
  4484                           ; BSR set to: 0
  4485                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  4486  001CAC  0EC2               	movlw	low _I2C_CallbackReturnStop
  4487  001CAE  6F60               	movwf	_I2C_Status& (0+255),b
  4488  001CB0  0E27               	movlw	high _I2C_CallbackReturnStop
  4489  001CB2  6F61               	movwf	(_I2C_Status+1)& (0+255),b
  4490  001CB4                     
  4491                           ; BSR set to: 0
  4492                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  4493  001CB4  0E00               	movlw	0
  4494  001CB6  6F6C               	movwf	(_I2C_Status+12)& (0+255),b
  4495  001CB8  0E00               	movlw	0
  4496  001CBA  6F6D               	movwf	(_I2C_Status+13)& (0+255),b
  4497  001CBC                     
  4498                           ; BSR set to: 0
  4499                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  4500  001CBC  0EC2               	movlw	low _I2C_CallbackReturnStop
  4501  001CBE  6F62               	movwf	(_I2C_Status+2)& (0+255),b
  4502  001CC0  0E27               	movlw	high _I2C_CallbackReturnStop
  4503  001CC2  6F63               	movwf	(_I2C_Status+3)& (0+255),b
  4504  001CC4                     
  4505                           ; BSR set to: 0
  4506                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  4507  001CC4  0E00               	movlw	0
  4508  001CC6  6F6E               	movwf	(_I2C_Status+14)& (0+255),b
  4509  001CC8  0E00               	movlw	0
  4510  001CCA  6F6F               	movwf	(_I2C_Status+15)& (0+255),b
  4511  001CCC                     
  4512                           ; BSR set to: 0
  4513                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  4514  001CCC  0EC2               	movlw	low _I2C_CallbackReturnStop
  4515  001CCE  6F64               	movwf	(_I2C_Status+4)& (0+255),b
  4516  001CD0  0E27               	movlw	high _I2C_CallbackReturnStop
  4517  001CD2  6F65               	movwf	(_I2C_Status+5)& (0+255),b
  4518  001CD4                     
  4519                           ; BSR set to: 0
  4520                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  4521  001CD4  0E00               	movlw	0
  4522  001CD6  6F70               	movwf	(_I2C_Status+16)& (0+255),b
  4523  001CD8  0E00               	movlw	0
  4524  001CDA  6F71               	movwf	(_I2C_Status+17)& (0+255),b
  4525  001CDC                     
  4526                           ; BSR set to: 0
  4527                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  4528  001CDC  0EC2               	movlw	low _I2C_CallbackReturnStop
  4529  001CDE  6F66               	movwf	(_I2C_Status+6)& (0+255),b
  4530  001CE0  0E27               	movlw	high _I2C_CallbackReturnStop
  4531  001CE2  6F67               	movwf	(_I2C_Status+7)& (0+255),b
  4532  001CE4                     
  4533                           ; BSR set to: 0
  4534                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  4535  001CE4  0E00               	movlw	0
  4536  001CE6  6F72               	movwf	(_I2C_Status+18)& (0+255),b
  4537  001CE8  0E00               	movlw	0
  4538  001CEA  6F73               	movwf	(_I2C_Status+19)& (0+255),b
  4539  001CEC                     
  4540                           ; BSR set to: 0
  4541                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  4542  001CEC  0EBE               	movlw	low _I2C_CallbackReturnReset
  4543  001CEE  6F68               	movwf	(_I2C_Status+8)& (0+255),b
  4544  001CF0  0E27               	movlw	high _I2C_CallbackReturnReset
  4545  001CF2  6F69               	movwf	(_I2C_Status+9)& (0+255),b
  4546  001CF4                     
  4547                           ; BSR set to: 0
  4548                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  4549  001CF4  0E00               	movlw	0
  4550  001CF6  6F74               	movwf	(_I2C_Status+20)& (0+255),b
  4551  001CF8  0E00               	movlw	0
  4552  001CFA  6F75               	movwf	(_I2C_Status+21)& (0+255),b
  4553  001CFC                     
  4554                           ; BSR set to: 0
  4555                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
  4556  001CFC  ECED  F013         	call	_I2C_MasterClearIrq	;wreg free
  4557  001D00                     
  4558                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
  4559  001D00  ECF4  F012         	call	_I2C_MasterOpen	;wreg free
  4560  001D04                     
  4561                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
  4562  001D04  0E00               	movlw	0
  4563  001D06  6E06               	movwf	I2C_Open@returnValue^0,c
  4564  001D08                     l3367:
  4565                           
  4566                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
  4567  001D08  5006               	movf	I2C_Open@returnValue^0,w,c
  4568  001D0A  0012               	return		;funcret
  4569  001D0C                     __end_of_I2C_Open:
  4570                           	callstack 0
  4571                           
  4572 ;; *************** function _I2C_MasterOpen *****************
  4573 ;; Defined at:
  4574 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;		None
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;		None
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  1    wreg      _Bool 
  4581 ;; Registers used:
  4582 ;;		wreg, status,2
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4592 ;;Total ram usage:        0 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; Hardware stack levels required when called:    4
  4595 ;; This function calls:
  4596 ;;		Nothing
  4597 ;; This function is called by:
  4598 ;;		_I2C_Open
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           	psect	text35
  4603  0025E8                     __ptext35:
  4604                           	callstack 0
  4605  0025E8                     _I2C_MasterOpen:
  4606                           	callstack 23
  4607  0025E8                     
  4608                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
  4609  0025E8  BAC6               	btfsc	198,5,c	;volatile
  4610  0025EA  EFF9  F012         	goto	u1581
  4611  0025EE  EFFB  F012         	goto	u1580
  4612  0025F2                     u1581:
  4613  0025F2  EF04  F013         	goto	l378
  4614  0025F6                     u1580:
  4615  0025F6                     
  4616                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x00;
  4617  0025F6  0E00               	movlw	0
  4618  0025F8  6EC7               	movwf	199,c	;volatile
  4619                           
  4620                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
  4621  0025FA  0E08               	movlw	8
  4622  0025FC  6EC6               	movwf	198,c	;volatile
  4623                           
  4624                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
  4625  0025FE  0E00               	movlw	0
  4626  002600  6EC5               	movwf	197,c	;volatile
  4627                           
  4628                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x13;
  4629  002602  0E13               	movlw	19
  4630  002604  6EC8               	movwf	200,c	;volatile
  4631  002606                     
  4632                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
  4633  002606  8AC6               	bsf	198,5,c	;volatile
  4634  002608                     l378:
  4635  002608  0012               	return		;funcret
  4636  00260A                     __end_of_I2C_MasterOpen:
  4637                           	callstack 0
  4638                           
  4639 ;; *************** function _I2C_MasterWrite *****************
  4640 ;; Defined at:
  4641 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;		None
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;		None
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  1    wreg      enum E353
  4648 ;; Registers used:
  4649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;Total ram usage:        0 bytes
  4660 ;; Hardware stack levels used:    1
  4661 ;; Hardware stack levels required when called:   11
  4662 ;; This function calls:
  4663 ;;		_I2C_MasterOperation
  4664 ;; This function is called by:
  4665 ;;		_I2C_Read1ByteRegister
  4666 ;;		_I2C_Read2ByteRegister
  4667 ;;		_I2C_Write1ByteRegister
  4668 ;;		_I2C_Write2ByteRegister
  4669 ;;		_I2C_WriteNBytes
  4670 ;;		_I2C_ReadDataBlock
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text36
  4675  00274E                     __ptext36:
  4676                           	callstack 0
  4677  00274E                     _I2C_MasterWrite:
  4678                           	callstack 17
  4679  00274E                     
  4680                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  4681  00274E  0E00               	movlw	0
  4682  002750  EC2E  F011         	call	_I2C_MasterOperation
  4683  002754  0012               	return		;funcret
  4684  002756                     __end_of_I2C_MasterWrite:
  4685                           	callstack 0
  4686                           
  4687 ;; *************** function _I2C_MasterOperation *****************
  4688 ;; Defined at:
  4689 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;  read            1    wreg     _Bool 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  read            1   19[COMRAM] _Bool 
  4694 ;;  returnValue     1   20[COMRAM] enum E353
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  1    wreg      enum E353
  4697 ;; Registers used:
  4698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4705 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4708 ;;Total ram usage:        2 bytes
  4709 ;; Hardware stack levels used:    1
  4710 ;; Hardware stack levels required when called:   10
  4711 ;; This function calls:
  4712 ;;		_I2C_MasterStart
  4713 ;;		_I2C_Poller
  4714 ;; This function is called by:
  4715 ;;		_I2C_MasterWrite
  4716 ;;		_I2C_MasterRead
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           	psect	text37
  4721  00225C                     __ptext37:
  4722                           	callstack 0
  4723  00225C                     _I2C_MasterOperation:
  4724                           	callstack 17
  4725                           
  4726                           ;incstack = 0
  4727                           ;I2C_MasterOperation@read stored from wreg
  4728  00225C  6E14               	movwf	I2C_MasterOperation@read^0,c
  4729  00225E                     
  4730                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  4731  00225E  0E01               	movlw	1
  4732  002260  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
  4733  002262                     
  4734                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
  4735  002262  0100               	movlb	0	; () banked
  4736  002264  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  4737  002266  EF37  F011         	goto	u1591
  4738  00226A  EF39  F011         	goto	u1590
  4739  00226E                     u1591:
  4740  00226E  EF4E  F011         	goto	l3211
  4741  002272                     u1590:
  4742  002272                     
  4743                           ; BSR set to: 0
  4744                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
  4745  002272  8383               	bsf	(_I2C_Status+35)& (0+255),1,b
  4746  002274                     
  4747                           ; BSR set to: 0
  4748                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
  4749  002274  0E00               	movlw	0
  4750  002276  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
  4751  002278                     
  4752                           ; BSR set to: 0
  4753                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
  4754  002278  5014               	movf	I2C_MasterOperation@read^0,w,c
  4755  00227A  B4D8               	btfsc	status,2,c
  4756  00227C  EF42  F011         	goto	u1601
  4757  002280  EF44  F011         	goto	u1600
  4758  002284                     u1601:
  4759  002284  EF48  F011         	goto	l3205
  4760  002288                     u1600:
  4761  002288                     
  4762                           ; BSR set to: 0
  4763                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  4764  002288  0E01               	movlw	1
  4765  00228A  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4766                           
  4767                           ;mcc_generated_files/i2c_master.c: 235:         }
  4768  00228C  EF4A  F011         	goto	l3207
  4769  002290                     l3205:
  4770                           
  4771                           ; BSR set to: 0
  4772                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  4773  002290  0E02               	movlw	2
  4774  002292  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4775  002294                     l3207:
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
  4779  002294  ECE7  F013         	call	_I2C_MasterStart	;wreg free
  4780  002298                     
  4781                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
  4782  002298  EC14  F013         	call	_I2C_Poller	;wreg free
  4783  00229C                     l3211:
  4784                           
  4785                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
  4786  00229C  5015               	movf	I2C_MasterOperation@returnValue^0,w,c
  4787  00229E  0012               	return		;funcret
  4788  0022A0                     __end_of_I2C_MasterOperation:
  4789                           	callstack 0
  4790                           
  4791 ;; *************** function _I2C_Poller *****************
  4792 ;; Defined at:
  4793 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;		None
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;		None
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  1    wreg      void 
  4800 ;; Registers used:
  4801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4811 ;;Total ram usage:        0 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; Hardware stack levels required when called:    9
  4814 ;; This function calls:
  4815 ;;		_I2C_MasterFsm
  4816 ;;		_I2C_MasterWaitForEvent
  4817 ;; This function is called by:
  4818 ;;		_I2C_MasterOperation
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822                           	psect	text38
  4823  002628                     __ptext38:
  4824                           	callstack 0
  4825  002628                     _I2C_Poller:
  4826                           	callstack 17
  4827  002628                     
  4828                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  4829  002628  EF1A  F013         	goto	l3117
  4830  00262C                     l3113:
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
  4834  00262C  EC5A  F013         	call	_I2C_MasterWaitForEvent	;wreg free
  4835  002630                     
  4836                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
  4837  002630  ECB6  F00F         	call	_I2C_MasterFsm	;wreg free
  4838  002634                     l3117:
  4839                           
  4840                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  4841  002634  0100               	movlb	0	; () banked
  4842  002636  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  4843  002638  EF20  F013         	goto	u1421
  4844  00263C  EF22  F013         	goto	u1420
  4845  002640                     u1421:
  4846  002640  EF16  F013         	goto	l3113
  4847  002644                     u1420:
  4848  002644                     
  4849                           ; BSR set to: 0
  4850  002644  0012               	return		;funcret
  4851  002646                     __end_of_I2C_Poller:
  4852                           	callstack 0
  4853                           
  4854 ;; *************** function _I2C_MasterWaitForEvent *****************
  4855 ;; Defined at:
  4856 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;		None
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;		None
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  1    wreg      void 
  4863 ;; Registers used:
  4864 ;;		None
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4874 ;;Total ram usage:        0 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; Hardware stack levels required when called:    4
  4877 ;; This function calls:
  4878 ;;		Nothing
  4879 ;; This function is called by:
  4880 ;;		_I2C_Poller
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text39
  4885  0026B4                     __ptext39:
  4886                           	callstack 0
  4887  0026B4                     _I2C_MasterWaitForEvent:
  4888                           	callstack 21
  4889  0026B4                     l435:
  4890                           
  4891                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
  4892  0026B4  A69E               	btfss	158,3,c	;volatile
  4893  0026B6  EF5F  F013         	goto	u1341
  4894  0026BA  EF61  F013         	goto	u1340
  4895  0026BE                     u1341:
  4896  0026BE  EF5A  F013         	goto	l435
  4897  0026C2                     u1340:
  4898  0026C2  0012               	return		;funcret
  4899  0026C4                     __end_of_I2C_MasterWaitForEvent:
  4900                           	callstack 0
  4901                           
  4902 ;; *************** function _I2C_MasterFsm *****************
  4903 ;; Defined at:
  4904 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;		None
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;		None
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1    wreg      void 
  4911 ;; Registers used:
  4912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4920 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4921 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4922 ;;Total ram usage:        2 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; Hardware stack levels required when called:    8
  4925 ;; This function calls:
  4926 ;;		_I2C_DO_ADDRESS_NACK
  4927 ;;		_I2C_DO_IDLE
  4928 ;;		_I2C_DO_RCEN
  4929 ;;		_I2C_DO_RESET
  4930 ;;		_I2C_DO_RX
  4931 ;;		_I2C_DO_RX_ACK
  4932 ;;		_I2C_DO_RX_NACK_RESTART
  4933 ;;		_I2C_DO_RX_NACK_STOP
  4934 ;;		_I2C_DO_SEND_ADR_READ
  4935 ;;		_I2C_DO_SEND_ADR_WRITE
  4936 ;;		_I2C_DO_SEND_RESTART
  4937 ;;		_I2C_DO_SEND_RESTART_READ
  4938 ;;		_I2C_DO_SEND_RESTART_WRITE
  4939 ;;		_I2C_DO_SEND_STOP
  4940 ;;		_I2C_DO_TX
  4941 ;;		_I2C_DO_TX_EMPTY
  4942 ;;		_I2C_MasterClearIrq
  4943 ;;		_I2C_MasterIsNack
  4944 ;; This function is called by:
  4945 ;;		_I2C_Poller
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949                           	psect	text40
  4950  001F6C                     __ptext40:
  4951                           	callstack 0
  4952  001F6C                     _I2C_MasterFsm:
  4953                           	callstack 17
  4954  001F6C                     
  4955                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
  4956  001F6C  ECED  F013         	call	_I2C_MasterClearIrq	;wreg free
  4957  001F70                     
  4958                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  4959  001F70  0100               	movlb	0	; () banked
  4960  001F72  A183               	btfss	(_I2C_Status+35)& (0+255),0,b
  4961  001F74  EFBE  F00F         	goto	u1351
  4962  001F78  EFC0  F00F         	goto	u1350
  4963  001F7C                     u1351:
  4964  001F7C  EFCD  F00F         	goto	l3085
  4965  001F80                     u1350:
  4966  001F80                     
  4967                           ; BSR set to: 0
  4968  001F80  EC50  F013         	call	_I2C_MasterIsNack	;wreg free
  4969  001F84  0900               	iorlw	0
  4970  001F86  B4D8               	btfsc	status,2,c
  4971  001F88  EFC8  F00F         	goto	u1361
  4972  001F8C  EFCA  F00F         	goto	u1360
  4973  001F90                     u1361:
  4974  001F90  EFCD  F00F         	goto	l3085
  4975  001F94                     u1360:
  4976  001F94                     
  4977                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  4978  001F94  0E0F               	movlw	15
  4979  001F96  0100               	movlb	0	; () banked
  4980  001F98  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4981  001F9A                     l3085:
  4982                           
  4983                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = fsmStateTable[I2C_Status.
      +                          state]();
  4984  001F9A  0100               	movlb	0	; () banked
  4985  001F9C  5181               	movf	(_I2C_Status+33)& (0+255),w,b
  4986  001F9E  0D02               	mullw	2
  4987  001FA0  0E01               	movlw	low _fsmStateTable
  4988  001FA2  24F3               	addwf	243,w,c
  4989  001FA4  6EF6               	movwf	tblptrl,c
  4990  001FA6  0E10               	movlw	high _fsmStateTable
  4991  001FA8  20F4               	addwfc	244,w,c
  4992  001FAA  6EF7               	movwf	tblptrh,c
  4993  001FAC                     	if	1	;There are 3 active tblptr bytes
  4994  001FAC  6AF8               	clrf	tblptru,c
  4995  001FAE  0E00               	movlw	low (__mediumconst shr (0+16))
  4996  001FB0  22F8               	addwfc	tblptru,f,c
  4997  001FB2                     	endif
  4998  001FB2  0009               	tblrd		*+
  4999  001FB4  CFF5 F012          	movff	tablat,??_I2C_MasterFsm
  5000  001FB8  0009               	tblrd		*+
  5001  001FBA  CFF5 F013          	movff	tablat,??_I2C_MasterFsm+1
  5002  001FBE  D802               	call	u1378
  5003  001FC0  EFEB  F00F         	goto	u1379
  5004  001FC4                     u1378:
  5005  001FC4  0005               	push	
  5006  001FC6  6EFA               	movwf	pclath,c
  5007  001FC8  5012               	movf	??_I2C_MasterFsm^0,w,c
  5008  001FCA  6EFD               	movwf	tosl,c
  5009  001FCC  5013               	movf	(??_I2C_MasterFsm+1)^0,w,c
  5010  001FCE  6EFE               	movwf	tosh,c
  5011  001FD0  6AFF               	clrf	tosu,c
  5012  001FD2  50FA               	movf	pclath,w,c
  5013  001FD4  0012               	return		;indir
  5014  001FD6                     u1379:
  5015  001FD6  0100               	movlb	0	; () banked
  5016  001FD8  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  5017  001FDA                     
  5018                           ; BSR set to: 0
  5019  001FDA  0012               	return		;funcret
  5020  001FDC                     __end_of_I2C_MasterFsm:
  5021                           	callstack 0
  5022                           
  5023 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  5024 ;; Defined at:
  5025 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;		None
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;		None
  5030 ;; Return value:  Size  Location     Type
  5031 ;;                  1    wreg      enum E3101
  5032 ;; Registers used:
  5033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;Total ram usage:        2 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; Hardware stack levels required when called:    7
  5046 ;; This function calls:
  5047 ;;		Absolute function
  5048 ;;		_I2C_CallbackReturnReset
  5049 ;;		_I2C_CallbackReturnStop
  5050 ;;		_I2C_DO_SEND_RESTART
  5051 ;;		_I2C_DO_SEND_STOP
  5052 ;;		_rd1RegCompleteHandler
  5053 ;;		_rd2RegCompleteHandler
  5054 ;;		_rdBlkRegCompleteHandler
  5055 ;;		_wr1RegCompleteHandler
  5056 ;;		_wr2RegCompleteHandler
  5057 ;; This function is called by:
  5058 ;;		_I2C_MasterFsm
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062                           	psect	text41
  5063  002046                     __ptext41:
  5064                           	callstack 0
  5065  002046                     _I2C_DO_ADDRESS_NACK:
  5066                           	callstack 17
  5067  002046                     
  5068                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
  5069  002046  0100               	movlb	0	; () banked
  5070  002048  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  5071  00204A                     
  5072                           ; BSR set to: 0
  5073                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
  5074  00204A  0E02               	movlw	2
  5075  00204C  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  5076                           
  5077                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  5078  00204E  EF31  F010         	goto	l3055
  5079  002052                     l3045:
  5080                           
  5081                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
  5082  002052  ECBB  F013         	call	_I2C_DO_SEND_RESTART	;wreg free
  5083  002056  EF55  F010         	goto	l357
  5084  00205A                     l3049:
  5085                           
  5086                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
  5087  00205A  ECB7  F013         	call	_I2C_DO_SEND_STOP	;wreg free
  5088  00205E  EF55  F010         	goto	l357
  5089  002062                     l3055:
  5090                           
  5091                           ; BSR set to: 0
  5092  002062  C070  F00E         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
  5093  002066  C071  F00F         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
  5094  00206A  D802               	call	u1298
  5095  00206C  EF41  F010         	goto	u1299
  5096  002070                     u1298:
  5097  002070  0005               	push	
  5098  002072  6EFA               	movwf	pclath,c
  5099  002074  5164               	movf	(_I2C_Status+4)& (0+255),w,b
  5100  002076  6EFD               	movwf	tosl,c
  5101  002078  5165               	movf	(_I2C_Status+5)& (0+255),w,b
  5102  00207A  6EFE               	movwf	tosh,c
  5103  00207C  6AFF               	clrf	tosu,c
  5104  00207E  50FA               	movf	pclath,w,c
  5105  002080  0012               	return		;indir
  5106  002082                     u1299:
  5107  002082  6E10               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
  5108  002084  6A11               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
  5109                           
  5110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5111                           ; Switch size 1, requested type "simple"
  5112                           ; Number of cases is 1, Range of values is 0 to 0
  5113                           ; switch strategies available:
  5114                           ; Name         Instructions Cycles
  5115                           ; simple_byte            4     3 (average)
  5116                           ;	Chosen strategy is simple_byte
  5117  002086  5011               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
  5118  002088  0A00               	xorlw	0	; case 0
  5119  00208A  B4D8               	btfsc	status,2,c
  5120  00208C  EF4A  F010         	goto	l4495
  5121  002090  EF2D  F010         	goto	l3049
  5122  002094                     l4495:
  5123                           
  5124                           ; Switch size 1, requested type "simple"
  5125                           ; Number of cases is 2, Range of values is 2 to 3
  5126                           ; switch strategies available:
  5127                           ; Name         Instructions Cycles
  5128                           ; simple_byte            7     4 (average)
  5129                           ;	Chosen strategy is simple_byte
  5130  002094  5010               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
  5131  002096  0A02               	xorlw	2	; case 2
  5132  002098  B4D8               	btfsc	status,2,c
  5133  00209A  EF29  F010         	goto	l3045
  5134  00209E  0A01               	xorlw	1	; case 3
  5135  0020A0  B4D8               	btfsc	status,2,c
  5136  0020A2  EF29  F010         	goto	l3045
  5137  0020A6  EF2D  F010         	goto	l3049
  5138  0020AA                     l357:
  5139  0020AA  0012               	return		;funcret
  5140  0020AC                     __end_of_I2C_DO_ADDRESS_NACK:
  5141                           	callstack 0
  5142                           
  5143 ;; *************** function _I2C_DO_RESET *****************
  5144 ;; Defined at:
  5145 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;		None
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;		None
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  1    wreg      enum E3101
  5152 ;; Registers used:
  5153 ;;		wreg, status,2
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;Total ram usage:        0 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; Hardware stack levels required when called:    4
  5166 ;; This function calls:
  5167 ;;		Nothing
  5168 ;; This function is called by:
  5169 ;;		_I2C_MasterFsm
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173                           	psect	text42
  5174  0026E4                     __ptext42:
  5175                           	callstack 0
  5176  0026E4                     _I2C_DO_RESET:
  5177                           	callstack 20
  5178  0026E4                     
  5179                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
  5180  0026E4  0100               	movlb	0	; () banked
  5181  0026E6  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  5182  0026E8                     
  5183                           ; BSR set to: 0
  5184                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
  5185  0026E8  0E00               	movlw	0
  5186  0026EA  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  5187  0026EC                     
  5188                           ; BSR set to: 0
  5189                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
  5190  0026EC  0E0E               	movlw	14
  5191  0026EE                     
  5192                           ; BSR set to: 0
  5193  0026EE  0012               	return		;funcret
  5194  0026F0                     __end_of_I2C_DO_RESET:
  5195                           	callstack 0
  5196                           
  5197 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  5198 ;; Defined at:
  5199 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;		None
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      enum E3101
  5206 ;; Registers used:
  5207 ;;		wreg, cstack
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;Total ram usage:        0 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; Hardware stack levels required when called:    5
  5220 ;; This function calls:
  5221 ;;		_I2C_MasterSendNack
  5222 ;; This function is called by:
  5223 ;;		_I2C_DO_RX
  5224 ;;		_I2C_MasterFsm
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           	psect	text43
  5229  002756                     __ptext43:
  5230                           	callstack 0
  5231  002756                     _I2C_DO_RX_NACK_RESTART:
  5232                           	callstack 19
  5233  002756                     
  5234                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
  5235  002756  ECCE  F013         	call	_I2C_MasterSendNack	;wreg free
  5236  00275A                     
  5237                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
  5238  00275A  0E09               	movlw	9
  5239  00275C  0012               	return		;funcret
  5240  00275E                     __end_of_I2C_DO_RX_NACK_RESTART:
  5241                           	callstack 0
  5242                           
  5243 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  5244 ;; Defined at:
  5245 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;		None
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;		None
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  1    wreg      enum E3101
  5252 ;; Registers used:
  5253 ;;		wreg, cstack
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5263 ;;Total ram usage:        0 bytes
  5264 ;; Hardware stack levels used:    1
  5265 ;; Hardware stack levels required when called:    5
  5266 ;; This function calls:
  5267 ;;		_I2C_MasterSendNack
  5268 ;; This function is called by:
  5269 ;;		_I2C_DO_RX
  5270 ;;		_I2C_MasterFsm
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text44
  5275  00275E                     __ptext44:
  5276                           	callstack 0
  5277  00275E                     _I2C_DO_RX_NACK_STOP:
  5278                           	callstack 19
  5279  00275E                     
  5280                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
  5281  00275E  ECCE  F013         	call	_I2C_MasterSendNack	;wreg free
  5282  002762                     
  5283                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
  5284  002762  0E0A               	movlw	10
  5285  002764  0012               	return		;funcret
  5286  002766                     __end_of_I2C_DO_RX_NACK_STOP:
  5287                           	callstack 0
  5288                           
  5289 ;; *************** function _I2C_DO_RX_ACK *****************
  5290 ;; Defined at:
  5291 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;		None
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;		None
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  1    wreg      enum E3101
  5298 ;; Registers used:
  5299 ;;		wreg, cstack
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5309 ;;Total ram usage:        0 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; Hardware stack levels required when called:    5
  5312 ;; This function calls:
  5313 ;;		_I2C_MasterSendAck
  5314 ;; This function is called by:
  5315 ;;		_I2C_MasterFsm
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318                           
  5319                           	psect	text45
  5320  002766                     __ptext45:
  5321                           	callstack 0
  5322  002766                     _I2C_DO_RX_ACK:
  5323                           	callstack 19
  5324  002766                     
  5325                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
  5326  002766  ECCB  F013         	call	_I2C_MasterSendAck	;wreg free
  5327  00276A                     
  5328                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
  5329  00276A  0E05               	movlw	5
  5330  00276C  0012               	return		;funcret
  5331  00276E                     __end_of_I2C_DO_RX_ACK:
  5332                           	callstack 0
  5333                           
  5334 ;; *************** function _I2C_DO_SEND_STOP *****************
  5335 ;; Defined at:
  5336 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;		None
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;		None
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  1    wreg      enum E3101
  5343 ;; Registers used:
  5344 ;;		wreg, cstack
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;Total ram usage:        0 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; Hardware stack levels required when called:    5
  5357 ;; This function calls:
  5358 ;;		_I2C_MasterStop
  5359 ;; This function is called by:
  5360 ;;		_I2C_DO_TX
  5361 ;;		_I2C_DO_TX_EMPTY
  5362 ;;		_I2C_DO_ADDRESS_NACK
  5363 ;;		_I2C_MasterFsm
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text46
  5368  00276E                     __ptext46:
  5369                           	callstack 0
  5370  00276E                     _I2C_DO_SEND_STOP:
  5371                           	callstack 18
  5372  00276E                     
  5373                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
  5374  00276E  ECE3  F013         	call	_I2C_MasterStop	;wreg free
  5375  002772                     
  5376                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
  5377  002772  0E00               	movlw	0
  5378  002774  0012               	return		;funcret
  5379  002776                     __end_of_I2C_DO_SEND_STOP:
  5380                           	callstack 0
  5381                           
  5382 ;; *************** function _I2C_DO_SEND_RESTART *****************
  5383 ;; Defined at:
  5384 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
  5385 ;; Parameters:    Size  Location     Type
  5386 ;;		None
  5387 ;; Auto vars:     Size  Location     Type
  5388 ;;		None
  5389 ;; Return value:  Size  Location     Type
  5390 ;;                  1    wreg      enum E3101
  5391 ;; Registers used:
  5392 ;;		wreg, cstack
  5393 ;; Tracked objects:
  5394 ;;		On entry : 0/0
  5395 ;;		On exit  : 0/0
  5396 ;;		Unchanged: 0/0
  5397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5402 ;;Total ram usage:        0 bytes
  5403 ;; Hardware stack levels used:    1
  5404 ;; Hardware stack levels required when called:    5
  5405 ;; This function calls:
  5406 ;;		_I2C_MasterEnableRestart
  5407 ;; This function is called by:
  5408 ;;		_I2C_DO_TX_EMPTY
  5409 ;;		_I2C_DO_ADDRESS_NACK
  5410 ;;		_I2C_MasterFsm
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414                           	psect	text47
  5415  002776                     __ptext47:
  5416                           	callstack 0
  5417  002776                     _I2C_DO_SEND_RESTART:
  5418                           	callstack 18
  5419  002776                     
  5420                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
  5421  002776  ECE5  F013         	call	_I2C_MasterEnableRestart	;wreg free
  5422  00277A                     
  5423                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
  5424  00277A  0E01               	movlw	1
  5425  00277C  0012               	return		;funcret
  5426  00277E                     __end_of_I2C_DO_SEND_RESTART:
  5427                           	callstack 0
  5428                           
  5429 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  5430 ;; Defined at:
  5431 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;		None
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;		None
  5436 ;; Return value:  Size  Location     Type
  5437 ;;                  1    wreg      enum E3101
  5438 ;; Registers used:
  5439 ;;		wreg, cstack
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5449 ;;Total ram usage:        0 bytes
  5450 ;; Hardware stack levels used:    1
  5451 ;; Hardware stack levels required when called:    5
  5452 ;; This function calls:
  5453 ;;		_I2C_MasterEnableRestart
  5454 ;; This function is called by:
  5455 ;;		_I2C_DO_TX
  5456 ;;		_I2C_MasterFsm
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460                           	psect	text48
  5461  00277E                     __ptext48:
  5462                           	callstack 0
  5463  00277E                     _I2C_DO_SEND_RESTART_WRITE:
  5464                           	callstack 18
  5465  00277E                     
  5466                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
  5467  00277E  ECE5  F013         	call	_I2C_MasterEnableRestart	;wreg free
  5468  002782                     
  5469                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
  5470  002782  0E02               	movlw	2
  5471  002784  0012               	return		;funcret
  5472  002786                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  5473                           	callstack 0
  5474                           
  5475 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  5476 ;; Defined at:
  5477 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;		None
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;		None
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  1    wreg      enum E3101
  5484 ;; Registers used:
  5485 ;;		wreg, cstack
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5495 ;;Total ram usage:        0 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:    5
  5498 ;; This function calls:
  5499 ;;		_I2C_MasterEnableRestart
  5500 ;; This function is called by:
  5501 ;;		_I2C_DO_TX
  5502 ;;		_I2C_MasterFsm
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           	psect	text49
  5507  002786                     __ptext49:
  5508                           	callstack 0
  5509  002786                     _I2C_DO_SEND_RESTART_READ:
  5510                           	callstack 18
  5511  002786                     
  5512                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
  5513  002786  ECE5  F013         	call	_I2C_MasterEnableRestart	;wreg free
  5514  00278A                     
  5515                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
  5516  00278A  0E01               	movlw	1
  5517  00278C  0012               	return		;funcret
  5518  00278E                     __end_of_I2C_DO_SEND_RESTART_READ:
  5519                           	callstack 0
  5520                           
  5521 ;; *************** function _I2C_DO_RCEN *****************
  5522 ;; Defined at:
  5523 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;		None
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;		None
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  1    wreg      enum E3101
  5530 ;; Registers used:
  5531 ;;		wreg, cstack
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;Total ram usage:        0 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; Hardware stack levels required when called:    5
  5544 ;; This function calls:
  5545 ;;		_I2C_MasterStartRx
  5546 ;; This function is called by:
  5547 ;;		_I2C_MasterFsm
  5548 ;; This function uses a non-reentrant model
  5549 ;;
  5550                           
  5551                           	psect	text50
  5552  0026F0                     __ptext50:
  5553                           	callstack 0
  5554  0026F0                     _I2C_DO_RCEN:
  5555                           	callstack 19
  5556  0026F0                     
  5557                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
  5558  0026F0  0100               	movlb	0	; () banked
  5559  0026F2  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  5560  0026F4                     
  5561                           ; BSR set to: 0
  5562                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
  5563  0026F4  ECDD  F013         	call	_I2C_MasterStartRx	;wreg free
  5564  0026F8                     
  5565                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
  5566  0026F8  0E04               	movlw	4
  5567  0026FA  0012               	return		;funcret
  5568  0026FC                     __end_of_I2C_DO_RCEN:
  5569                           	callstack 0
  5570                           
  5571 ;; *************** function _I2C_DO_RX *****************
  5572 ;; Defined at:
  5573 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;		None
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;		None
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  1    wreg      enum E3101
  5580 ;; Registers used:
  5581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5589 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5590 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5591 ;;Total ram usage:        2 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; Hardware stack levels required when called:    7
  5594 ;; This function calls:
  5595 ;;		Absolute function
  5596 ;;		_I2C_CallbackReturnReset
  5597 ;;		_I2C_CallbackReturnStop
  5598 ;;		_I2C_DO_RX_NACK_RESTART
  5599 ;;		_I2C_DO_RX_NACK_STOP
  5600 ;;		_I2C_MasterGetRxData
  5601 ;;		_I2C_MasterSendAck
  5602 ;;		_rd1RegCompleteHandler
  5603 ;;		_rd2RegCompleteHandler
  5604 ;;		_rdBlkRegCompleteHandler
  5605 ;;		_wr1RegCompleteHandler
  5606 ;;		_wr2RegCompleteHandler
  5607 ;; This function is called by:
  5608 ;;		_I2C_MasterFsm
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text51
  5613  001B42                     __ptext51:
  5614                           	callstack 0
  5615  001B42                     _I2C_DO_RX:
  5616                           	callstack 17
  5617  001B42                     
  5618                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  5619  001B42  ECDB  F013         	call	_I2C_MasterGetRxData	;wreg free
  5620  001B46  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  5621  001B4A  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  5622  001B4E  6EDF               	movwf	indf2,c
  5623  001B50  0100               	movlb	0	; () banked
  5624  001B52  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  5625  001B54  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  5626  001B56                     
  5627                           ; BSR set to: 0
  5628                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
  5629  001B56  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  5630  001B58  A0D8               	btfss	status,0,c
  5631  001B5A  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  5632  001B5C  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  5633  001B5E  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  5634  001B60  B4D8               	btfsc	status,2,c
  5635  001B62  EFB5  F00D         	goto	u1261
  5636  001B66  EFB7  F00D         	goto	u1260
  5637  001B6A                     u1261:
  5638  001B6A  EFBC  F00D         	goto	l294
  5639  001B6E                     u1260:
  5640  001B6E                     
  5641                           ; BSR set to: 0
  5642                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
  5643  001B6E  ECCB  F013         	call	_I2C_MasterSendAck	;wreg free
  5644  001B72                     
  5645                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
  5646  001B72  0E05               	movlw	5
  5647  001B74  EFF3  F00D         	goto	l295
  5648  001B78                     l294:
  5649                           
  5650                           ; BSR set to: 0
  5651                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
  5652  001B78  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  5653                           
  5654                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  5655  001B7A  EFC7  F00D         	goto	l2989
  5656  001B7E                     l2979:
  5657                           
  5658                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
  5659  001B7E  ECAB  F013         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
  5660  001B82  EFF3  F00D         	goto	l295
  5661  001B86                     l2983:
  5662                           
  5663                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
  5664  001B86  ECAF  F013         	call	_I2C_DO_RX_NACK_STOP	;wreg free
  5665  001B8A  EFF3  F00D         	goto	l295
  5666  001B8E                     l2989:
  5667                           
  5668                           ; BSR set to: 0
  5669  001B8E  C06C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  5670  001B92  C06D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  5671  001B96  D802               	call	u1278
  5672  001B98  EFD7  F00D         	goto	u1279
  5673  001B9C                     u1278:
  5674  001B9C  0005               	push	
  5675  001B9E  6EFA               	movwf	pclath,c
  5676  001BA0  5160               	movf	_I2C_Status& (0+255),w,b
  5677  001BA2  6EFD               	movwf	tosl,c
  5678  001BA4  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  5679  001BA6  6EFE               	movwf	tosh,c
  5680  001BA8  6AFF               	clrf	tosu,c
  5681  001BAA  50FA               	movf	pclath,w,c
  5682  001BAC  0012               	return		;indir
  5683  001BAE                     u1279:
  5684  001BAE  6E10               	movwf	??_I2C_DO_RX^0,c
  5685  001BB0  6A11               	clrf	(??_I2C_DO_RX+1)^0,c
  5686                           
  5687                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5688                           ; Switch size 1, requested type "simple"
  5689                           ; Number of cases is 1, Range of values is 0 to 0
  5690                           ; switch strategies available:
  5691                           ; Name         Instructions Cycles
  5692                           ; simple_byte            4     3 (average)
  5693                           ;	Chosen strategy is simple_byte
  5694  001BB2  5011               	movf	(??_I2C_DO_RX+1)^0,w,c
  5695  001BB4  0A00               	xorlw	0	; case 0
  5696  001BB6  B4D8               	btfsc	status,2,c
  5697  001BB8  EFE0  F00D         	goto	l4497
  5698  001BBC  EFC3  F00D         	goto	l2983
  5699  001BC0                     l4497:
  5700                           
  5701                           ; Switch size 1, requested type "simple"
  5702                           ; Number of cases is 4, Range of values is 1 to 4
  5703                           ; switch strategies available:
  5704                           ; Name         Instructions Cycles
  5705                           ; simple_byte           13     7 (average)
  5706                           ;	Chosen strategy is simple_byte
  5707  001BC0  5010               	movf	??_I2C_DO_RX^0,w,c
  5708  001BC2  0A01               	xorlw	1	; case 1
  5709  001BC4  B4D8               	btfsc	status,2,c
  5710  001BC6  EFC3  F00D         	goto	l2983
  5711  001BCA  0A03               	xorlw	3	; case 2
  5712  001BCC  B4D8               	btfsc	status,2,c
  5713  001BCE  EFBF  F00D         	goto	l2979
  5714  001BD2  0A01               	xorlw	1	; case 3
  5715  001BD4  B4D8               	btfsc	status,2,c
  5716  001BD6  EFBF  F00D         	goto	l2979
  5717  001BDA  0A07               	xorlw	7	; case 4
  5718  001BDC  B4D8               	btfsc	status,2,c
  5719  001BDE  EFC3  F00D         	goto	l2983
  5720  001BE2  EFC3  F00D         	goto	l2983
  5721  001BE6                     l295:
  5722  001BE6  0012               	return		;funcret
  5723  001BE8                     __end_of_I2C_DO_RX:
  5724                           	callstack 0
  5725                           
  5726 ;; *************** function _I2C_DO_TX *****************
  5727 ;; Defined at:
  5728 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;		None
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;		None
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  1    wreg      enum E3101
  5735 ;; Registers used:
  5736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5744 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5745 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5746 ;;Total ram usage:        2 bytes
  5747 ;; Hardware stack levels used:    1
  5748 ;; Hardware stack levels required when called:    7
  5749 ;; This function calls:
  5750 ;;		Absolute function
  5751 ;;		_I2C_CallbackReturnReset
  5752 ;;		_I2C_CallbackReturnStop
  5753 ;;		_I2C_DO_SEND_RESTART_READ
  5754 ;;		_I2C_DO_SEND_RESTART_WRITE
  5755 ;;		_I2C_DO_SEND_STOP
  5756 ;;		_I2C_MasterIsNack
  5757 ;;		_I2C_MasterSendTxData
  5758 ;;		_rd1RegCompleteHandler
  5759 ;;		_rd2RegCompleteHandler
  5760 ;;		_rdBlkRegCompleteHandler
  5761 ;;		_wr1RegCompleteHandler
  5762 ;;		_wr2RegCompleteHandler
  5763 ;; This function is called by:
  5764 ;;		_I2C_MasterFsm
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           	psect	text52
  5769  00191C                     __ptext52:
  5770                           	callstack 0
  5771  00191C                     _I2C_DO_TX:
  5772                           	callstack 17
  5773  00191C                     
  5774                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
  5775  00191C  EC50  F013         	call	_I2C_MasterIsNack	;wreg free
  5776  001920  0900               	iorlw	0
  5777  001922  B4D8               	btfsc	status,2,c
  5778  001924  EF96  F00C         	goto	u1231
  5779  001928  EF98  F00C         	goto	u1230
  5780  00192C                     u1231:
  5781  00192C  EFD3  F00C         	goto	l278
  5782  001930                     u1230:
  5783  001930  EFA6  F00C         	goto	l2949
  5784  001934                     l2935:
  5785                           
  5786                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  5787  001934  ECC3  F013         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
  5788  001938  EFEF  F00C         	goto	l281
  5789  00193C                     l2939:
  5790                           
  5791                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  5792  00193C  ECBF  F013         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
  5793  001940  EFEF  F00C         	goto	l281
  5794  001944                     l2943:
  5795                           
  5796                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
  5797  001944  ECB7  F013         	call	_I2C_DO_SEND_STOP	;wreg free
  5798  001948  EFEF  F00C         	goto	l281
  5799  00194C                     l2949:
  5800  00194C  C072  F00E         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
  5801  001950  C073  F00F         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
  5802  001954  D802               	call	u1248
  5803  001956  EFB7  F00C         	goto	u1249
  5804  00195A                     u1248:
  5805  00195A  0005               	push	
  5806  00195C  6EFA               	movwf	pclath,c
  5807  00195E  0100               	movlb	0	; () banked
  5808  001960  5166               	movf	(_I2C_Status+6)& (0+255),w,b
  5809  001962  6EFD               	movwf	tosl,c
  5810  001964  5167               	movf	(_I2C_Status+7)& (0+255),w,b
  5811  001966  6EFE               	movwf	tosh,c
  5812  001968  6AFF               	clrf	tosu,c
  5813  00196A  50FA               	movf	pclath,w,c
  5814  00196C  0012               	return		;indir
  5815  00196E                     u1249:
  5816  00196E  6E10               	movwf	??_I2C_DO_TX^0,c
  5817  001970  6A11               	clrf	(??_I2C_DO_TX+1)^0,c
  5818                           
  5819                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5820                           ; Switch size 1, requested type "simple"
  5821                           ; Number of cases is 1, Range of values is 0 to 0
  5822                           ; switch strategies available:
  5823                           ; Name         Instructions Cycles
  5824                           ; simple_byte            4     3 (average)
  5825                           ;	Chosen strategy is simple_byte
  5826  001972  5011               	movf	(??_I2C_DO_TX+1)^0,w,c
  5827  001974  0A00               	xorlw	0	; case 0
  5828  001976  B4D8               	btfsc	status,2,c
  5829  001978  EFC0  F00C         	goto	l4499
  5830  00197C  EFA2  F00C         	goto	l2943
  5831  001980                     l4499:
  5832                           
  5833                           ; Switch size 1, requested type "simple"
  5834                           ; Number of cases is 4, Range of values is 1 to 4
  5835                           ; switch strategies available:
  5836                           ; Name         Instructions Cycles
  5837                           ; simple_byte           13     7 (average)
  5838                           ;	Chosen strategy is simple_byte
  5839  001980  5010               	movf	??_I2C_DO_TX^0,w,c
  5840  001982  0A01               	xorlw	1	; case 1
  5841  001984  B4D8               	btfsc	status,2,c
  5842  001986  EFA2  F00C         	goto	l2943
  5843  00198A  0A03               	xorlw	3	; case 2
  5844  00198C  B4D8               	btfsc	status,2,c
  5845  00198E  EF9A  F00C         	goto	l2935
  5846  001992  0A01               	xorlw	1	; case 3
  5847  001994  B4D8               	btfsc	status,2,c
  5848  001996  EF9E  F00C         	goto	l2939
  5849  00199A  0A07               	xorlw	7	; case 4
  5850  00199C  B4D8               	btfsc	status,2,c
  5851  00199E  EFA2  F00C         	goto	l2943
  5852  0019A2  EFA2  F00C         	goto	l2943
  5853  0019A6                     l278:
  5854                           
  5855                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
  5856  0019A6  0100               	movlb	0	; () banked
  5857  0019A8  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  5858  0019AA                     
  5859                           ; BSR set to: 0
  5860                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  5861  0019AA  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  5862  0019AE  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  5863  0019B2  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  5864  0019B4  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  5865  0019B6  50DF               	movf	indf2,w,c
  5866  0019B8  ECC7  F013         	call	_I2C_MasterSendTxData
  5867  0019BC                     
  5868                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  5869  0019BC  0100               	movlb	0	; () banked
  5870  0019BE  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  5871  0019C0  A0D8               	btfss	status,0,c
  5872  0019C2  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  5873  0019C4  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  5874  0019C6  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  5875  0019C8  A4D8               	btfss	status,2,c
  5876  0019CA  EFE9  F00C         	goto	u1251
  5877  0019CE  EFEB  F00C         	goto	u1250
  5878  0019D2                     u1251:
  5879  0019D2  EFEE  F00C         	goto	l2957
  5880  0019D6                     u1250:
  5881  0019D6                     
  5882                           ; BSR set to: 0
  5883  0019D6  0E06               	movlw	6
  5884  0019D8  EFEF  F00C         	goto	l281
  5885  0019DC                     l2957:
  5886                           
  5887                           ; BSR set to: 0
  5888  0019DC  0E03               	movlw	3
  5889  0019DE                     l281:
  5890  0019DE  0012               	return		;funcret
  5891  0019E0                     __end_of_I2C_DO_TX:
  5892                           	callstack 0
  5893                           
  5894 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  5895 ;; Defined at:
  5896 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;		None
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;		None
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      enum E3101
  5903 ;; Registers used:
  5904 ;;		wreg, status,2, status,0, cstack
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;Total ram usage:        0 bytes
  5915 ;; Hardware stack levels used:    1
  5916 ;; Hardware stack levels required when called:    5
  5917 ;; This function calls:
  5918 ;;		_I2C_MasterSendTxData
  5919 ;; This function is called by:
  5920 ;;		_I2C_MasterFsm
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           	psect	text53
  5925  0026C4                     __ptext53:
  5926                           	callstack 0
  5927  0026C4                     _I2C_DO_SEND_ADR_WRITE:
  5928                           	callstack 19
  5929  0026C4                     
  5930                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
  5931  0026C4  0100               	movlb	0	; () banked
  5932  0026C6  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  5933  0026C8                     
  5934                           ; BSR set to: 0
  5935                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                          );
  5936  0026C8  517C               	movf	(_I2C_Status+28)& (0+255),w,b
  5937  0026CA  257C               	addwf	(_I2C_Status+28)& (0+255),w,b
  5938  0026CC  ECC7  F013         	call	_I2C_MasterSendTxData
  5939  0026D0                     
  5940                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
  5941  0026D0  0E03               	movlw	3
  5942  0026D2  0012               	return		;funcret
  5943  0026D4                     __end_of_I2C_DO_SEND_ADR_WRITE:
  5944                           	callstack 0
  5945                           
  5946 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  5947 ;; Defined at:
  5948 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
  5949 ;; Parameters:    Size  Location     Type
  5950 ;;		None
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;		None
  5953 ;; Return value:  Size  Location     Type
  5954 ;;                  1    wreg      enum E3101
  5955 ;; Registers used:
  5956 ;;		wreg, status,0, cstack
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5966 ;;Total ram usage:        0 bytes
  5967 ;; Hardware stack levels used:    1
  5968 ;; Hardware stack levels required when called:    5
  5969 ;; This function calls:
  5970 ;;		_I2C_MasterSendTxData
  5971 ;; This function is called by:
  5972 ;;		_I2C_MasterFsm
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           	psect	text54
  5977  0026D4                     __ptext54:
  5978                           	callstack 0
  5979  0026D4                     _I2C_DO_SEND_ADR_READ:
  5980                           	callstack 19
  5981  0026D4                     
  5982                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
  5983  0026D4  0100               	movlb	0	; () banked
  5984  0026D6  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  5985  0026D8                     
  5986                           ; BSR set to: 0
  5987                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                           | 1);
  5988  0026D8  80D8               	bsf	status,0,c
  5989  0026DA  357C               	rlcf	(_I2C_Status+28)& (0+255),w,b
  5990  0026DC  ECC7  F013         	call	_I2C_MasterSendTxData
  5991  0026E0                     
  5992                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
  5993  0026E0  0E05               	movlw	5
  5994  0026E2  0012               	return		;funcret
  5995  0026E4                     __end_of_I2C_DO_SEND_ADR_READ:
  5996                           	callstack 0
  5997                           
  5998 ;; *************** function _I2C_DO_IDLE *****************
  5999 ;; Defined at:
  6000 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;		None
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;		None
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  1    wreg      enum E3101
  6007 ;; Registers used:
  6008 ;;		wreg, status,2
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6018 ;;Total ram usage:        0 bytes
  6019 ;; Hardware stack levels used:    1
  6020 ;; Hardware stack levels required when called:    4
  6021 ;; This function calls:
  6022 ;;		Nothing
  6023 ;; This function is called by:
  6024 ;;		_I2C_MasterFsm
  6025 ;; This function uses a non-reentrant model
  6026 ;;
  6027                           
  6028                           	psect	text55
  6029  0026FC                     __ptext55:
  6030                           	callstack 0
  6031  0026FC                     _I2C_DO_IDLE:
  6032                           	callstack 20
  6033  0026FC                     
  6034                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
  6035  0026FC  0100               	movlb	0	; () banked
  6036  0026FE  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  6037  002700                     
  6038                           ; BSR set to: 0
  6039                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
  6040  002700  0E00               	movlw	0
  6041  002702  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  6042  002704                     
  6043                           ; BSR set to: 0
  6044                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
  6045  002704  0E0E               	movlw	14
  6046  002706                     
  6047                           ; BSR set to: 0
  6048  002706  0012               	return		;funcret
  6049  002708                     __end_of_I2C_DO_IDLE:
  6050                           	callstack 0
  6051                           
  6052 ;; *************** function _I2C_DO_TX_EMPTY *****************
  6053 ;; Defined at:
  6054 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;		None
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;		None
  6059 ;; Return value:  Size  Location     Type
  6060 ;;                  1    wreg      enum E3101
  6061 ;; Registers used:
  6062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/0
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6070 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6071 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6072 ;;Total ram usage:        2 bytes
  6073 ;; Hardware stack levels used:    1
  6074 ;; Hardware stack levels required when called:    7
  6075 ;; This function calls:
  6076 ;;		Absolute function
  6077 ;;		_I2C_CallbackReturnReset
  6078 ;;		_I2C_CallbackReturnStop
  6079 ;;		_I2C_DO_SEND_RESTART
  6080 ;;		_I2C_DO_SEND_STOP
  6081 ;;		_I2C_MasterSetIrq
  6082 ;;		_rd1RegCompleteHandler
  6083 ;;		_rd2RegCompleteHandler
  6084 ;;		_rdBlkRegCompleteHandler
  6085 ;;		_wr1RegCompleteHandler
  6086 ;;		_wr2RegCompleteHandler
  6087 ;; This function is called by:
  6088 ;;		_I2C_MasterFsm
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092                           	psect	text56
  6093  001D8C                     __ptext56:
  6094                           	callstack 0
  6095  001D8C                     _I2C_DO_TX_EMPTY:
  6096                           	callstack 17
  6097  001D8C                     
  6098                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
  6099  001D8C  0100               	movlb	0	; () banked
  6100  001D8E  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  6101                           
  6102                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  6103  001D90  EFD7  F00E         	goto	l3021
  6104  001D94                     l3005:
  6105                           
  6106                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
  6107  001D94  ECBB  F013         	call	_I2C_DO_SEND_RESTART	;wreg free
  6108  001D98  EF03  F00F         	goto	l312
  6109  001D9C                     l3009:
  6110                           
  6111                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
  6112  001D9C  ECD9  F013         	call	_I2C_MasterSetIrq	;wreg free
  6113  001DA0                     
  6114                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
  6115  001DA0  0E03               	movlw	3
  6116  001DA2  EF03  F00F         	goto	l312
  6117  001DA6                     l3015:
  6118                           
  6119                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
  6120  001DA6  ECB7  F013         	call	_I2C_DO_SEND_STOP	;wreg free
  6121  001DAA  EF03  F00F         	goto	l312
  6122  001DAE                     l3021:
  6123                           
  6124                           ; BSR set to: 0
  6125  001DAE  C06C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  6126  001DB2  C06D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  6127  001DB6  D802               	call	u1288
  6128  001DB8  EFE7  F00E         	goto	u1289
  6129  001DBC                     u1288:
  6130  001DBC  0005               	push	
  6131  001DBE  6EFA               	movwf	pclath,c
  6132  001DC0  5160               	movf	_I2C_Status& (0+255),w,b
  6133  001DC2  6EFD               	movwf	tosl,c
  6134  001DC4  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  6135  001DC6  6EFE               	movwf	tosh,c
  6136  001DC8  6AFF               	clrf	tosu,c
  6137  001DCA  50FA               	movf	pclath,w,c
  6138  001DCC  0012               	return		;indir
  6139  001DCE                     u1289:
  6140  001DCE  6E10               	movwf	??_I2C_DO_TX_EMPTY^0,c
  6141  001DD0  6A11               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
  6142                           
  6143                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6144                           ; Switch size 1, requested type "simple"
  6145                           ; Number of cases is 1, Range of values is 0 to 0
  6146                           ; switch strategies available:
  6147                           ; Name         Instructions Cycles
  6148                           ; simple_byte            4     3 (average)
  6149                           ;	Chosen strategy is simple_byte
  6150  001DD2  5011               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
  6151  001DD4  0A00               	xorlw	0	; case 0
  6152  001DD6  B4D8               	btfsc	status,2,c
  6153  001DD8  EFF0  F00E         	goto	l4501
  6154  001DDC  EFD3  F00E         	goto	l3015
  6155  001DE0                     l4501:
  6156                           
  6157                           ; Switch size 1, requested type "simple"
  6158                           ; Number of cases is 4, Range of values is 1 to 4
  6159                           ; switch strategies available:
  6160                           ; Name         Instructions Cycles
  6161                           ; simple_byte           13     7 (average)
  6162                           ;	Chosen strategy is simple_byte
  6163  001DE0  5010               	movf	??_I2C_DO_TX_EMPTY^0,w,c
  6164  001DE2  0A01               	xorlw	1	; case 1
  6165  001DE4  B4D8               	btfsc	status,2,c
  6166  001DE6  EFD3  F00E         	goto	l3015
  6167  001DEA  0A03               	xorlw	3	; case 2
  6168  001DEC  B4D8               	btfsc	status,2,c
  6169  001DEE  EFCA  F00E         	goto	l3005
  6170  001DF2  0A01               	xorlw	1	; case 3
  6171  001DF4  B4D8               	btfsc	status,2,c
  6172  001DF6  EFCA  F00E         	goto	l3005
  6173  001DFA  0A07               	xorlw	7	; case 4
  6174  001DFC  B4D8               	btfsc	status,2,c
  6175  001DFE  EFCE  F00E         	goto	l3009
  6176  001E02  EFD3  F00E         	goto	l3015
  6177  001E06                     l312:
  6178  001E06  0012               	return		;funcret
  6179  001E08                     __end_of_I2C_DO_TX_EMPTY:
  6180                           	callstack 0
  6181                           
  6182 ;; *************** function _I2C_MasterSetIrq *****************
  6183 ;; Defined at:
  6184 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;		None
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;		None
  6189 ;; Return value:  Size  Location     Type
  6190 ;;                  1    wreg      void 
  6191 ;; Registers used:
  6192 ;;		None
  6193 ;; Tracked objects:
  6194 ;;		On entry : 0/0
  6195 ;;		On exit  : 0/0
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6202 ;;Total ram usage:        0 bytes
  6203 ;; Hardware stack levels used:    1
  6204 ;; Hardware stack levels required when called:    4
  6205 ;; This function calls:
  6206 ;;		Nothing
  6207 ;; This function is called by:
  6208 ;;		_I2C_DO_TX_EMPTY
  6209 ;; This function uses a non-reentrant model
  6210 ;;
  6211                           
  6212                           	psect	text57
  6213  0027B2                     __ptext57:
  6214                           	callstack 0
  6215  0027B2                     _I2C_MasterSetIrq:
  6216                           	callstack 19
  6217  0027B2                     
  6218                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
  6219  0027B2  869E               	bsf	158,3,c	;volatile
  6220  0027B4  0012               	return		;funcret
  6221  0027B6                     __end_of_I2C_MasterSetIrq:
  6222                           	callstack 0
  6223                           
  6224 ;; *************** function _I2C_MasterIsNack *****************
  6225 ;; Defined at:
  6226 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;		None
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;		None
  6231 ;; Return value:  Size  Location     Type
  6232 ;;                  1    wreg      _Bool 
  6233 ;; Registers used:
  6234 ;;		wreg
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6244 ;;Total ram usage:        0 bytes
  6245 ;; Hardware stack levels used:    1
  6246 ;; Hardware stack levels required when called:    4
  6247 ;; This function calls:
  6248 ;;		Nothing
  6249 ;; This function is called by:
  6250 ;;		_I2C_MasterFsm
  6251 ;;		_I2C_DO_TX
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           	psect	text58
  6256  0026A0                     __ptext58:
  6257                           	callstack 0
  6258  0026A0                     _I2C_MasterIsNack:
  6259                           	callstack 20
  6260  0026A0                     
  6261                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
  6262  0026A0  BCC5               	btfsc	197,6,c	;volatile
  6263  0026A2  EF55  F013         	goto	u1221
  6264  0026A6  EF58  F013         	goto	u1220
  6265  0026AA                     u1221:
  6266  0026AA  0E01               	movlw	1
  6267  0026AC  EF59  F013         	goto	u1226
  6268  0026B0                     u1220:
  6269  0026B0  0E00               	movlw	0
  6270  0026B2                     u1226:
  6271  0026B2  0012               	return		;funcret
  6272  0026B4                     __end_of_I2C_MasterIsNack:
  6273                           	callstack 0
  6274                           
  6275 ;; *************** function _I2C_MasterSendTxData *****************
  6276 ;; Defined at:
  6277 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
  6278 ;; Parameters:    Size  Location     Type
  6279 ;;  data            1    wreg     unsigned char 
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;  data            1    4[COMRAM] unsigned char 
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  1    wreg      void 
  6284 ;; Registers used:
  6285 ;;		wreg
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6294 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6295 ;;Total ram usage:        1 bytes
  6296 ;; Hardware stack levels used:    1
  6297 ;; Hardware stack levels required when called:    4
  6298 ;; This function calls:
  6299 ;;		Nothing
  6300 ;; This function is called by:
  6301 ;;		_I2C_DO_SEND_ADR_READ
  6302 ;;		_I2C_DO_SEND_ADR_WRITE
  6303 ;;		_I2C_DO_TX
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307                           	psect	text59
  6308  00278E                     __ptext59:
  6309                           	callstack 0
  6310  00278E                     _I2C_MasterSendTxData:
  6311                           	callstack 19
  6312                           
  6313                           ;incstack = 0
  6314                           ;I2C_MasterSendTxData@data stored from wreg
  6315  00278E  6E05               	movwf	I2C_MasterSendTxData@data^0,c
  6316  002790                     
  6317                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
  6318  002790  C005  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
  6319  002794  0012               	return		;funcret
  6320  002796                     __end_of_I2C_MasterSendTxData:
  6321                           	callstack 0
  6322                           
  6323 ;; *************** function _I2C_MasterSendAck *****************
  6324 ;; Defined at:
  6325 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;		None
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;		None
  6330 ;; Return value:  Size  Location     Type
  6331 ;;                  1    wreg      void 
  6332 ;; Registers used:
  6333 ;;		None
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;Total ram usage:        0 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; Hardware stack levels required when called:    4
  6346 ;; This function calls:
  6347 ;;		Nothing
  6348 ;; This function is called by:
  6349 ;;		_I2C_DO_RX
  6350 ;;		_I2C_DO_RX_ACK
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           	psect	text60
  6355  002796                     __ptext60:
  6356                           	callstack 0
  6357  002796                     _I2C_MasterSendAck:
  6358                           	callstack 19
  6359  002796                     
  6360                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
  6361  002796  9AC5               	bcf	197,5,c	;volatile
  6362                           
  6363                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
  6364  002798  88C5               	bsf	197,4,c	;volatile
  6365  00279A  0012               	return		;funcret
  6366  00279C                     __end_of_I2C_MasterSendAck:
  6367                           	callstack 0
  6368                           
  6369 ;; *************** function _I2C_MasterGetRxData *****************
  6370 ;; Defined at:
  6371 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;		None
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;		None
  6376 ;; Return value:  Size  Location     Type
  6377 ;;                  1    wreg      unsigned char 
  6378 ;; Registers used:
  6379 ;;		wreg, status,2
  6380 ;; Tracked objects:
  6381 ;;		On entry : 0/0
  6382 ;;		On exit  : 0/0
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6389 ;;Total ram usage:        0 bytes
  6390 ;; Hardware stack levels used:    1
  6391 ;; Hardware stack levels required when called:    4
  6392 ;; This function calls:
  6393 ;;		Nothing
  6394 ;; This function is called by:
  6395 ;;		_I2C_DO_RX
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           	psect	text61
  6400  0027B6                     __ptext61:
  6401                           	callstack 0
  6402  0027B6                     _I2C_MasterGetRxData:
  6403                           	callstack 19
  6404  0027B6                     
  6405                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
  6406  0027B6  50C9               	movf	201,w,c	;volatile
  6407  0027B8  0012               	return		;funcret
  6408  0027BA                     __end_of_I2C_MasterGetRxData:
  6409                           	callstack 0
  6410                           
  6411 ;; *************** function _I2C_MasterSendNack *****************
  6412 ;; Defined at:
  6413 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;		None
  6416 ;; Auto vars:     Size  Location     Type
  6417 ;;		None
  6418 ;; Return value:  Size  Location     Type
  6419 ;;                  1    wreg      void 
  6420 ;; Registers used:
  6421 ;;		None
  6422 ;; Tracked objects:
  6423 ;;		On entry : 0/0
  6424 ;;		On exit  : 0/0
  6425 ;;		Unchanged: 0/0
  6426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6431 ;;Total ram usage:        0 bytes
  6432 ;; Hardware stack levels used:    1
  6433 ;; Hardware stack levels required when called:    4
  6434 ;; This function calls:
  6435 ;;		Nothing
  6436 ;; This function is called by:
  6437 ;;		_I2C_DO_RX_NACK_STOP
  6438 ;;		_I2C_DO_RX_NACK_RESTART
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           	psect	text62
  6443  00279C                     __ptext62:
  6444                           	callstack 0
  6445  00279C                     _I2C_MasterSendNack:
  6446                           	callstack 19
  6447  00279C                     
  6448                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
  6449  00279C  8AC5               	bsf	197,5,c	;volatile
  6450                           
  6451                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
  6452  00279E  88C5               	bsf	197,4,c	;volatile
  6453  0027A0  0012               	return		;funcret
  6454  0027A2                     __end_of_I2C_MasterSendNack:
  6455                           	callstack 0
  6456                           
  6457 ;; *************** function _I2C_MasterStartRx *****************
  6458 ;; Defined at:
  6459 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;		None
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;		None
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  1    wreg      void 
  6466 ;; Registers used:
  6467 ;;		None
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6477 ;;Total ram usage:        0 bytes
  6478 ;; Hardware stack levels used:    1
  6479 ;; Hardware stack levels required when called:    4
  6480 ;; This function calls:
  6481 ;;		Nothing
  6482 ;; This function is called by:
  6483 ;;		_I2C_DO_RCEN
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           	psect	text63
  6488  0027BA                     __ptext63:
  6489                           	callstack 0
  6490  0027BA                     _I2C_MasterStartRx:
  6491                           	callstack 19
  6492  0027BA                     
  6493                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
  6494  0027BA  86C5               	bsf	197,3,c	;volatile
  6495  0027BC  0012               	return		;funcret
  6496  0027BE                     __end_of_I2C_MasterStartRx:
  6497                           	callstack 0
  6498                           
  6499 ;; *************** function _I2C_CallbackReturnReset *****************
  6500 ;; Defined at:
  6501 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;  funPtr          2   13[COMRAM] PTR void 
  6504 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6505 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;		None
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  1    wreg      enum E358
  6510 ;; Registers used:
  6511 ;;		wreg
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6520 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6521 ;;Total ram usage:        2 bytes
  6522 ;; Hardware stack levels used:    1
  6523 ;; Hardware stack levels required when called:    4
  6524 ;; This function calls:
  6525 ;;		Nothing
  6526 ;; This function is called by:
  6527 ;;		_I2C_Open
  6528 ;;		_I2C_DO_TX
  6529 ;;		_I2C_DO_RX
  6530 ;;		_I2C_DO_TX_EMPTY
  6531 ;;		_I2C_DO_ADDRESS_NACK
  6532 ;;		_I2C_DO_RX_EMPTY
  6533 ;; This function uses a non-reentrant model
  6534 ;;
  6535                           
  6536                           	psect	text64
  6537  0027BE                     __ptext64:
  6538                           	callstack 0
  6539  0027BE                     _I2C_CallbackReturnReset:
  6540                           	callstack 19
  6541  0027BE                     
  6542                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
  6543  0027BE  0E05               	movlw	5
  6544  0027C0  0012               	return		;funcret
  6545  0027C2                     __end_of_I2C_CallbackReturnReset:
  6546                           	callstack 0
  6547                           
  6548 ;; *************** function _I2C_CallbackReturnStop *****************
  6549 ;; Defined at:
  6550 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
  6551 ;; Parameters:    Size  Location     Type
  6552 ;;  funPtr          2   13[COMRAM] PTR void 
  6553 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6554 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;		None
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  1    wreg      enum E358
  6559 ;; Registers used:
  6560 ;;		wreg
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6566 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6569 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6570 ;;Total ram usage:        2 bytes
  6571 ;; Hardware stack levels used:    1
  6572 ;; Hardware stack levels required when called:    4
  6573 ;; This function calls:
  6574 ;;		Nothing
  6575 ;; This function is called by:
  6576 ;;		_I2C_Open
  6577 ;;		_I2C_SetCallback
  6578 ;;		_I2C_DO_TX
  6579 ;;		_I2C_DO_RX
  6580 ;;		_I2C_DO_TX_EMPTY
  6581 ;;		_I2C_DO_ADDRESS_NACK
  6582 ;;		_I2C_DO_RX_EMPTY
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           	psect	text65
  6587  0027C2                     __ptext65:
  6588                           	callstack 0
  6589  0027C2                     _I2C_CallbackReturnStop:
  6590                           	callstack 19
  6591  0027C2                     
  6592                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
  6593  0027C2  0E01               	movlw	1
  6594  0027C4  0012               	return		;funcret
  6595  0027C6                     __end_of_I2C_CallbackReturnStop:
  6596                           	callstack 0
  6597                           
  6598 ;; *************** function _rdBlkRegCompleteHandler *****************
  6599 ;; Defined at:
  6600 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;  ptr             2   13[COMRAM] PTR void 
  6603 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6604 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6605 ;; Auto vars:     Size  Location     Type
  6606 ;;		None
  6607 ;; Return value:  Size  Location     Type
  6608 ;;                  1    wreg      enum E358
  6609 ;; Registers used:
  6610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6611 ;; Tracked objects:
  6612 ;;		On entry : 0/0
  6613 ;;		On exit  : 0/0
  6614 ;;		Unchanged: 0/0
  6615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6620 ;;Total ram usage:        2 bytes
  6621 ;; Hardware stack levels used:    1
  6622 ;; Hardware stack levels required when called:    6
  6623 ;; This function calls:
  6624 ;;		_I2C_SetBuffer
  6625 ;;		_I2C_SetDataCompleteCallback
  6626 ;; This function is called by:
  6627 ;;		_I2C_ReadDataBlock
  6628 ;;		_I2C_DO_TX
  6629 ;;		_I2C_DO_RX
  6630 ;;		_I2C_DO_TX_EMPTY
  6631 ;;		_I2C_DO_ADDRESS_NACK
  6632 ;;		_I2C_DO_RX_EMPTY
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635                           
  6636                           	psect	text66
  6637  0022E2                     __ptext66:
  6638                           	callstack 0
  6639  0022E2                     _rdBlkRegCompleteHandler:
  6640                           	callstack 17
  6641  0022E2                     
  6642                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  6643  0022E2  EE20 F002          	lfsr	2,2
  6644  0022E6  500E               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
  6645  0022E8  26D9               	addwf	fsr2l,f,c
  6646  0022EA  500F               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
  6647  0022EC  22DA               	addwfc	fsr2h,f,c
  6648  0022EE  CFDE F005          	movff	postinc2,I2C_SetBuffer@buffer
  6649  0022F2  CFDD F006          	movff	postdec2,I2C_SetBuffer@buffer+1
  6650  0022F6  C00E  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
  6651  0022FA  C00F  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
  6652  0022FE  CFDE F007          	movff	postinc2,I2C_SetBuffer@bufferSize
  6653  002302  CFDD F008          	movff	postdec2,I2C_SetBuffer@bufferSize+1
  6654  002306  ECE2  F012         	call	_I2C_SetBuffer	;wreg free
  6655  00230A                     
  6656                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6657  00230A  0E00               	movlw	0
  6658  00230C  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6659  00230E  0E00               	movlw	0
  6660  002310  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6661  002312  0E00               	movlw	0
  6662  002314  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6663  002316  0E00               	movlw	0
  6664  002318  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6665  00231A  EC2F  F013         	call	_I2C_SetDataCompleteCallback	;wreg free
  6666  00231E                     
  6667                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  6668  00231E  0E02               	movlw	2
  6669  002320  0012               	return		;funcret
  6670  002322                     __end_of_rdBlkRegCompleteHandler:
  6671                           	callstack 0
  6672                           
  6673 ;; *************** function _wr1RegCompleteHandler *****************
  6674 ;; Defined at:
  6675 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  6676 ;; Parameters:    Size  Location     Type
  6677 ;;  ptr             2   13[COMRAM] PTR void 
  6678 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6679 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6680 ;; Auto vars:     Size  Location     Type
  6681 ;;		None
  6682 ;; Return value:  Size  Location     Type
  6683 ;;                  1    wreg      enum E358
  6684 ;; Registers used:
  6685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6686 ;; Tracked objects:
  6687 ;;		On entry : 0/0
  6688 ;;		On exit  : 0/0
  6689 ;;		Unchanged: 0/0
  6690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6691 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6694 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6695 ;;Total ram usage:        2 bytes
  6696 ;; Hardware stack levels used:    1
  6697 ;; Hardware stack levels required when called:    6
  6698 ;; This function calls:
  6699 ;;		_I2C_SetBuffer
  6700 ;;		_I2C_SetDataCompleteCallback
  6701 ;; This function is called by:
  6702 ;;		_I2C_Write1ByteRegister
  6703 ;;		_I2C_DO_TX
  6704 ;;		_I2C_DO_RX
  6705 ;;		_I2C_DO_TX_EMPTY
  6706 ;;		_I2C_DO_ADDRESS_NACK
  6707 ;;		_I2C_DO_RX_EMPTY
  6708 ;; This function uses a non-reentrant model
  6709 ;;
  6710                           
  6711                           	psect	text67
  6712  00246C                     __ptext67:
  6713                           	callstack 0
  6714  00246C                     _wr1RegCompleteHandler:
  6715                           	callstack 17
  6716  00246C                     
  6717                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  6718  00246C  C00E  F005         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6719  002470  C00F  F006         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6720  002474  0E00               	movlw	0
  6721  002476  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6722  002478  0E01               	movlw	1
  6723  00247A  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  6724  00247C  ECE2  F012         	call	_I2C_SetBuffer	;wreg free
  6725  002480                     
  6726                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6727  002480  0E00               	movlw	0
  6728  002482  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6729  002484  0E00               	movlw	0
  6730  002486  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6731  002488  0E00               	movlw	0
  6732  00248A  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6733  00248C  0E00               	movlw	0
  6734  00248E  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6735  002490  EC2F  F013         	call	_I2C_SetDataCompleteCallback	;wreg free
  6736  002494                     
  6737                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  6738  002494  0E04               	movlw	4
  6739  002496  0012               	return		;funcret
  6740  002498                     __end_of_wr1RegCompleteHandler:
  6741                           	callstack 0
  6742                           
  6743 ;; *************** function _rd2RegCompleteHandler *****************
  6744 ;; Defined at:
  6745 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;  ptr             2   13[COMRAM] PTR void 
  6748 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6749 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;		None
  6752 ;; Return value:  Size  Location     Type
  6753 ;;                  1    wreg      enum E358
  6754 ;; Registers used:
  6755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6756 ;; Tracked objects:
  6757 ;;		On entry : 0/0
  6758 ;;		On exit  : 0/0
  6759 ;;		Unchanged: 0/0
  6760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6764 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6765 ;;Total ram usage:        2 bytes
  6766 ;; Hardware stack levels used:    1
  6767 ;; Hardware stack levels required when called:    6
  6768 ;; This function calls:
  6769 ;;		_I2C_SetBuffer
  6770 ;;		_I2C_SetDataCompleteCallback
  6771 ;; This function is called by:
  6772 ;;		_I2C_Read2ByteRegister
  6773 ;;		_I2C_DO_TX
  6774 ;;		_I2C_DO_RX
  6775 ;;		_I2C_DO_TX_EMPTY
  6776 ;;		_I2C_DO_ADDRESS_NACK
  6777 ;;		_I2C_DO_RX_EMPTY
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           	psect	text68
  6782  002498                     __ptext68:
  6783                           	callstack 0
  6784  002498                     _rd2RegCompleteHandler:
  6785                           	callstack 17
  6786  002498                     
  6787                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  6788  002498  C00E  F005         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6789  00249C  C00F  F006         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6790  0024A0  0E00               	movlw	0
  6791  0024A2  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6792  0024A4  0E02               	movlw	2
  6793  0024A6  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  6794  0024A8  ECE2  F012         	call	_I2C_SetBuffer	;wreg free
  6795  0024AC                     
  6796                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6797  0024AC  0E00               	movlw	0
  6798  0024AE  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6799  0024B0  0E00               	movlw	0
  6800  0024B2  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6801  0024B4  0E00               	movlw	0
  6802  0024B6  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6803  0024B8  0E00               	movlw	0
  6804  0024BA  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6805  0024BC  EC2F  F013         	call	_I2C_SetDataCompleteCallback	;wreg free
  6806  0024C0                     
  6807                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  6808  0024C0  0E02               	movlw	2
  6809  0024C2  0012               	return		;funcret
  6810  0024C4                     __end_of_rd2RegCompleteHandler:
  6811                           	callstack 0
  6812                           
  6813 ;; *************** function _rd1RegCompleteHandler *****************
  6814 ;; Defined at:
  6815 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;  ptr             2   13[COMRAM] PTR void 
  6818 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6819 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;		None
  6822 ;; Return value:  Size  Location     Type
  6823 ;;                  1    wreg      enum E358
  6824 ;; Registers used:
  6825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6826 ;; Tracked objects:
  6827 ;;		On entry : 0/0
  6828 ;;		On exit  : 0/0
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6835 ;;Total ram usage:        2 bytes
  6836 ;; Hardware stack levels used:    1
  6837 ;; Hardware stack levels required when called:    6
  6838 ;; This function calls:
  6839 ;;		_I2C_SetBuffer
  6840 ;;		_I2C_SetDataCompleteCallback
  6841 ;; This function is called by:
  6842 ;;		_I2C_Read1ByteRegister
  6843 ;;		_I2C_DO_TX
  6844 ;;		_I2C_DO_RX
  6845 ;;		_I2C_DO_TX_EMPTY
  6846 ;;		_I2C_DO_ADDRESS_NACK
  6847 ;;		_I2C_DO_RX_EMPTY
  6848 ;; This function uses a non-reentrant model
  6849 ;;
  6850                           
  6851                           	psect	text69
  6852  0024C4                     __ptext69:
  6853                           	callstack 0
  6854  0024C4                     _rd1RegCompleteHandler:
  6855                           	callstack 17
  6856  0024C4                     
  6857                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  6858  0024C4  C00E  F005         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6859  0024C8  C00F  F006         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6860  0024CC  0E00               	movlw	0
  6861  0024CE  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6862  0024D0  0E01               	movlw	1
  6863  0024D2  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  6864  0024D4  ECE2  F012         	call	_I2C_SetBuffer	;wreg free
  6865  0024D8                     
  6866                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6867  0024D8  0E00               	movlw	0
  6868  0024DA  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6869  0024DC  0E00               	movlw	0
  6870  0024DE  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6871  0024E0  0E00               	movlw	0
  6872  0024E2  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6873  0024E4  0E00               	movlw	0
  6874  0024E6  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6875  0024E8  EC2F  F013         	call	_I2C_SetDataCompleteCallback	;wreg free
  6876  0024EC                     
  6877                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  6878  0024EC  0E02               	movlw	2
  6879  0024EE  0012               	return		;funcret
  6880  0024F0                     __end_of_rd1RegCompleteHandler:
  6881                           	callstack 0
  6882                           
  6883 ;; *************** function _wr2RegCompleteHandler *****************
  6884 ;; Defined at:
  6885 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;  ptr             2   13[COMRAM] PTR void 
  6888 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6889 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6890 ;; Auto vars:     Size  Location     Type
  6891 ;;		None
  6892 ;; Return value:  Size  Location     Type
  6893 ;;                  1    wreg      enum E358
  6894 ;; Registers used:
  6895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6896 ;; Tracked objects:
  6897 ;;		On entry : 0/0
  6898 ;;		On exit  : 0/0
  6899 ;;		Unchanged: 0/0
  6900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6901 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6904 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6905 ;;Total ram usage:        2 bytes
  6906 ;; Hardware stack levels used:    1
  6907 ;; Hardware stack levels required when called:    6
  6908 ;; This function calls:
  6909 ;;		_I2C_SetBuffer
  6910 ;;		_I2C_SetDataCompleteCallback
  6911 ;; This function is called by:
  6912 ;;		_I2C_Write2ByteRegister
  6913 ;;		_I2C_DO_TX
  6914 ;;		_I2C_DO_RX
  6915 ;;		_I2C_DO_TX_EMPTY
  6916 ;;		_I2C_DO_ADDRESS_NACK
  6917 ;;		_I2C_DO_RX_EMPTY
  6918 ;; This function uses a non-reentrant model
  6919 ;;
  6920                           
  6921                           	psect	text70
  6922  0024F0                     __ptext70:
  6923                           	callstack 0
  6924  0024F0                     _wr2RegCompleteHandler:
  6925                           	callstack 17
  6926  0024F0                     
  6927                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  6928  0024F0  C00E  F005         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6929  0024F4  C00F  F006         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6930  0024F8  0E00               	movlw	0
  6931  0024FA  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6932  0024FC  0E02               	movlw	2
  6933  0024FE  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  6934  002500  ECE2  F012         	call	_I2C_SetBuffer	;wreg free
  6935  002504                     
  6936                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6937  002504  0E00               	movlw	0
  6938  002506  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6939  002508  0E00               	movlw	0
  6940  00250A  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6941  00250C  0E00               	movlw	0
  6942  00250E  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6943  002510  0E00               	movlw	0
  6944  002512  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6945  002514  EC2F  F013         	call	_I2C_SetDataCompleteCallback	;wreg free
  6946  002518                     
  6947                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  6948  002518  0E04               	movlw	4
  6949  00251A  0012               	return		;funcret
  6950  00251C                     __end_of_wr2RegCompleteHandler:
  6951                           	callstack 0
  6952                           
  6953 ;; *************** function _I2C_SetDataCompleteCallback *****************
  6954 ;; Defined at:
  6955 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
  6958 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  6959 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6960 ;;  ptr             2   11[COMRAM] PTR void 
  6961 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6962 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6963 ;; Auto vars:     Size  Location     Type
  6964 ;;		None
  6965 ;; Return value:  Size  Location     Type
  6966 ;;                  1    wreg      void 
  6967 ;; Registers used:
  6968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6969 ;; Tracked objects:
  6970 ;;		On entry : 0/0
  6971 ;;		On exit  : 0/0
  6972 ;;		Unchanged: 0/0
  6973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6974 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6977 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6978 ;;Total ram usage:        4 bytes
  6979 ;; Hardware stack levels used:    1
  6980 ;; Hardware stack levels required when called:    5
  6981 ;; This function calls:
  6982 ;;		_I2C_SetCallback
  6983 ;; This function is called by:
  6984 ;;		_I2C_Read1ByteRegister
  6985 ;;		_rd1RegCompleteHandler
  6986 ;;		_rd2RegCompleteHandler
  6987 ;;		_wr1RegCompleteHandler
  6988 ;;		_wr2RegCompleteHandler
  6989 ;;		_rdBlkRegCompleteHandler
  6990 ;;		_I2C_Read2ByteRegister
  6991 ;;		_I2C_Write1ByteRegister
  6992 ;;		_I2C_Write2ByteRegister
  6993 ;;		_I2C_ReadDataBlock
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text71
  6998  00265E                     __ptext71:
  6999                           	callstack 0
  7000  00265E                     _I2C_SetDataCompleteCallback:
  7001                           	callstack 23
  7002  00265E                     
  7003                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  7004  00265E  C00A  F005         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
  7005  002662  C00B  F006         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
  7006  002666  C00C  F007         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
  7007  00266A  C00D  F008         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
  7008  00266E  0E00               	movlw	0
  7009  002670  EC04  F00F         	call	_I2C_SetCallback
  7010  002674  0012               	return		;funcret
  7011  002676                     __end_of_I2C_SetDataCompleteCallback:
  7012                           	callstack 0
  7013                           
  7014 ;; *************** function _I2C_SetCallback *****************
  7015 ;; Defined at:
  7016 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;  idx             1    wreg     enum E3119
  7019 ;;  cb              2    4[COMRAM] PTR FTN(PTR void ,)enum 
  7020 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7021 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7022 ;;  ptr             2    6[COMRAM] PTR void 
  7023 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7024 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7025 ;; Auto vars:     Size  Location     Type
  7026 ;;  idx             1    8[COMRAM] enum E3119
  7027 ;; Return value:  Size  Location     Type
  7028 ;;                  1    wreg      void 
  7029 ;; Registers used:
  7030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7031 ;; Tracked objects:
  7032 ;;		On entry : 0/0
  7033 ;;		On exit  : 0/0
  7034 ;;		Unchanged: 0/0
  7035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7036 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7039 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7040 ;;Total ram usage:        5 bytes
  7041 ;; Hardware stack levels used:    1
  7042 ;; Hardware stack levels required when called:    4
  7043 ;; This function calls:
  7044 ;;		Nothing
  7045 ;; This function is called by:
  7046 ;;		_I2C_SetDataCompleteCallback
  7047 ;;		_I2C_SetAddressNackCallback
  7048 ;;		_I2C_SetWriteCollisionCallback
  7049 ;;		_I2C_SetDataNackCallback
  7050 ;;		_I2C_SetTimeoutCallback
  7051 ;; This function uses a non-reentrant model
  7052 ;;
  7053                           
  7054                           	psect	text72
  7055  001E08                     __ptext72:
  7056                           	callstack 0
  7057  001E08                     _I2C_SetCallback:
  7058                           	callstack 23
  7059                           
  7060                           ;incstack = 0
  7061                           ;I2C_SetCallback@idx stored from wreg
  7062  001E08  6E09               	movwf	I2C_SetCallback@idx^0,c
  7063  001E0A                     
  7064                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
  7065  001E0A  5005               	movf	I2C_SetCallback@cb^0,w,c
  7066  001E0C  1006               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
  7067  001E0E  B4D8               	btfsc	status,2,c
  7068  001E10  EF0C  F00F         	goto	u1171
  7069  001E14  EF0E  F00F         	goto	u1170
  7070  001E18                     u1171:
  7071  001E18  EF28  F00F         	goto	l2767
  7072  001E1C                     u1170:
  7073  001E1C                     
  7074                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
  7075  001E1C  5009               	movf	I2C_SetCallback@idx^0,w,c
  7076  001E1E  0D02               	mullw	2
  7077  001E20  0E60               	movlw	low _I2C_Status
  7078  001E22  24F3               	addwf	243,w,c
  7079  001E24  6ED9               	movwf	fsr2l,c
  7080  001E26  0E00               	movlw	high _I2C_Status
  7081  001E28  20F4               	addwfc	prodh,w,c
  7082  001E2A  6EDA               	movwf	fsr2h,c
  7083  001E2C  C005  FFDE         	movff	I2C_SetCallback@cb,postinc2
  7084  001E30  C006  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
  7085                           
  7086                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
  7087  001E34  5009               	movf	I2C_SetCallback@idx^0,w,c
  7088  001E36  0D02               	mullw	2
  7089  001E38  0E6C               	movlw	low (_I2C_Status+12)
  7090  001E3A  24F3               	addwf	243,w,c
  7091  001E3C  6ED9               	movwf	fsr2l,c
  7092  001E3E  0E00               	movlw	high (_I2C_Status+12)
  7093  001E40  20F4               	addwfc	prodh,w,c
  7094  001E42  6EDA               	movwf	fsr2h,c
  7095  001E44  C007  FFDE         	movff	I2C_SetCallback@ptr,postinc2
  7096  001E48  C008  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
  7097                           
  7098                           ;mcc_generated_files/i2c_master.c: 304:     }
  7099  001E4C  EF40  F00F         	goto	l256
  7100  001E50                     l2767:
  7101                           
  7102                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  7103  001E50  5009               	movf	I2C_SetCallback@idx^0,w,c
  7104  001E52  0D02               	mullw	2
  7105  001E54  0E60               	movlw	low _I2C_Status
  7106  001E56  24F3               	addwf	243,w,c
  7107  001E58  6ED9               	movwf	fsr2l,c
  7108  001E5A  0E00               	movlw	high _I2C_Status
  7109  001E5C  20F4               	addwfc	prodh,w,c
  7110  001E5E  6EDA               	movwf	fsr2h,c
  7111  001E60  0EC2               	movlw	low _I2C_CallbackReturnStop
  7112  001E62  6EDE               	movwf	postinc2,c
  7113  001E64  0E27               	movlw	high _I2C_CallbackReturnStop
  7114  001E66  6EDD               	movwf	postdec2,c
  7115                           
  7116                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  7117  001E68  5009               	movf	I2C_SetCallback@idx^0,w,c
  7118  001E6A  0D02               	mullw	2
  7119  001E6C  0E6C               	movlw	low (_I2C_Status+12)
  7120  001E6E  24F3               	addwf	243,w,c
  7121  001E70  6ED9               	movwf	fsr2l,c
  7122  001E72  0E00               	movlw	high (_I2C_Status+12)
  7123  001E74  20F4               	addwfc	prodh,w,c
  7124  001E76  6EDA               	movwf	fsr2h,c
  7125  001E78  0E00               	movlw	0
  7126  001E7A  6EDE               	movwf	postinc2,c
  7127  001E7C  0E00               	movlw	0
  7128  001E7E  6EDD               	movwf	postdec2,c
  7129  001E80                     l256:
  7130  001E80  0012               	return		;funcret
  7131  001E82                     __end_of_I2C_SetCallback:
  7132                           	callstack 0
  7133                           
  7134 ;; *************** function _I2C_SetBuffer *****************
  7135 ;; Defined at:
  7136 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;  buffer          2    4[COMRAM] PTR void 
  7139 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  7140 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  7141 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  7142 ;;  bufferSize      2    6[COMRAM] unsigned int 
  7143 ;; Auto vars:     Size  Location     Type
  7144 ;;		None
  7145 ;; Return value:  Size  Location     Type
  7146 ;;                  1    wreg      void 
  7147 ;; Registers used:
  7148 ;;		wreg, status,2, status,0
  7149 ;; Tracked objects:
  7150 ;;		On entry : 0/0
  7151 ;;		On exit  : 0/0
  7152 ;;		Unchanged: 0/0
  7153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7154 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7157 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7158 ;;Total ram usage:        4 bytes
  7159 ;; Hardware stack levels used:    1
  7160 ;; Hardware stack levels required when called:    4
  7161 ;; This function calls:
  7162 ;;		Nothing
  7163 ;; This function is called by:
  7164 ;;		_I2C_Read1ByteRegister
  7165 ;;		_rd1RegCompleteHandler
  7166 ;;		_rd2RegCompleteHandler
  7167 ;;		_wr1RegCompleteHandler
  7168 ;;		_wr2RegCompleteHandler
  7169 ;;		_rdBlkRegCompleteHandler
  7170 ;;		_I2C_Read2ByteRegister
  7171 ;;		_I2C_Write1ByteRegister
  7172 ;;		_I2C_Write2ByteRegister
  7173 ;;		_I2C_WriteNBytes
  7174 ;;		_I2C_ReadNBytes
  7175 ;;		_I2C_ReadDataBlock
  7176 ;; This function uses a non-reentrant model
  7177 ;;
  7178                           
  7179                           	psect	text73
  7180  0025C4                     __ptext73:
  7181                           	callstack 0
  7182  0025C4                     _I2C_SetBuffer:
  7183                           	callstack 24
  7184  0025C4                     
  7185                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
  7186  0025C4  0100               	movlb	0	; () banked
  7187  0025C6  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
  7188  0025C8  EFE8  F012         	goto	u1181
  7189  0025CC  EFEA  F012         	goto	u1180
  7190  0025D0                     u1181:
  7191  0025D0  EFF3  F012         	goto	l236
  7192  0025D4                     u1180:
  7193  0025D4                     
  7194                           ; BSR set to: 0
  7195                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
  7196  0025D4  C005  F07D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
  7197  0025D8  C006  F07E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
  7198  0025DC                     
  7199                           ; BSR set to: 0
  7200                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
  7201  0025DC  C007  F07F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
  7202  0025E0  C008  F080         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
  7203  0025E4                     
  7204                           ; BSR set to: 0
  7205                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
  7206  0025E4  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
  7207  0025E6                     l236:
  7208                           
  7209                           ; BSR set to: 0
  7210  0025E6  0012               	return		;funcret
  7211  0025E8                     __end_of_I2C_SetBuffer:
  7212                           	callstack 0
  7213                           
  7214 ;; *************** function _I2C_MasterStop *****************
  7215 ;; Defined at:
  7216 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
  7217 ;; Parameters:    Size  Location     Type
  7218 ;;		None
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;		None
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  1    wreg      void 
  7223 ;; Registers used:
  7224 ;;		None
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7234 ;;Total ram usage:        0 bytes
  7235 ;; Hardware stack levels used:    1
  7236 ;; Hardware stack levels required when called:    4
  7237 ;; This function calls:
  7238 ;;		Nothing
  7239 ;; This function is called by:
  7240 ;;		_I2C_DO_SEND_STOP
  7241 ;; This function uses a non-reentrant model
  7242 ;;
  7243                           
  7244                           	psect	text74
  7245  0027C6                     __ptext74:
  7246                           	callstack 0
  7247  0027C6                     _I2C_MasterStop:
  7248                           	callstack 18
  7249  0027C6                     
  7250                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
  7251  0027C6  84C5               	bsf	197,2,c	;volatile
  7252  0027C8  0012               	return		;funcret
  7253  0027CA                     __end_of_I2C_MasterStop:
  7254                           	callstack 0
  7255                           
  7256 ;; *************** function _I2C_MasterEnableRestart *****************
  7257 ;; Defined at:
  7258 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
  7259 ;; Parameters:    Size  Location     Type
  7260 ;;		None
  7261 ;; Auto vars:     Size  Location     Type
  7262 ;;		None
  7263 ;; Return value:  Size  Location     Type
  7264 ;;                  1    wreg      void 
  7265 ;; Registers used:
  7266 ;;		None
  7267 ;; Tracked objects:
  7268 ;;		On entry : 0/0
  7269 ;;		On exit  : 0/0
  7270 ;;		Unchanged: 0/0
  7271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7276 ;;Total ram usage:        0 bytes
  7277 ;; Hardware stack levels used:    1
  7278 ;; Hardware stack levels required when called:    4
  7279 ;; This function calls:
  7280 ;;		Nothing
  7281 ;; This function is called by:
  7282 ;;		_I2C_DO_SEND_RESTART_READ
  7283 ;;		_I2C_DO_SEND_RESTART_WRITE
  7284 ;;		_I2C_DO_SEND_RESTART
  7285 ;;		_I2C_DO_RX_EMPTY
  7286 ;; This function uses a non-reentrant model
  7287 ;;
  7288                           
  7289                           	psect	text75
  7290  0027CA                     __ptext75:
  7291                           	callstack 0
  7292  0027CA                     _I2C_MasterEnableRestart:
  7293                           	callstack 18
  7294  0027CA                     
  7295                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
  7296  0027CA  82C5               	bsf	197,1,c	;volatile
  7297  0027CC  0012               	return		;funcret
  7298  0027CE                     __end_of_I2C_MasterEnableRestart:
  7299                           	callstack 0
  7300                           
  7301 ;; *************** function _I2C_MasterStart *****************
  7302 ;; Defined at:
  7303 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
  7304 ;; Parameters:    Size  Location     Type
  7305 ;;		None
  7306 ;; Auto vars:     Size  Location     Type
  7307 ;;		None
  7308 ;; Return value:  Size  Location     Type
  7309 ;;                  1    wreg      void 
  7310 ;; Registers used:
  7311 ;;		None
  7312 ;; Tracked objects:
  7313 ;;		On entry : 0/0
  7314 ;;		On exit  : 0/0
  7315 ;;		Unchanged: 0/0
  7316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7321 ;;Total ram usage:        0 bytes
  7322 ;; Hardware stack levels used:    1
  7323 ;; Hardware stack levels required when called:    4
  7324 ;; This function calls:
  7325 ;;		Nothing
  7326 ;; This function is called by:
  7327 ;;		_I2C_MasterOperation
  7328 ;; This function uses a non-reentrant model
  7329 ;;
  7330                           
  7331                           	psect	text76
  7332  0027CE                     __ptext76:
  7333                           	callstack 0
  7334  0027CE                     _I2C_MasterStart:
  7335                           	callstack 22
  7336  0027CE                     
  7337                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
  7338  0027CE  80C5               	bsf	197,0,c	;volatile
  7339  0027D0  0012               	return		;funcret
  7340  0027D2                     __end_of_I2C_MasterStart:
  7341                           	callstack 0
  7342                           
  7343 ;; *************** function _I2C_Close *****************
  7344 ;; Defined at:
  7345 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;		None
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;  returnValue     1    4[COMRAM] enum E353
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  1    wreg      enum E353
  7352 ;; Registers used:
  7353 ;;		wreg, status,2, cstack
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7360 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7362 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7363 ;;Total ram usage:        1 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; Hardware stack levels required when called:    5
  7366 ;; This function calls:
  7367 ;;		_I2C_MasterClearIrq
  7368 ;;		_I2C_MasterClose
  7369 ;;		_I2C_MasterDisableIrq
  7370 ;; This function is called by:
  7371 ;;		_I2C_Read1ByteRegister
  7372 ;;		_I2C_Read2ByteRegister
  7373 ;;		_I2C_Write1ByteRegister
  7374 ;;		_I2C_Write2ByteRegister
  7375 ;;		_I2C_WriteNBytes
  7376 ;;		_I2C_ReadNBytes
  7377 ;;		_I2C_ReadDataBlock
  7378 ;; This function uses a non-reentrant model
  7379 ;;
  7380                           
  7381                           	psect	text77
  7382  00251C                     __ptext77:
  7383                           	callstack 0
  7384  00251C                     _I2C_Close:
  7385                           	callstack 23
  7386  00251C                     
  7387                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
  7388  00251C  0E01               	movlw	1
  7389  00251E  6E05               	movwf	I2C_Close@returnValue^0,c
  7390  002520                     
  7391                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
  7392  002520  0100               	movlb	0	; () banked
  7393  002522  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  7394  002524  EF96  F012         	goto	u1861
  7395  002528  EF98  F012         	goto	u1860
  7396  00252C                     u1861:
  7397  00252C  EFA2  F012         	goto	l3387
  7398  002530                     u1860:
  7399  002530                     
  7400                           ; BSR set to: 0
  7401                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
  7402  002530  9583               	bcf	(_I2C_Status+35)& (0+255),2,b
  7403                           
  7404                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
  7405  002532  697C               	setf	(_I2C_Status+28)& (0+255),b
  7406  002534                     
  7407                           ; BSR set to: 0
  7408                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
  7409  002534  ECED  F013         	call	_I2C_MasterClearIrq	;wreg free
  7410                           
  7411                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
  7412  002538  ECE9  F013         	call	_I2C_MasterDisableIrq	;wreg free
  7413                           
  7414                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
  7415  00253C  ECEB  F013         	call	_I2C_MasterClose	;wreg free
  7416  002540                     
  7417                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
  7418  002540  C082  F005         	movff	_I2C_Status+34,I2C_Close@returnValue
  7419  002544                     l3387:
  7420                           
  7421                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
  7422  002544  5005               	movf	I2C_Close@returnValue^0,w,c
  7423  002546  0012               	return		;funcret
  7424  002548                     __end_of_I2C_Close:
  7425                           	callstack 0
  7426                           
  7427 ;; *************** function _I2C_MasterDisableIrq *****************
  7428 ;; Defined at:
  7429 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;		None
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;		None
  7434 ;; Return value:  Size  Location     Type
  7435 ;;                  1    wreg      void 
  7436 ;; Registers used:
  7437 ;;		None
  7438 ;; Tracked objects:
  7439 ;;		On entry : 0/0
  7440 ;;		On exit  : 0/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7447 ;;Total ram usage:        0 bytes
  7448 ;; Hardware stack levels used:    1
  7449 ;; Hardware stack levels required when called:    4
  7450 ;; This function calls:
  7451 ;;		Nothing
  7452 ;; This function is called by:
  7453 ;;		_I2C_Close
  7454 ;;		_I2C_SetTimeOut
  7455 ;; This function uses a non-reentrant model
  7456 ;;
  7457                           
  7458                           	psect	text78
  7459  0027D2                     __ptext78:
  7460                           	callstack 0
  7461  0027D2                     _I2C_MasterDisableIrq:
  7462                           	callstack 23
  7463  0027D2                     
  7464                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
  7465  0027D2  969D               	bcf	157,3,c	;volatile
  7466  0027D4  0012               	return		;funcret
  7467  0027D6                     __end_of_I2C_MasterDisableIrq:
  7468                           	callstack 0
  7469                           
  7470 ;; *************** function _I2C_MasterClose *****************
  7471 ;; Defined at:
  7472 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
  7473 ;; Parameters:    Size  Location     Type
  7474 ;;		None
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;		None
  7477 ;; Return value:  Size  Location     Type
  7478 ;;                  1    wreg      void 
  7479 ;; Registers used:
  7480 ;;		None
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7490 ;;Total ram usage:        0 bytes
  7491 ;; Hardware stack levels used:    1
  7492 ;; Hardware stack levels required when called:    4
  7493 ;; This function calls:
  7494 ;;		Nothing
  7495 ;; This function is called by:
  7496 ;;		_I2C_Close
  7497 ;; This function uses a non-reentrant model
  7498 ;;
  7499                           
  7500                           	psect	text79
  7501  0027D6                     __ptext79:
  7502                           	callstack 0
  7503  0027D6                     _I2C_MasterClose:
  7504                           	callstack 23
  7505  0027D6                     
  7506                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
  7507  0027D6  9AC6               	bcf	198,5,c	;volatile
  7508  0027D8  0012               	return		;funcret
  7509  0027DA                     __end_of_I2C_MasterClose:
  7510                           	callstack 0
  7511                           
  7512 ;; *************** function _I2C_MasterClearIrq *****************
  7513 ;; Defined at:
  7514 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;		None
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;		None
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  1    wreg      void 
  7521 ;; Registers used:
  7522 ;;		None
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7532 ;;Total ram usage:        0 bytes
  7533 ;; Hardware stack levels used:    1
  7534 ;; Hardware stack levels required when called:    4
  7535 ;; This function calls:
  7536 ;;		Nothing
  7537 ;; This function is called by:
  7538 ;;		_I2C_Open
  7539 ;;		_I2C_Close
  7540 ;;		_I2C_MasterFsm
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           	psect	text80
  7545  0027DA                     __ptext80:
  7546                           	callstack 0
  7547  0027DA                     _I2C_MasterClearIrq:
  7548                           	callstack 23
  7549  0027DA                     
  7550                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
  7551  0027DA  969E               	bcf	158,3,c	;volatile
  7552  0027DC  0012               	return		;funcret
  7553  0027DE                     __end_of_I2C_MasterClearIrq:
  7554                           	callstack 0
  7555                           
  7556 ;; *************** function _INTERRUPT_InterruptManager *****************
  7557 ;; Defined at:
  7558 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;		None
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;		None
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  1    wreg      void 
  7565 ;; Registers used:
  7566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7574 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7575 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7576 ;;Total ram usage:        4 bytes
  7577 ;; Hardware stack levels used:    1
  7578 ;; Hardware stack levels required when called:    3
  7579 ;; This function calls:
  7580 ;;		Absolute function
  7581 ;;		_EUSART_Receive_ISR
  7582 ;;		_EUSART_Transmit_ISR
  7583 ;; This function is called by:
  7584 ;;		Interrupt level 2
  7585 ;; This function uses a non-reentrant model
  7586 ;;
  7587                           
  7588                           	psect	intcode
  7589  000008                     __pintcode:
  7590                           	callstack 0
  7591  000008                     _INTERRUPT_InterruptManager:
  7592                           	callstack 17
  7593                           
  7594                           ;incstack = 0
  7595  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7596  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  7597  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  7598  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  7599  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  7600  00001A                     
  7601                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  7602  00001A  ACF2               	btfss	242,6,c	;volatile
  7603  00001C  EF12  F000         	goto	i2u226_41
  7604  000020  EF14  F000         	goto	i2u226_40
  7605  000024                     i2u226_41:
  7606  000024  EF4E  F000         	goto	i2l671
  7607  000028                     i2u226_40:
  7608  000028                     
  7609                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  7610  000028  A89D               	btfss	157,4,c	;volatile
  7611  00002A  EF19  F000         	goto	i2u227_41
  7612  00002E  EF1B  F000         	goto	i2u227_40
  7613  000032                     i2u227_41:
  7614  000032  EF31  F000         	goto	i2l666
  7615  000036                     i2u227_40:
  7616  000036  A89E               	btfss	158,4,c	;volatile
  7617  000038  EF20  F000         	goto	i2u228_41
  7618  00003C  EF22  F000         	goto	i2u228_40
  7619  000040                     i2u228_41:
  7620  000040  EF31  F000         	goto	i2l666
  7621  000044                     i2u228_40:
  7622  000044                     
  7623                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART_TxDefaultInterruptHandler();
  7624  000044  D802               	call	i2u229_48
  7625  000046  EF2F  F000         	goto	i2u229_49
  7626  00004A                     i2u229_48:
  7627  00004A  0005               	push	
  7628  00004C  6EFA               	movwf	pclath,c
  7629  00004E  0100               	movlb	0	; () banked
  7630  000050  51F5               	movf	_EUSART_TxDefaultInterruptHandler& (0+255),w,b
  7631  000052  6EFD               	movwf	tosl,c
  7632  000054  51F6               	movf	(_EUSART_TxDefaultInterruptHandler+1)& (0+255),w,b
  7633  000056  6EFE               	movwf	tosh,c
  7634  000058  6AFF               	clrf	tosu,c
  7635  00005A  50FA               	movf	pclath,w,c
  7636  00005C  0012               	return		;indir
  7637  00005E                     i2u229_49:
  7638                           
  7639                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  7640  00005E  EF4E  F000         	goto	i2l671
  7641  000062                     i2l666:
  7642  000062  AA9D               	btfss	157,5,c	;volatile
  7643  000064  EF36  F000         	goto	i2u230_41
  7644  000068  EF38  F000         	goto	i2u230_40
  7645  00006C                     i2u230_41:
  7646  00006C  EF4E  F000         	goto	i2l667
  7647  000070                     i2u230_40:
  7648  000070  AA9E               	btfss	158,5,c	;volatile
  7649  000072  EF3D  F000         	goto	i2u231_41
  7650  000076  EF3F  F000         	goto	i2u231_40
  7651  00007A                     i2u231_41:
  7652  00007A  EF4E  F000         	goto	i2l667
  7653  00007E                     i2u231_40:
  7654  00007E                     
  7655                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART_RxDefaultInterruptHandler();
  7656  00007E  D802               	call	i2u232_48
  7657  000080  EF4C  F000         	goto	i2u232_49
  7658  000084                     i2u232_48:
  7659  000084  0005               	push	
  7660  000086  6EFA               	movwf	pclath,c
  7661  000088  0100               	movlb	0	; () banked
  7662  00008A  51F3               	movf	_EUSART_RxDefaultInterruptHandler& (0+255),w,b
  7663  00008C  6EFD               	movwf	tosl,c
  7664  00008E  51F4               	movf	(_EUSART_RxDefaultInterruptHandler+1)& (0+255),w,b
  7665  000090  6EFE               	movwf	tosh,c
  7666  000092  6AFF               	clrf	tosu,c
  7667  000094  50FA               	movf	pclath,w,c
  7668  000096  0012               	return		;indir
  7669  000098                     i2u232_49:
  7670                           
  7671                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  7672  000098  EF4E  F000         	goto	i2l671
  7673  00009C                     i2l667:
  7674  00009C                     i2l671:
  7675  00009C  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  7676  0000A0  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  7677  0000A4  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  7678  0000A8  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  7679  0000AC  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7680  0000AE  0011               	retfie		f
  7681  0000B0                     __end_of_INTERRUPT_InterruptManager:
  7682                           	callstack 0
  7683                           
  7684 ;; *************** function _EUSART_Transmit_ISR *****************
  7685 ;; Defined at:
  7686 ;;		line 206 in file "mcc_generated_files/eusart.c"
  7687 ;; Parameters:    Size  Location     Type
  7688 ;;		None
  7689 ;; Auto vars:     Size  Location     Type
  7690 ;;		None
  7691 ;; Return value:  Size  Location     Type
  7692 ;;                  1    wreg      void 
  7693 ;; Registers used:
  7694 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7695 ;; Tracked objects:
  7696 ;;		On entry : 0/0
  7697 ;;		On exit  : 0/0
  7698 ;;		Unchanged: 0/0
  7699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7704 ;;Total ram usage:        0 bytes
  7705 ;; Hardware stack levels used:    1
  7706 ;; This function calls:
  7707 ;;		Nothing
  7708 ;; This function is called by:
  7709 ;;		_EUSART_Initialize
  7710 ;;		_INTERRUPT_InterruptManager
  7711 ;; This function uses a non-reentrant model
  7712 ;;
  7713                           
  7714                           	psect	text82
  7715  0022A0                     __ptext82:
  7716                           	callstack 0
  7717  0022A0                     _EUSART_Transmit_ISR:
  7718                           	callstack 19
  7719  0022A0                     
  7720                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  7721  0022A0  0E08               	movlw	8
  7722  0022A2  0100               	movlb	0	; () banked
  7723  0022A4  61F7               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
  7724  0022A6  EF57  F011         	goto	i2u206_41
  7725  0022AA  EF59  F011         	goto	i2u206_40
  7726  0022AE                     i2u206_41:
  7727  0022AE  EF6F  F011         	goto	i2l607
  7728  0022B2                     i2u206_40:
  7729  0022B2                     
  7730                           ; BSR set to: 0
  7731                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  7732  0022B2  0E94               	movlw	low _eusartTxBuffer
  7733  0022B4  2459               	addwf	_eusartTxTail^0,w,c	;volatile
  7734  0022B6  6ED9               	movwf	fsr2l,c
  7735  0022B8  6ADA               	clrf	fsr2h,c
  7736  0022BA  0E00               	movlw	high _eusartTxBuffer
  7737  0022BC  22DA               	addwfc	fsr2h,f,c
  7738  0022BE  50DF               	movf	indf2,w,c
  7739  0022C0  6EAD               	movwf	173,c	;volatile
  7740  0022C2                     
  7741                           ; BSR set to: 0
  7742  0022C2  2A59               	incf	_eusartTxTail^0,f,c	;volatile
  7743  0022C4                     
  7744                           ; BSR set to: 0
  7745                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  7746  0022C4  0E07               	movlw	7
  7747  0022C6  6459               	cpfsgt	_eusartTxTail^0,c	;volatile
  7748  0022C8  EF68  F011         	goto	i2u207_41
  7749  0022CC  EF6A  F011         	goto	i2u207_40
  7750  0022D0                     i2u207_41:
  7751  0022D0  EF6C  F011         	goto	i2l3643
  7752  0022D4                     i2u207_40:
  7753  0022D4                     
  7754                           ; BSR set to: 0
  7755                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
  7756  0022D4  0E00               	movlw	0
  7757  0022D6  6E59               	movwf	_eusartTxTail^0,c	;volatile
  7758  0022D8                     i2l3643:
  7759                           
  7760                           ; BSR set to: 0
  7761                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
  7762  0022D8  2BF7               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
  7763                           
  7764                           ;mcc_generated_files/eusart.c: 218:     }
  7765  0022DA  EF70  F011         	goto	i2l610
  7766  0022DE                     i2l607:
  7767                           
  7768                           ; BSR set to: 0
  7769                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TX1IE = 0;
  7770  0022DE  989D               	bcf	157,4,c	;volatile
  7771  0022E0                     i2l610:
  7772                           
  7773                           ; BSR set to: 0
  7774  0022E0  0012               	return		;funcret
  7775  0022E2                     __end_of_EUSART_Transmit_ISR:
  7776                           	callstack 0
  7777                           
  7778 ;; *************** function _EUSART_Receive_ISR *****************
  7779 ;; Defined at:
  7780 ;;		line 225 in file "mcc_generated_files/eusart.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;		None
  7783 ;; Auto vars:     Size  Location     Type
  7784 ;;		None
  7785 ;; Return value:  Size  Location     Type
  7786 ;;                  1    wreg      void 
  7787 ;; Registers used:
  7788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7789 ;; Tracked objects:
  7790 ;;		On entry : 0/0
  7791 ;;		On exit  : 0/0
  7792 ;;		Unchanged: 0/0
  7793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7798 ;;Total ram usage:        0 bytes
  7799 ;; Hardware stack levels used:    1
  7800 ;; Hardware stack levels required when called:    2
  7801 ;; This function calls:
  7802 ;;		Absolute function
  7803 ;;		_EUSART_DefaultErrorHandler
  7804 ;;		_EUSART_DefaultFramingErrorHandler
  7805 ;;		_EUSART_DefaultOverrunErrorHandler
  7806 ;;		_EUSART_RxDataHandler
  7807 ;; This function is called by:
  7808 ;;		_EUSART_Initialize
  7809 ;;		_INTERRUPT_InterruptManager
  7810 ;; This function uses a non-reentrant model
  7811 ;;
  7812                           
  7813                           	psect	text83
  7814  0019E0                     __ptext83:
  7815                           	callstack 0
  7816  0019E0                     _EUSART_Receive_ISR:
  7817                           	callstack 17
  7818  0019E0                     
  7819                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  7820  0019E0  0E84               	movlw	low _eusartRxStatusBuffer
  7821  0019E2  2458               	addwf	_eusartRxHead^0,w,c	;volatile
  7822  0019E4  6ED9               	movwf	fsr2l,c
  7823  0019E6  6ADA               	clrf	fsr2h,c
  7824  0019E8  0E00               	movlw	high _eusartRxStatusBuffer
  7825  0019EA  22DA               	addwfc	fsr2h,f,c
  7826  0019EC  0E00               	movlw	0
  7827  0019EE  6EDF               	movwf	indf2,c
  7828  0019F0                     
  7829                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
  7830  0019F0  A4AB               	btfss	171,2,c	;volatile
  7831  0019F2  EFFD  F00C         	goto	i2u208_41
  7832  0019F6  EFFF  F00C         	goto	i2u208_40
  7833  0019FA                     i2u208_41:
  7834  0019FA  EF13  F00D         	goto	i2l3653
  7835  0019FE                     i2u208_40:
  7836  0019FE                     
  7837                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  7838  0019FE  0E84               	movlw	low _eusartRxStatusBuffer
  7839  001A00  2458               	addwf	_eusartRxHead^0,w,c	;volatile
  7840  001A02  6ED9               	movwf	fsr2l,c
  7841  001A04  6ADA               	clrf	fsr2h,c
  7842  001A06  0E00               	movlw	high _eusartRxStatusBuffer
  7843  001A08  22DA               	addwfc	fsr2h,f,c
  7844  001A0A  0100               	movlb	0	; () banked
  7845  001A0C  82DF               	bsf	indf2,1,c
  7846  001A0E                     
  7847                           ; BSR set to: 0
  7848                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
  7849  001A0E  D802               	call	i2u209_48
  7850  001A10  EF13  F00D         	goto	i2u209_49
  7851  001A14                     i2u209_48:
  7852  001A14  0005               	push	
  7853  001A16  6EFA               	movwf	pclath,c
  7854  001A18  51F1               	movf	_EUSART_FramingErrorHandler& (0+255),w,b
  7855  001A1A  6EFD               	movwf	tosl,c
  7856  001A1C  51F2               	movf	(_EUSART_FramingErrorHandler+1)& (0+255),w,b
  7857  001A1E  6EFE               	movwf	tosh,c
  7858  001A20  6AFF               	clrf	tosu,c
  7859  001A22  50FA               	movf	pclath,w,c
  7860  001A24  0012               	return		;indir
  7861  001A26                     i2u209_49:
  7862  001A26                     i2l3653:
  7863                           
  7864                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
  7865  001A26  A2AB               	btfss	171,1,c	;volatile
  7866  001A28  EF18  F00D         	goto	i2u210_41
  7867  001A2C  EF1A  F00D         	goto	i2u210_40
  7868  001A30                     i2u210_41:
  7869  001A30  EF2E  F00D         	goto	i2l3659
  7870  001A34                     i2u210_40:
  7871  001A34                     
  7872                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  7873  001A34  0E84               	movlw	low _eusartRxStatusBuffer
  7874  001A36  2458               	addwf	_eusartRxHead^0,w,c	;volatile
  7875  001A38  6ED9               	movwf	fsr2l,c
  7876  001A3A  6ADA               	clrf	fsr2h,c
  7877  001A3C  0E00               	movlw	high _eusartRxStatusBuffer
  7878  001A3E  22DA               	addwfc	fsr2h,f,c
  7879  001A40  0100               	movlb	0	; () banked
  7880  001A42  84DF               	bsf	indf2,2,c
  7881  001A44                     
  7882                           ; BSR set to: 0
  7883                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
  7884  001A44  D802               	call	i2u211_48
  7885  001A46  EF2E  F00D         	goto	i2u211_49
  7886  001A4A                     i2u211_48:
  7887  001A4A  0005               	push	
  7888  001A4C  6EFA               	movwf	pclath,c
  7889  001A4E  51EF               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
  7890  001A50  6EFD               	movwf	tosl,c
  7891  001A52  51F0               	movf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
  7892  001A54  6EFE               	movwf	tosh,c
  7893  001A56  6AFF               	clrf	tosu,c
  7894  001A58  50FA               	movf	pclath,w,c
  7895  001A5A  0012               	return		;indir
  7896  001A5C                     i2u211_49:
  7897  001A5C                     i2l3659:
  7898                           
  7899                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
  7900  001A5C  0E84               	movlw	low _eusartRxStatusBuffer
  7901  001A5E  2458               	addwf	_eusartRxHead^0,w,c	;volatile
  7902  001A60  6ED9               	movwf	fsr2l,c
  7903  001A62  6ADA               	clrf	fsr2h,c
  7904  001A64  0E00               	movlw	high _eusartRxStatusBuffer
  7905  001A66  22DA               	addwfc	fsr2h,f,c
  7906  001A68  50DF               	movf	indf2,w,c
  7907  001A6A  B4D8               	btfsc	status,2,c
  7908  001A6C  EF3A  F00D         	goto	i2u212_41
  7909  001A70  EF3C  F00D         	goto	i2u212_40
  7910  001A74                     i2u212_41:
  7911  001A74  EF4B  F00D         	goto	i2l3663
  7912  001A78                     i2u212_40:
  7913  001A78                     
  7914                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
  7915  001A78  D802               	call	i2u213_48
  7916  001A7A  EF49  F00D         	goto	i2u213_49
  7917  001A7E                     i2u213_48:
  7918  001A7E  0005               	push	
  7919  001A80  6EFA               	movwf	pclath,c
  7920  001A82  0100               	movlb	0	; () banked
  7921  001A84  51ED               	movf	_EUSART_ErrorHandler& (0+255),w,b
  7922  001A86  6EFD               	movwf	tosl,c
  7923  001A88  51EE               	movf	(_EUSART_ErrorHandler+1)& (0+255),w,b
  7924  001A8A  6EFE               	movwf	tosh,c
  7925  001A8C  6AFF               	clrf	tosu,c
  7926  001A8E  50FA               	movf	pclath,w,c
  7927  001A90  0012               	return		;indir
  7928  001A92                     i2u213_49:
  7929                           
  7930                           ;mcc_generated_files/eusart.c: 242:     } else {
  7931  001A92  EF4D  F00D         	goto	i2l617
  7932  001A96                     i2l3663:
  7933                           
  7934                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
  7935  001A96  ECA4  F012         	call	_EUSART_RxDataHandler	;wreg free
  7936  001A9A                     i2l617:
  7937  001A9A  0012               	return		;funcret
  7938  001A9C                     __end_of_EUSART_Receive_ISR:
  7939                           	callstack 0
  7940                           
  7941 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  7942 ;; Defined at:
  7943 ;;		line 261 in file "mcc_generated_files/eusart.c"
  7944 ;; Parameters:    Size  Location     Type
  7945 ;;		None
  7946 ;; Auto vars:     Size  Location     Type
  7947 ;;		None
  7948 ;; Return value:  Size  Location     Type
  7949 ;;                  1    wreg      void 
  7950 ;; Registers used:
  7951 ;;		None
  7952 ;; Tracked objects:
  7953 ;;		On entry : 0/0
  7954 ;;		On exit  : 0/0
  7955 ;;		Unchanged: 0/0
  7956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7961 ;;Total ram usage:        0 bytes
  7962 ;; Hardware stack levels used:    1
  7963 ;; This function calls:
  7964 ;;		Nothing
  7965 ;; This function is called by:
  7966 ;;		_EUSART_Initialize
  7967 ;;		_EUSART_Receive_ISR
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971                           	psect	text84
  7972  0027A2                     __ptext84:
  7973                           	callstack 0
  7974  0027A2                     _EUSART_DefaultOverrunErrorHandler:
  7975                           	callstack 18
  7976  0027A2                     
  7977                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
  7978  0027A2  98AB               	bcf	171,4,c	;volatile
  7979                           
  7980                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
  7981  0027A4  88AB               	bsf	171,4,c	;volatile
  7982  0027A6  0012               	return		;funcret
  7983  0027A8                     __end_of_EUSART_DefaultOverrunErrorHandler:
  7984                           	callstack 0
  7985                           
  7986 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  7987 ;; Defined at:
  7988 ;;		line 259 in file "mcc_generated_files/eusart.c"
  7989 ;; Parameters:    Size  Location     Type
  7990 ;;		None
  7991 ;; Auto vars:     Size  Location     Type
  7992 ;;		None
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  1    wreg      void 
  7995 ;; Registers used:
  7996 ;;		None
  7997 ;; Tracked objects:
  7998 ;;		On entry : 0/0
  7999 ;;		On exit  : 0/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8006 ;;Total ram usage:        0 bytes
  8007 ;; Hardware stack levels used:    1
  8008 ;; This function calls:
  8009 ;;		Nothing
  8010 ;; This function is called by:
  8011 ;;		_EUSART_Initialize
  8012 ;;		_EUSART_Receive_ISR
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016                           	psect	text85
  8017  0027DE                     __ptext85:
  8018                           	callstack 0
  8019  0027DE                     _EUSART_DefaultFramingErrorHandler:
  8020                           	callstack 18
  8021  0027DE  0012               	return		;funcret
  8022  0027E0                     __end_of_EUSART_DefaultFramingErrorHandler:
  8023                           	callstack 0
  8024                           
  8025 ;; *************** function _EUSART_DefaultErrorHandler *****************
  8026 ;; Defined at:
  8027 ;;		line 269 in file "mcc_generated_files/eusart.c"
  8028 ;; Parameters:    Size  Location     Type
  8029 ;;		None
  8030 ;; Auto vars:     Size  Location     Type
  8031 ;;		None
  8032 ;; Return value:  Size  Location     Type
  8033 ;;                  1    wreg      void 
  8034 ;; Registers used:
  8035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8036 ;; Tracked objects:
  8037 ;;		On entry : 0/0
  8038 ;;		On exit  : 0/0
  8039 ;;		Unchanged: 0/0
  8040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8045 ;;Total ram usage:        0 bytes
  8046 ;; Hardware stack levels used:    1
  8047 ;; Hardware stack levels required when called:    1
  8048 ;; This function calls:
  8049 ;;		_EUSART_RxDataHandler
  8050 ;; This function is called by:
  8051 ;;		_EUSART_Initialize
  8052 ;;		_EUSART_Receive_ISR
  8053 ;; This function uses a non-reentrant model
  8054 ;;
  8055                           
  8056                           	psect	text86
  8057  0027A8                     __ptext86:
  8058                           	callstack 0
  8059  0027A8                     _EUSART_DefaultErrorHandler:
  8060                           	callstack 17
  8061  0027A8                     
  8062                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
  8063  0027A8  ECA4  F012         	call	_EUSART_RxDataHandler	;wreg free
  8064  0027AC  0012               	return		;funcret
  8065  0027AE                     __end_of_EUSART_DefaultErrorHandler:
  8066                           	callstack 0
  8067                           
  8068 ;; *************** function _EUSART_RxDataHandler *****************
  8069 ;; Defined at:
  8070 ;;		line 249 in file "mcc_generated_files/eusart.c"
  8071 ;; Parameters:    Size  Location     Type
  8072 ;;		None
  8073 ;; Auto vars:     Size  Location     Type
  8074 ;;		None
  8075 ;; Return value:  Size  Location     Type
  8076 ;;                  1    wreg      void 
  8077 ;; Registers used:
  8078 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8079 ;; Tracked objects:
  8080 ;;		On entry : 0/0
  8081 ;;		On exit  : 0/0
  8082 ;;		Unchanged: 0/0
  8083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8088 ;;Total ram usage:        0 bytes
  8089 ;; Hardware stack levels used:    1
  8090 ;; This function calls:
  8091 ;;		Nothing
  8092 ;; This function is called by:
  8093 ;;		_EUSART_Receive_ISR
  8094 ;;		_EUSART_DefaultErrorHandler
  8095 ;; This function uses a non-reentrant model
  8096 ;;
  8097                           
  8098                           	psect	text87
  8099  002548                     __ptext87:
  8100                           	callstack 0
  8101  002548                     _EUSART_RxDataHandler:
  8102                           	callstack 18
  8103  002548                     
  8104                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
  8105  002548  0E8C               	movlw	low _eusartRxBuffer
  8106  00254A  2458               	addwf	_eusartRxHead^0,w,c	;volatile
  8107  00254C  6ED9               	movwf	fsr2l,c
  8108  00254E  6ADA               	clrf	fsr2h,c
  8109  002550  0E00               	movlw	high _eusartRxBuffer
  8110  002552  22DA               	addwfc	fsr2h,f,c
  8111  002554  CFAE FFDF          	movff	4014,indf2	;volatile
  8112  002558  2A58               	incf	_eusartRxHead^0,f,c	;volatile
  8113  00255A                     
  8114                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  8115  00255A  0E07               	movlw	7
  8116  00255C  6458               	cpfsgt	_eusartRxHead^0,c	;volatile
  8117  00255E  EFB3  F012         	goto	i2u187_41
  8118  002562  EFB5  F012         	goto	i2u187_40
  8119  002566                     i2u187_41:
  8120  002566  EFB7  F012         	goto	i2l3409
  8121  00256A                     i2u187_40:
  8122  00256A                     
  8123                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
  8124  00256A  0E00               	movlw	0
  8125  00256C  6E58               	movwf	_eusartRxHead^0,c	;volatile
  8126  00256E                     i2l3409:
  8127                           
  8128                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
  8129  00256E  0100               	movlb	0	; () banked
  8130  002570  2BAA               	incf	_eusartRxCount& (0+255),f,b	;volatile
  8131  002572                     
  8132                           ; BSR set to: 0
  8133  002572  0012               	return		;funcret
  8134  002574                     __end_of_EUSART_RxDataHandler:
  8135                           	callstack 0
  8136                           
  8137                           	psect	text88
  8138  000000                     __ptext88:
  8139                           	callstack 0
  8140  000000                     
  8141                           	psect	rparam
  8142  0000                     
  8143                           	psect	temp
  8144  00005B                     btemp:
  8145                           	callstack 0
  8146  00005B                     	ds	1
  8147  0000                     int$flags	set	btemp
  8148  0000                     wtemp8	set	btemp+1
  8149  0000                     ttemp5	set	btemp+1
  8150  0000                     ttemp6	set	btemp+4
  8151  0000                     ttemp7	set	btemp+8
  8152                           
  8153                           	psect	idloc
  8154                           
  8155                           ;Config register IDLOC0 @ 0x200000
  8156                           ;	unspecified, using default values
  8157  200000                     	org	2097152
  8158  200000  FF                 	db	255
  8159                           
  8160                           ;Config register IDLOC1 @ 0x200001
  8161                           ;	unspecified, using default values
  8162  200001                     	org	2097153
  8163  200001  FF                 	db	255
  8164                           
  8165                           ;Config register IDLOC2 @ 0x200002
  8166                           ;	unspecified, using default values
  8167  200002                     	org	2097154
  8168  200002  FF                 	db	255
  8169                           
  8170                           ;Config register IDLOC3 @ 0x200003
  8171                           ;	unspecified, using default values
  8172  200003                     	org	2097155
  8173  200003  FF                 	db	255
  8174                           
  8175                           ;Config register IDLOC4 @ 0x200004
  8176                           ;	unspecified, using default values
  8177  200004                     	org	2097156
  8178  200004  FF                 	db	255
  8179                           
  8180                           ;Config register IDLOC5 @ 0x200005
  8181                           ;	unspecified, using default values
  8182  200005                     	org	2097157
  8183  200005  FF                 	db	255
  8184                           
  8185                           ;Config register IDLOC6 @ 0x200006
  8186                           ;	unspecified, using default values
  8187  200006                     	org	2097158
  8188  200006  FF                 	db	255
  8189                           
  8190                           ;Config register IDLOC7 @ 0x200007
  8191                           ;	unspecified, using default values
  8192  200007                     	org	2097159
  8193  200007  FF                 	db	255
  8194                           
  8195                           	psect	config
  8196                           
  8197                           ; Padding undefined space
  8198  300000                     	org	3145728
  8199  300000  FF                 	db	255
  8200                           
  8201                           ;Config register CONFIG1H @ 0x300001
  8202                           ;	Oscillator Selection bits
  8203                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  8204                           ;	Fail-Safe Clock Monitor Enable bit
  8205                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8206                           ;	Internal/External Oscillator Switchover bit
  8207                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8208  300001                     	org	3145729
  8209  300001  08                 	db	8
  8210                           
  8211                           ;Config register CONFIG2L @ 0x300002
  8212                           ;	Power-up Timer Enable bit
  8213                           ;	PWRT = OFF, PWRT disabled
  8214                           ;	Brown-out Reset Enable bits
  8215                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8216                           ;	Brown Out Reset Voltage bits
  8217                           ;	BORV = 18, VBOR set to 1.8 V nominal
  8218  300002                     	org	3145730
  8219  300002  1F                 	db	31
  8220                           
  8221                           ;Config register CONFIG2H @ 0x300003
  8222                           ;	Watchdog Timer Enable bit
  8223                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  8224                           ;	Watchdog Timer Postscale Select bits
  8225                           ;	WDTPS = 32768, 1:32768
  8226  300003                     	org	3145731
  8227  300003  1E                 	db	30
  8228                           
  8229                           ; Padding undefined space
  8230  300004                     	org	3145732
  8231  300004  FF                 	db	255
  8232                           
  8233                           ;Config register CONFIG3H @ 0x300005
  8234                           ;	CCP2 MUX bit
  8235                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8236                           ;	PORTB A/D Enable bit
  8237                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  8238                           ;	Low-Power Timer1 Oscillator Enable bit
  8239                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8240                           ;	HFINTOSC Fast Start-up
  8241                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  8242                           ;	MCLR Pin Enable bit
  8243                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  8244  300005                     	org	3145733
  8245  300005  0B                 	db	11
  8246                           
  8247                           ;Config register CONFIG4L @ 0x300006
  8248                           ;	Stack Full/Underflow Reset Enable bit
  8249                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8250                           ;	Single-Supply ICSP Enable bit
  8251                           ;	LVP = OFF, Single-Supply ICSP disabled
  8252                           ;	Extended Instruction Set Enable bit
  8253                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8254                           ;	Background Debugger Enable bit
  8255                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  8256  300006                     	org	3145734
  8257  300006  81                 	db	129
  8258                           
  8259                           ; Padding undefined space
  8260  300007                     	org	3145735
  8261  300007  FF                 	db	255
  8262                           
  8263                           ;Config register CONFIG5L @ 0x300008
  8264                           ;	Code Protection Block 0
  8265                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  8266                           ;	Code Protection Block 1
  8267                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  8268                           ;	Code Protection Block 2
  8269                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  8270                           ;	Code Protection Block 3
  8271                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  8272  300008                     	org	3145736
  8273  300008  0F                 	db	15
  8274                           
  8275                           ;Config register CONFIG5H @ 0x300009
  8276                           ;	Boot Block Code Protection bit
  8277                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8278                           ;	Data EEPROM Code Protection bit
  8279                           ;	CPD = OFF, Data EEPROM not code-protected
  8280  300009                     	org	3145737
  8281  300009  C0                 	db	192
  8282                           
  8283                           ;Config register CONFIG6L @ 0x30000A
  8284                           ;	Write Protection Block 0
  8285                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  8286                           ;	Write Protection Block 1
  8287                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  8288                           ;	Write Protection Block 2
  8289                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  8290                           ;	Write Protection Block 3
  8291                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  8292  30000A                     	org	3145738
  8293  30000A  0F                 	db	15
  8294                           
  8295                           ;Config register CONFIG6H @ 0x30000B
  8296                           ;	Configuration Register Write Protection bit
  8297                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8298                           ;	Boot Block Write Protection bit
  8299                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  8300                           ;	Data EEPROM Write Protection bit
  8301                           ;	WRTD = OFF, Data EEPROM not write-protected
  8302  30000B                     	org	3145739
  8303  30000B  E0                 	db	224
  8304                           
  8305                           ;Config register CONFIG7L @ 0x30000C
  8306                           ;	Table Read Protection Block 0
  8307                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  8308                           ;	Table Read Protection Block 1
  8309                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8310                           ;	Table Read Protection Block 2
  8311                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  8312                           ;	Table Read Protection Block 3
  8313                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  8314  30000C                     	org	3145740
  8315  30000C  0F                 	db	15
  8316                           
  8317                           ;Config register CONFIG7H @ 0x30000D
  8318                           ;	Boot Block Table Read Protection bit
  8319                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8320  30000D                     	org	3145741
  8321  30000D  40                 	db	64
  8322                           tosu	equ	0xFFF
  8323                           tosh	equ	0xFFE
  8324                           tosl	equ	0xFFD
  8325                           stkptr	equ	0xFFC
  8326                           pclatu	equ	0xFFB
  8327                           pclath	equ	0xFFA
  8328                           pcl	equ	0xFF9
  8329                           tblptru	equ	0xFF8
  8330                           tblptrh	equ	0xFF7
  8331                           tblptrl	equ	0xFF6
  8332                           tablat	equ	0xFF5
  8333                           prodh	equ	0xFF4
  8334                           prodl	equ	0xFF3
  8335                           indf0	equ	0xFEF
  8336                           postinc0	equ	0xFEE
  8337                           postdec0	equ	0xFED
  8338                           preinc0	equ	0xFEC
  8339                           plusw0	equ	0xFEB
  8340                           fsr0h	equ	0xFEA
  8341                           fsr0l	equ	0xFE9
  8342                           wreg	equ	0xFE8
  8343                           indf1	equ	0xFE7
  8344                           postinc1	equ	0xFE6
  8345                           postdec1	equ	0xFE5
  8346                           preinc1	equ	0xFE4
  8347                           plusw1	equ	0xFE3
  8348                           fsr1h	equ	0xFE2
  8349                           fsr1l	equ	0xFE1
  8350                           bsr	equ	0xFE0
  8351                           indf2	equ	0xFDF
  8352                           postinc2	equ	0xFDE
  8353                           postdec2	equ	0xFDD
  8354                           preinc2	equ	0xFDC
  8355                           plusw2	equ	0xFDB
  8356                           fsr2h	equ	0xFDA
  8357                           fsr2l	equ	0xFD9
  8358                           status	equ	0xFD8

Data Sizes:
    Strings     39
    Constant    32
    Data        0
    BSS         112
    Persistent  16
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     33     157
    BANK1           256      4       4
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2483$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2489$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2495$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$2501$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2500	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2495	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$2494	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2489	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$2488	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX$2483	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2482	const PTR FTN()enum E3101 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1997_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_1(CODE[39]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_1(CODE[39]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 39
		 -> STR_1(CODE[39]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_1(CODE[39]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    MCP79410_get_time@hour	PTR unsigned char  size(2) Largest target is 1
		 -> hour(BANK0[1]), 

    MCP79410_get_time@min	PTR unsigned char  size(2) Largest target is 1
		 -> min(BANK0[1]), 

    MCP79410_get_time@sec	PTR unsigned char  size(2) Largest target is 1
		 -> sec(BANK0[1]), 

    MCP79410_get_date@year	PTR unsigned char  size(2) Largest target is 1
		 -> year(BANK0[1]), 

    MCP79410_get_date@mouth	PTR unsigned char  size(2) Largest target is 1
		 -> month(BANK0[1]), 

    MCP79410_get_date@day	PTR unsigned char  size(2) Largest target is 1
		 -> day(BANK0[1]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E3101[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S96$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _atoi->_isspace
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _MCP79410_get_time->_I2C_Read1ByteRegister
    _MCP79410_get_date->_I2C_Read1ByteRegister
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  204456
                                             84 COMRAM     2     2      0
                  _MCP79410_get_date
                  _MCP79410_get_time
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18     4     14   12240
                                             19 BANK0     14     0     14
                                              0 BANK1      4     4      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   12063
                                             82 COMRAM     2     2      0
                                             13 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   11530
                                             72 COMRAM    10     4      6
                                              0 BANK0     13    13      0
                               _atoi
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5447
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1037
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    3485
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2382
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MCP79410_get_time                                    6     0      6   95885
                                             24 COMRAM     6     0      6
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _MCP79410_get_date                                    6     0      6   95841
                                             24 COMRAM     6     0      6
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_Read1ByteRegister                                3     2      1   95459
                                             21 COMRAM     3     2      1
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetAddressNackCallback                           4     0      4    1870
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             2     2      0      46
                                              4 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0   88620
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOperation                                  2     2      0   88620
                                             19 COMRAM     2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (5) _I2C_Poller                                           0     0      0   88574
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        2     2      0   88574
                                             17 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            2     2      0   22149
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              2     0      2    4390
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetDataCompleteCallback                          4     0      4    2478
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetCallback                                      5     1      4     914
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _I2C_SetBuffer                                        4     0      4    1868
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               2     0      2       0
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              2     0      2     265
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Close                                            1     1      0      24
                                              4 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MCP79410_get_date
     _I2C_Read1ByteRegister
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
           _I2C_Poller
             _I2C_MasterFsm
               _I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_IDLE *
               _I2C_DO_RCEN *
                 _I2C_MasterStartRx
               _I2C_DO_RESET *
               _I2C_DO_RX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_MasterGetRxData *
                 _I2C_MasterSendAck *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_RX_ACK *
                 _I2C_MasterSendAck
               _I2C_DO_RX_NACK_RESTART *
                 _I2C_MasterSendNack
               _I2C_DO_RX_NACK_STOP *
                 _I2C_MasterSendNack
               _I2C_DO_SEND_ADR_READ *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_ADR_WRITE *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_DO_TX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterIsNack *
                 _I2C_MasterSendTxData *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterSetIrq *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_MasterClearIrq *
               _I2C_MasterIsNack *
             _I2C_MasterWaitForEvent
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterOpen
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
         _I2C_SetCallback
   _MCP79410_get_time
     _I2C_Read1ByteRegister
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
           _I2C_Poller
             _I2C_MasterFsm
               _I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_IDLE *
               _I2C_DO_RCEN *
                 _I2C_MasterStartRx
               _I2C_DO_RESET *
               _I2C_DO_RX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_MasterGetRxData *
                 _I2C_MasterSendAck *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_RX_ACK *
                 _I2C_MasterSendAck
               _I2C_DO_RX_NACK_RESTART *
                 _I2C_MasterSendNack
               _I2C_DO_RX_NACK_STOP *
                 _I2C_MasterSendNack
               _I2C_DO_SEND_ADR_READ *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_ADR_WRITE *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_DO_TX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterIsNack *
                 _I2C_MasterSendTxData *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterSetIrq *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_MasterClearIrq *
               _I2C_MasterIsNack *
             _I2C_MasterWaitForEvent
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterOpen
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
         _I2C_SetCallback
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
             _EUSART_Write
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4       4       7        1.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     21      9D       5       98.1%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FB      32        0.0%
DATA                 0      0      FB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Mar 03 19:28:42 2021

                ?_EUSART_SetRxInterruptHandler 0005                         ??_I2C_DO_SEND_ADR_READ 0005  
                  __size_of_I2C_MasterSendNack 0006                             __size_of_I2C_Close 002C  
                      ??_I2C_DO_SEND_ADR_WRITE 0006                                    _SSPSTATbits 000FC7  
                                           l33 1F6A                                             l90 24EE  
                                           l93 24C2                                             l96 2496  
                                           l99 251A                            ___wmul@multiplicand 0007  
                          __size_of_I2C_Poller 001E                          ??_I2C_DO_SEND_RESTART 0005  
                 __size_of_I2C_MasterOperation 0044                                            l102 2320  
                                          l213 1D0A                                            l223 229E  
                                          l312 1E06                                            l217 2546  
                __size_of_I2C_MasterSendTxData 0008                                            l209 269E  
                                          l402 27C8                                            l306 26FA  
                                          l330 278C                                            l411 27A0  
                                          l236 25E6                                            l405 26B2  
                                          l333 2784                                            l229 2754  
                                          l245 265C                                            l342 276C  
                                          l262 2644                                            l239 2674  
                                          l351 26EE                                            l256 1E80  
                                          l408 279A                                            l432 27B4  
                                          l272 26E2                                            l336 277C  
                                          l281 19DE                                            l345 2764  
                                          l426 27D4                                            l266 1FDA  
                                          l275 26D2                                            l339 2774  
                                          l435 26B4                                            l348 275C  
                                          l604 2710                                            l429 27DC  
                                          l381 27D8                                            l365 27C4  
                                          l269 2706                                            l357 20AA  
                                          l390 27CC                                            l278 19A6  
                                          l294 1B78                                            l295 1BE6  
                                          l439 26C2                                            l368 27C0  
                                          l384 27B8                                            l456 268A  
                                          l721 2044                                            l633 2742  
                                          l378 2608                                            l642 2724  
                                          l570 1EF6                                            l387 2794  
                                          l459 271A                                            l396 27BC  
                                          l724 1D8A                                            l636 2738  
                                          l660 27B0                                            l492 246A  
                                          l645 272E                                            l399 27D0  
                                          l639 274C                                            l727 25C2  
                                          l594 2182                                            l595 2198  
                                          l598 21C4                         ??_EUSART_RxDataHandler 0001  
                                          _day 00FC                                            _pad 1856  
                                          _min 00F8                                            _sec 00CB  
                       fp__I2C_DO_RX_NACK_STOP 0000                         _I2C_MasterWaitForEvent 26B4  
               ?_EUSART_SetFramingErrorHandler 0005                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                 ??_I2C_SetAddressNackCallback 000E                       ??_I2C_CallbackReturnStop 0010  
                                 _I2C_DO_RESET 26E4                        ??_rd2RegCompleteHandler 0010  
                                         l3011 1DA0                                           l3003 1D8C  
                                         l3005 1D94                                           l3021 1DAE  
                                         l1405 259C                                           l1510 2106  
                                         l3015 1DA6                                           l3111 2628  
                                         l1511 210E                                           l1440 189C  
                                         l1504 13E2                                           l3009 1D9C  
                                         l3033 26E4                                           l3041 2046  
                                         l3113 262C                                           l3201 2278  
                                         l4001 219A                                           l1610 2394  
                                         l1450 141C                                           l3027 2766  
                                         l3035 26E8                                           l3043 204A  
                                         l3115 2630                                           l3203 2288  
                                         l3211 229C                                           l4003 21AA  
                                         l4011 21C2                                           l1443 18DE  
                                         l1604 216C                                           l1452 1424  
                                         l3109 27CE                                           l3029 276A  
                                         l3037 26EC                                           l3045 2052  
                                         l3117 2634                                           l3205 2290  
                                         l4101 21C6                                           l4005 21AC  
                                         l4013 270A                                           l4021 1C16  
                                         l1445 191A                                           l1542 1854  
                                         l3055 2062                                           l3207 2294  
                                         l1551 2404                                           l4103 21CA  
                                         l4007 21BC                                           l4023 1C34  
                                         l4015 1BE8                                           l4031 2224  
                                         l3049 205A                                           l3081 1F80  
                                         l3209 2298                                           l4105 21DE  
                                         l4201 175E                                           l1545 235C  
                                         l4009 21C0                                           l4025 1C6A  
                                         l4017 1BFA                                           l4033 2236  
                                         l4041 2416                                           l1473 1656  
                                         l4121 143A                                           l4113 13E4  
                                         l3083 1F94                                           l3331 1C9A  
                                         l3323 1C80                                           l4051 259E  
                                         l4107 220C                                           l1539 184C  
                                         l4211 180C                                           l4203 1794  
                                         l4019 1C0C                                           l4035 223A  
                                         l4043 242E                                           l1475 16BA  
                                         l1459 14B8                                           l4131 1478  
                                         l4123 1442                                           l4115 13F4  
                                         l1580 1C7C                                           l3085 1F9A  
                                         l3077 1F6C                                           l3181 25E8  
                                         l3341 1CAC                                           l3333 1C9C  
                                         l3325 1C84                                           l4053 25BA  
                                         l4109 2210                                           l4213 181E  
                                         l1565 23CC                                           l4029 2218  
                                         l4037 2406                                           l4061 187A  
                                         l4141 14EC                                           l4133 1480  
                                         l4125 1462                                           l4117 13F6  
                                         l4221 104A                                           l3191 27D6  
                                         l3079 1F70                                           l3183 25F6  
                                         l3351 1CD4                                           l3343 1CB4  
                                         l3335 1C9E                                           l3327 1C94  
                                         l1559 2216                                           l4215 1830  
                                         l4207 17CC                                           l4039 2412  
                                         l4071 18C0                                           l4063 1888  
                                         l4047 235E                                           l4143 14FE  
                                         l4151 155E                                           l4135 149C  
                                         l4127 146A                                           l4119 1410  
                                         l4311 13D0                                           l4303 1390  
                                         l4231 10A0                                           l4223 1070  
                                         l3193 225E                                           l3185 2606  
                                         l3361 1CFC                                           l3353 1CDC  
                                         l3345 1CBC                                           l3337 1CA2  
                                         l3329 1C98                                           l3521 1F3C  
                                         l3513 1EFA                                           l3601 2676  
                                         l4073 18EE                                           l4065 1894  
                                         l4057 1856                                           l4161 15F4  
                                         l4153 156E                                           l4137 14AC  
                                         l4129 1472                                           l4305 139E  
                                         l1489 1140                                           l4233 10A2  
                                         l4225 107E                                           l1594 243A  
                                         l2803 24C4                                           l2811 2498  
                                         l3195 2262                                           l3363 1D00  
                                         l3355 1CE4                                           l3347 1CC4  
                                         l3339 1CAA                                           l3371 2646  
                                         l3523 1F50                                           l3515 1EFE  
                                         l3531 268C                                           l3603 267A  
                                         l4083 2322                                           l4075 1902  
                                         l4067 18A8                                           l4059 1866  
                                         l4091 2146                                           l4171 166C  
                                         l4163 1612                                           l4155 1574  
                                         l4147 1538                                           l4251 10CC  
                                         l4243 10C0                                           l4235 10B4  
                                         l4227 1090                                           l4323 20AC  
                                         l4331 2574                                           l1588 225A  
                                         l3189 27D2                                           l3381 2530  
                                         l2805 24D8                                           l2813 24AC  
                                         l2821 2480                                           l4501 1DE0  
                                         l3197 2272                                           l3373 274E  
                                         l3365 1D04                                           l3357 1CEC  
                                         l3349 1CCC                                           l3525 1F54  
                                         l3517 1F14                                           l3533 269C  
                                         l3541 2456                                           l3605 267E  
                                         l4181 16D0                                           l4069 18BC  
                                         l4093 2158                                           l4173 167C  
                                         l4165 162C                                           l4157 157A  
                                         l4149 154A                                           l4261 1150  
                                         l4229 1094                                           l4309 13AA  
                                         l4325 20B4                                           l4333 257E  
                                         l4341 1AA2                                           l3383 2534  
                                         l2831 2518                                           l2807 24EC  
                                         l2815 24C0                                           l2823 2494  
                                         l2911 2704                                           l3199 2274  
                                         l3359 1CF4                                           l3367 1D08  
                                         l3527 1F68                                           l3519 1F28  
                                         l3391 2726                                           l3551 1E82  
                                         l3535 27AE                                           l3543 245C  
                                         l3607 2682                                           l4191 1732  
                                         l4183 16D4                                           l4079 2396  
                                         l1599 2164                                           l4087 2110  
                                         l4175 1692                                           l4167 1646  
                                         l4159 15D8                                           l4271 11E8  
                                         l4263 1176                                           l4255 10D8  
                                         l4247 10C6                                           l4239 10BA  
                                         l4327 20C2                                           l4351 1AB6  
                                         l4343 1AA4                                           l2905 27DA  
                                         l3385 2540                                           l3377 251C  
                                         l3393 271C                                           l3561 1EA6  
                                         l3553 1E84                                           l3545 245E  
                                         l3537 243C                                           l3609 2686  
                                         l4097 23CE                                           l4185 16D8  
                                         l4169 1666                                           l4281 1278  
                                         l4273 11F6                                           l4265 11AC  
                                         l4257 112E                                           l4329 20E8  
                                         l4353 1ABA                                           l4345 1AAA  
                                         l4337 1A9C                                           l3387 2544  
                                         l3379 2520                                           l2771 25C4  
                                         l2763 1E0A                                           l2827 24F0  
                                         l2819 246C                                           l2835 22E2  
                                         l2843 26A0                                           l2907 26FC  
                                         l2915 26D4                                           l2923 26C4  
                                         l2931 191C                                           l2851 278A  
                                         l3395 273A                                           l3571 1ECA  
                                         l3563 1EAA                                           l3555 1E90  
                                         l3547 2468                                           l3539 2454  
                                         l4195 1738                                           l4187 16F6  
                                         l4179 16BC                                           l4283 129E  
                                         l4267 11BA                                           l4259 114E  
                                         l4355 1AD6                                           l4347 1AAE  
                                         l4339 1AA0                                           l2781 27C6  
                                         l2773 25D4                                           l2765 1E1C  
                                         l2829 2504                                           l2837 230A  
                                         l2909 2700                                           l2917 26D8  
                                         l2925 26C8                                           l2861 276E  
                                         l3397 2730                                           l3573 1EF4  
                                         l3565 1EAE                                           l3557 1E9E  
                                         l3549 2712                                           l4197 174E  
                                         l4189 172E                                           l4285 12B6  
                                         l4293 133C                                           l4277 1240  
                                         l4269 11C8                                           l4357 1AF2  
                                         l4349 1AB2                                           ?_pad 0017  
                                         l2775 25DC                                           l2767 1E50  
                                         l2839 231E                                           l2783 279C  
                                         l2871 2796                                           l2847 2790  
                                         l2919 26E0                                           l2927 26D0  
                                         l2951 19AA                                           l2943 1944  
                                         l2935 1934                                           l2855 277E  
                                         l2863 2772                                           l3671 2030  
                                         l3399 2744                                           l3567 1EB2  
                                         l3559 1EA2                                           l4199 1756  
                                         l4295 1362                                           l4287 12C4  
                                         l4279 1252                                           l4359 1B24  
                                         l2777 25E4                                           l2769 265E  
                                         l2953 19BC                                           l2849 2786  
                                         l2857 2782                                           l2881 2762  
                                         l2873 2756                                           l3665 1FDC  
                                         l3681 1D74                                           l3673 1D0C  
                                         l3569 1EBE                                           l4297 1370  
                                         l4289 1300                                           l2779 27CA  
                                         l2867 27B6                                           l2955 19D6  
                                         l2939 193C                                           l2971 1B6E  
                                         l2875 275A                                           l3667 1FF0  
                                         l3675 1D20                                           l4299 1384  
                                         l4491 1100                                           l2885 27BA  
                                         l2893 27B2                                           l2957 19DC  
                                         l2949 194C                                           l2973 1B72  
                                         l2965 1B42                                           l3669 2006  
                                         l3677 1D36                                           l4493 177E  
                                         l2895 27C2                                           l2983 1B86  
                                         l2967 1B50                                           l2887 2776  
                                         l2879 275E                                           l4495 2094  
                                         l3679 1D60                                           l4497 1BC0  
                                         l2969 1B56                                           l2889 277A  
                                         l2899 27BE                                           l4499 1980  
                                         l2979 1B7E                                           l2995 26F0  
                                         l2989 1B8E                                           l2997 26F4  
                                         l2999 26F8                                           l3995 2170  
                                         l3997 2170                                           l3999 2190  
                                         STR_1 1021                                           u2000 1F68  
                                         u2001 1F64                                           u1220 26B0  
                                         u1221 26AA                                           u1230 1930  
                                         u1231 192C                                           u1170 1E1C  
                                         u1226 26B2                                           u1250 19D6  
                                         u1171 1E18                                           u1251 19D2  
                                         u1180 25D4                                           u1260 1B6E  
                                         u1340 26C2                                           u1420 2644  
                                         u1181 25D0                                           u1261 1B6A  
                                         u1341 26BE                                           u1421 2640  
                                         _LATA 000F89                                           u1350 1F80  
                                         _LATB 000F8A                                           u1351 1F7C  
                                         _LATC 000F8B                                           u1248 195A  
                                         u1360 1F94                                           u1600 2288  
                                         u2400 225A                                           _LATD 000F8C  
                                         u1249 196E                                           u1361 1F90  
                                         u1601 2284                                           u2401 2256  
                                         _LATE 000F8D                                           u2330 2182  
                                         u2410 242E                                           u2331 217E  
                                         u2411 242A                                           u2500 2356  
                                         u2340 2190                                           u2420 238E  
                                         u2501 2350                                           u2341 218C  
                                         u2421 2388                                           u1278 1B9C  
                                         u2510 2358                                           u2350 21BC  
                                         u2430 2390                                           u1279 1BAE  
                                         u2351 21B8                                           u1288 1DBC  
                                         u2360 1BFA                                           u2440 1866  
                                         u2520 2140                                           u2600 1410  
                                         u1289 1DCE                                           u2361 1BF6  
                                         u2441 1862                                           u2521 213A  
                                         u2601 140C                                           u1298 2070  
                                         u1378 1FC4                                           u2370 1C0C  
                                         u2450 1888                                           u2530 2142  
                                         u2610 143A                                           u1299 2082  
                                         u1379 1FD6                                           u2371 1C08  
                                         u2451 1884                                           u2611 1436  
                                         u1580 25F6                                           u2380 1C34  
                                         u2460 18DE                                           u2540 2158  
                                         u2700 15F4                                           u2620 149C  
                                         u1581 25F2                                           u2381 1C30  
                                         u2461 18DA                                           u2541 2154  
                                         u2701 15F0                                           u2621 1498  
                                         u1590 2272                                           u2550 23FE  
                                         u2390 1C6A                                           u2470 18EE  
                                         u2710 1612                                           u2630 14E6  
                                         u1591 226E                                           u2551 23F8  
                                         u2391 1C66                                           u2471 18EA  
                                         u2711 160E                                           u2631 14E0  
                                         u2560 2400                                           u2800 1808  
                                         u2480 23C6                                           u2720 162C  
                                         u2640 14E8                                           u2481 23C0  
                                         u2721 1628                                           u1850 1C94  
                                         u2570 21DE                                           u2810 181E  
                                         u2490 23C8                                           u2730 1646  
                                         u2650 14FE                                           u1851 1C90  
                                         u2571 21DA                                           u2811 181A  
                                         u2731 1642                                           u2651 14FA  
                                         u1860 2530                                           u2580 220C  
                                         u2820 1830                                           u2740 1656  
                                         u2660 1532                                           u2900 1252  
                                         u1861 252C                                           u2581 2208  
                                         u2821 182C                                           u2741 1652  
                                         u2661 152C                                           u2901 124E  
                                         u2750 1666                                           u2670 1534  
                                         u2590 13F4                                           u2910 1278  
                                         u2830 1070                                           u2751 1662  
                                         u2591 13F0                                           u2911 1274  
                                         u2831 106C                                           u2760 16F6  
                                         u2680 154A                                           u2920 129E  
                                         u2840 1140                                           u2761 16F2  
                                         u2681 1546                                           u2921 129A  
                                         u2841 113C                                           u2770 172E  
                                         u2690 15B2                                           u2930 1362  
                                         u2850 114E                                           u2771 172A  
                                         u2931 135E                                           u2851 114A  
                                         u2780 174A                                           u2860 1176  
                                         u2940 2106                                           u2781 1746  
                                         u2861 1172                                           u2941 2102  
                                         u1990 1F14                                           u2790 1806  
                                         u2870 11BA                                           u1991 1F10  
                                         u2791 1800                                           u2695 15A0  
                                         u2871 11B6                                           u2880 1238  
                                         u2881 1232                                           u2890 123A  
                                         u2957 1B2E                                           _WPUB 000F7C  
                      ??_wr2RegCompleteHandler 0010                                           _dbuf 00AB  
                                         _atoi 16BC                                           _main 1A9C  
                     ?_I2C_CallbackReturnReset 000E                                           _hour 00F9  
                                         _prec 00A3                                           _nout 009F  
                                         _year 00FA                                           pad@i 001E  
                                         pad@p 001B                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           indf2 000FDF  
                                         fsr1l 000FE1                                           pad@w 0020  
                                         fsr2l 000FD9                               __end_of_I2C_Open 1D0C  
                                         btemp 005B                                           _xtoa 13E4  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00B0                   fp__I2C_DO_SEND_RESTART_WRITE 0000  
                                 ___param_bank 000000               __size_of_rdBlkRegCompleteHandler 0040  
                                        ??_pad 001D                               ?_I2C_MasterClose 0001  
                                ?_EUSART_Write 0001            __size_of_I2C_SetAddressNackCallback 0018  
               __size_of_OSCILLATOR_Initialize 000A                               ?_I2C_MasterStart 0001  
                                _I2C_DO_RX_ACK 2766                               ?_I2C_MasterWrite 0001  
                __end_of_OSCILLATOR_Initialize 271C                                    _writeBuffer 009C  
                                        ?_atoi 000C                                          ?_main 0001  
                                        _ANSEL 000F7E                          _I2C_Read1ByteRegister 1EF8  
                                        ?_xtoa 0022                                          i2l610 22E0  
                                        i2l621 2572                                          i2l630 27AC  
                                        i2l607 22DE                                          i2l624 27DE  
                                        i2l617 1A9A                                          i2l627 27A6  
                                        i2l671 009C                                          i2l666 0062  
                                        i2l667 009C                                          _RCREG 000FAE  
                 __size_of_I2C_DO_RX_NACK_STOP 0008                                          _RCSTA 000FAB  
                                 vfpfcnvrt@fmt 004B                                   vfpfcnvrt@llu 00CC  
                                        _SPBRG 000FAF                              ??_I2C_DO_TX_EMPTY 0010  
                                        _TRISA 000F92                                          _TRISB 000F93  
                                        _TRISC 000F94                                          _TRISD 000F95  
                                        _TRISE 000F96                                          _TXREG 000FAD  
                                        _TXSTA 000FAC                              __end_of_I2C_DO_RX 1BE8  
                            __end_of_I2C_DO_TX 19E0                                          _flags 00A5  
                                        _fputc 1BE8                              __end_of_I2C_Close 2548  
                              __end_of_isalpha 235E                                          _fputs 2218  
                              __end_of_isdigit 2406                         __size_of_I2C_MasterFsm 0070  
                                        _month 00FB                 I2C_MasterOperation@returnValue 0015  
                                        atoi@n 0019                                          pad@fp 0017  
                                        atoi@s 000C                                          _width 00A1  
                                        _putch 2708                        _I2C_MasterEnableRestart 27CA  
                              __end_of_islower 2396                                __end_of_isspace 2218  
                              __end_of_isupper 23CE                                          pclath 000FFA  
                                        tablat 000FF5                               ?_I2C_SetCallback 0005  
                 I2C_SetAddressNackCallback@cb 000A                                          ttemp5 005C  
                                        ttemp6 005F                                          ttemp7 0063  
                                        status 000FD8                                          wtemp8 005C  
                                        xtoa@c 0047                                          xtoa@d 0024  
                            ?_I2C_DO_SEND_STOP 0001                         __size_of_I2C_SetBuffer 0024  
                                        xtoa@i 0045                                          xtoa@n 003D  
                                        xtoa@p 0039                                          xtoa@w 003B  
                                        xtoa@x 002C                                __end_of_toupper 216E  
                           ??_I2C_DO_SEND_STOP 0005                                   _toupper$2191 0011  
                                _fsmStateTable 1001                       fp__rd1RegCompleteHandler 0000  
                              __initialization 260A                                   __end_of_atoi 1856  
                                 __end_of_main 1B42                       fp__wr1RegCompleteHandler 0000  
            __size_of_I2C_DO_SEND_RESTART_READ 0008                                   __end_of_xtoa 16BC  
                    ?_I2C_DO_SEND_RESTART_READ 0001                                 ??_EUSART_Write 0005  
                               ?_I2C_DO_RX_ACK 0001                    ?_INTERRUPT_InterruptManager 0001  
               ??_EUSART_SetRxInterruptHandler 0007                                         ??_atoi 000E  
                                       ??_main 0055                              ?_I2C_MasterIsNack 0001  
                                       ??_xtoa 002D                                  __activetblptr 000003  
                            ?_I2C_MasterSetIrq 0001                             ??_I2C_MasterIsNack 0005  
                           ??_I2C_MasterSetIrq 0005           fp__EUSART_DefaultFramingErrorHandler 0000  
    __end_of_EUSART_DefaultFramingErrorHandler 27E0     __size_of_EUSART_DefaultFramingErrorHandler 0002  
          ??_EUSART_DefaultFramingErrorHandler 0001             ?_EUSART_DefaultFramingErrorHandler 0001  
            _EUSART_DefaultFramingErrorHandler 27DE                     _EUSART_OverrunErrorHandler 00EF  
              __end_of_I2C_CallbackReturnReset 27C2                                         ?_fputc 0007  
                                       ?_fputs 0010                __size_of_I2C_CallbackReturnStop 0004  
                I2C_SetDataCompleteCallback@cb 000A                                         ?_putch 0001  
                                       _ANSELH 000F7F                                   ??_I2C_Poller 0014  
                                       i2l3401 2548                                         i2l3403 2558  
                                       i2l3405 255A                                         i2l3407 256A  
                                       i2l3409 256E                                         i2l3641 22D4  
                                       i2l3633 22A0                                         i2l3651 1A0E  
                                       i2l3643 22D8                                         i2l3635 22B2  
                                       i2l3811 0036                                         i2l3661 1A78  
                                       i2l3653 1A26                                         i2l3645 19E0  
                                       i2l3637 22C2                                         i2l3813 0044  
                                       i2l3575 27A2                                         i2l3663 1A96  
                                       i2l3655 1A34                                         i2l3647 19F0  
                                       i2l3639 22C4                                         i2l3815 0070  
                                       i2l3807 001A                                         i2l3577 27A8  
                                       i2l3657 1A44                                         i2l3649 19FE  
                                       i2l3817 007E                                         i2l3809 0028  
                                       i2l3659 1A5C                                         _OSCCON 000FD3  
                                vfpfcnvrt@done 00D5                                         _SPBRGH 000FB0  
                                       _SSPADD 000FC8                                         _SSPBUF 000FC9  
                          _I2C_MasterGetRxData 27B6                                   vfprintf@cfmt 0053  
                                       ___wmul 259E                                  _I2C_MasterFsm 1F6C  
                          _EUSART_Transmit_ISR 22A0                                         clear_0 2610  
                            I2C_SetCallback@cb 0005                        fp__I2C_DO_SEND_ADR_READ 0000  
                       ?_I2C_Read1ByteRegister 0016                        __size_of_I2C_MasterOpen 0022  
                      __size_of_I2C_MasterStop 0004                        __size_of_I2C_Initialize 0014  
                                       _printf 2574                                         pad@buf 0019  
                                _I2C_SetBuffer 25C4                             __end_of_I2C_Poller 2646  
                                       _strlen 2406                   __end_of_I2C_MasterDisableIrq 27D6  
                                       fputc@c 0007                                         fputs@c 0014  
                          _I2C_DO_ADDRESS_NACK 2046                                         fputs@i 0015  
                                       fputs@s 0010                                      ??_isalpha 0007  
                                    ??_isdigit 0007                           ?_I2C_MasterGetRxData 0001  
                                    ?_I2C_Open 0001             __end_of_I2C_SetAddressNackCallback 265E  
                   _I2C_SetAddressNackCallback 2646                                      ??_islower 0007  
                                 __mediumconst 0000                                      ??_isspace 0007  
                                       tblptrh 000FF7                                      ??_isupper 0007  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                    ??_I2C_MasterEnableRestart 0005                               __end_of_vfprintf 2110  
                                       xtoa@fp 0022                                      ??_toupper 000D  
                         ?_EUSART_Transmit_ISR 0001                  __size_of_INTERRUPT_Initialize 0004  
                            _SYSTEM_Initialize 2676                                     __accesstop 0060  
                      __end_of__initialization 261E                            _I2C_MasterOperation 225C  
                           ?_SYSTEM_Initialize 0001                                  ___rparam_used 000001  
                         ?_I2C_DO_ADDRESS_NACK 0001           __end_of_EUSART_SetTxInterruptHandler 2726  
        __size_of_EUSART_SetTxInterruptHandler 000A                   _EUSART_SetTxInterruptHandler 271C  
                      _rdBlkRegCompleteHandler 22E2                     fp__rdBlkRegCompleteHandler 0000  
                               __pcstackCOMRAM 0001                                 ?_I2C_MasterFsm 0001  
                              ??_I2C_DO_RX_ACK 0005                         _I2C_CallbackReturnStop 27C2  
                          ??_SYSTEM_Initialize 0007                                  __end_of_fputc 1C7E  
                                __end_of_fputs 225C                                  __end_of_putch 2712  
                               ?_I2C_SetBuffer 0005                        ?_I2C_MasterWaitForEvent 0001  
               __size_of_I2C_DO_SEND_ADR_WRITE 0010             __size_of_I2C_DO_SEND_RESTART_WRITE 0008  
                __end_of_I2C_DO_SEND_ADR_WRITE 26D4                     ?_I2C_DO_SEND_RESTART_WRITE 0001  
                         ?_I2C_MasterOperation 0001                          ??_I2C_MasterGetRxData 0005  
                                   ??_I2C_Open 0005                           _eusartRxStatusBuffer 0084  
                   __end_of_I2C_MasterClearIrq 27DE                ??_EUSART_SetOverrunErrorHandler 0007  
                                      ??_fputc 000B                      __end_of_SYSTEM_Initialize 268C  
                                      ??_fputs 0014                          ??_EUSART_Transmit_ISR 0001  
                                      ??_putch 0006                              _I2C_MasterSendAck 2796  
                                   __pbssBANK0 0060                           __end_of_EUSART_Write 21C6  
                                ??_I2C_DO_IDLE 0005                 __size_of_rd2RegCompleteHandler 002C  
                                ??_I2C_DO_RCEN 0005                  __end_of_rd2RegCompleteHandler 24C4  
                 __end_of_I2C_MasterSendTxData 2796                             ?_I2C_MasterSendAck 0001  
                            _I2C_MasterStartRx 27BA                 __size_of_wr2RegCompleteHandler 002C  
                        ??_I2C_DO_ADDRESS_NACK 0010                  __end_of_wr2RegCompleteHandler 251C  
                  __size_of_EUSART_Receive_ISR 00BC                            _I2C_DO_RX_NACK_STOP 275E  
                        _rd1RegCompleteHandler 24C4                             ?_I2C_MasterStartRx 0001  
                   __end_of_I2C_MasterSendNack 27A2                          _wr1RegCompleteHandler 246C  
                          ??_I2C_MasterSendAck 0005                       rd1RegCompleteHandler@ptr 000E  
                ?_EUSART_SetTxInterruptHandler 0005               _EUSART_TxDefaultInterruptHandler 00F5  
                  __end_of_I2C_DO_SEND_RESTART 277E                                _I2C_DO_TX_EMPTY 1D8C  
                          I2C_SetBuffer@buffer 0005                                        ?___wmul 0005  
               __end_of_I2C_MasterWaitForEvent 26C4                            ??_I2C_MasterStartRx 0005  
                __size_of_I2C_DO_SEND_ADR_READ 0010                                        _BAUDCON 000FB8  
             __size_of_I2C_CallbackReturnReset 0004                   ??_EUSART_DefaultErrorHandler 0001  
                        ??_I2C_MasterOperation 0014                                        ?_printf 00DF  
               I2C_SetDataCompleteCallback@ptr 000C                                        ?_strlen 0005  
                     ??_I2C_DO_RX_NACK_RESTART 0005              __end_of_I2C_DO_SEND_RESTART_WRITE 2786  
                         ?_I2C_DO_RX_NACK_STOP 0001                                  _eusartRxCount 00AA  
                            _MCP79410_get_date 1FDC                           MCP79410_get_date@day 0019  
                            _MCP79410_get_time 1D0C                             __size_of_vfpfcnvrt 039A  
                __size_of_EUSART_RxDataHandler 002C                      __end_of_I2C_MasterSendAck 279C  
                                      _OSCTUNE 000F9B                             ?_MCP79410_get_date 0019  
                           ?_MCP79410_get_time 0019                       ??_EUSART_SetErrorHandler 0007  
                                      _SSPCON1 000FC6                                        _SSPCON2 000FC5  
                                      _SSPSTAT 000FC7                      __end_of_I2C_MasterStartRx 27BE  
                         I2C_Close@returnValue 0005                   ?_I2C_SetDataCompleteCallback 000A  
                                    _I2C_DO_RX 1B42                                      _I2C_DO_TX 191C  
             __end_of_I2C_DO_SEND_RESTART_READ 278E                   I2C_Read1ByteRegister@address 0017  
                          ??_MCP79410_get_date 001F                                      _I2C_Close 251C  
                          ??_MCP79410_get_time 001F                      ??_rdBlkRegCompleteHandler 0010  
                         _I2C_MasterDisableIrq 27D2                                ??_I2C_MasterFsm 0012  
                                      __Hparam 0000            __size_of_EUSART_DefaultErrorHandler 0006  
                                      __Lparam 0000                            __end_of_I2C_DO_IDLE 2708  
                          __end_of_I2C_DO_RCEN 26FC                           MCP79410_get_time@min 001B  
                         MCP79410_get_time@sec 001D                                     _readBuffer 00A7  
                              ??_I2C_SetBuffer 0009                                __size_of___wmul 0026  
                                    ?_vfprintf 00D9                        I2C_SetBuffer@bufferSize 0007  
                                 __psmallconst 1000                                 _I2C_MasterOpen 25E8  
                                      __pcinit 260A                                 _I2C_MasterStop 27C6  
                               _I2C_Initialize 268C                                        __ramtop 1000  
                    __size_of_I2C_DO_SEND_STOP 0008                                        __ptext0 1A9C  
                                      __ptext1 2574                                        __ptext2 20AC  
                                      __ptext3 104A                                        __ptext4 13E4  
                                      __ptext5 2110                                        __ptext6 235E  
                                      __ptext7 1856                                        __ptext8 2406  
                                      __ptext9 2218                                __size_of_printf 002A  
                        ??_I2C_DO_RX_NACK_STOP 0005                      __end_of_MCP79410_get_date 2046  
                    __end_of_MCP79410_get_time 1D8C                                __size_of_strlen 0036  
                        _OSCILLATOR_Initialize 2712                                   __size_of_pad 00C6  
                                      _isalpha 2322                                        _isdigit 23CE  
                           I2C_SetCallback@idx 0009                       __size_of_I2C_MasterClose 0004  
                                      _islower 235E                       ??_PIN_MANAGER_Initialize 0005  
                I2C_CallbackReturnReset@funPtr 000E                                        _isspace 21C6  
                           I2C_SetCallback@ptr 0007                       wr1RegCompleteHandler@ptr 000E  
                                      _isupper 2396                       fp__I2C_DO_SEND_ADR_WRITE 0000  
                     __size_of_I2C_MasterStart 0004                       __size_of_I2C_MasterWrite 0008  
                                      atoi@neg 0012                     __size_of_SYSTEM_Initialize 0016  
                                      _toupper 2110                           end_of_initialization 261E  
                                   ?_I2C_DO_RX 0001                                     ?_I2C_DO_TX 0001  
        __end_of_EUSART_SetOverrunErrorHandler 273A         __size_of_EUSART_SetOverrunErrorHandler 000A  
                _EUSART_SetOverrunErrorHandler 2730                      __size_of_I2C_MasterIsNack 0014  
                                      fputc@fp 0009                                     ?_I2C_Close 0001  
                                      fputs@fp 0012                         ?_rd1RegCompleteHandler 000E  
                      __end_of_I2C_DO_TX_EMPTY 1E08                      __size_of_I2C_MasterSetIrq 0004  
                        ?_I2C_MasterDisableIrq 0001                              _EUSART_Initialize 1E82  
                       ?_wr1RegCompleteHandler 000E                         MCP79410_get_date@mouth 001B  
                     fp__rd2RegCompleteHandler 0000                             ?_EUSART_Initialize 0001  
                     __size_of_I2C_SetCallback 007A                              __end_of_vfpfcnvrt 13E4  
                                    _RCSTAbits 000FAB                                        postdec2 000FDD  
                      ??_I2C_Read1ByteRegister 0017                         __end_of_I2C_MasterOpen 260A  
                     fp__wr2RegCompleteHandler 0000                                        postinc0 000FEE  
                                      postinc1 000FE6                                        postinc2 000FDE  
                       __end_of_I2C_MasterStop 27CA                         __end_of_I2C_Initialize 26A0  
                                   ??_vfprintf 0053                      fp__I2C_CallbackReturnStop 0000  
                                      strlen@a 0007                                        strlen@s 0005  
                          ??_EUSART_Initialize 0007                 ??_EUSART_SetTxInterruptHandler 0007  
              __end_of_rdBlkRegCompleteHandler 2322                           _I2C_MasterSendTxData 278E  
                              fp__I2C_DO_RESET 0000                __size_of_I2C_DO_RX_NACK_RESTART 0008  
                  ?_I2C_SetAddressNackCallback 000A                          __size_of_EUSART_Write 0058  
                   __size_of_I2C_MasterSendAck 0006                              __size_of_I2C_Open 008E  
              __size_of_EUSART_SetErrorHandler 000A                     __size_of_I2C_MasterStartRx 0004  
                    __end_of_EUSART_Initialize 1EF8                                    _I2C_DO_IDLE 26FC  
                                  _I2C_DO_RCEN 26F0                     rdBlkRegCompleteHandler@ptr 000E  
                                    _TXSTAbits 000FAC                        ?_I2C_CallbackReturnStop 000E  
                     _I2C_DO_SEND_RESTART_READ 2786                    fp__I2C_DO_SEND_RESTART_READ 0000  
                 I2C_CallbackReturnStop@funPtr 000E                                ?_I2C_MasterOpen 0001  
                 __end_of_INTERRUPT_Initialize 27B2                                ?_I2C_MasterStop 0001  
                              ?_I2C_Initialize 0001                        _I2C_CallbackReturnReset 27BE  
                     I2C_Read1ByteRegister@reg 0016                     fp__I2C_CallbackReturnReset 0000  
           __end_of_EUSART_DefaultErrorHandler 27AE                     _EUSART_DefaultErrorHandler 27A8  
                                  vfpfcnvrt@ap 004D                                    vfpfcnvrt@fp 0049  
                               __end_of___wmul 25C4           __size_of_I2C_SetDataCompleteCallback 0018  
                                 _EUSART_Write 216E                          ?_I2C_MasterSendTxData 0001  
                       ?_OSCILLATOR_Initialize 0001                     __size_of_MCP79410_get_date 006A  
                  ??_I2C_DO_SEND_RESTART_WRITE 0005                     __size_of_MCP79410_get_time 0080  
                               __end_of_printf 259E                                 __end_of_strlen 243C  
                          start_initialization 260A                __size_of_PIN_MANAGER_Initialize 0030  
                                  __end_of_pad 191C                                  ?_I2C_DO_RESET 0001  
 EUSART_SetRxInterruptHandler@interruptHandler 0005   EUSART_SetTxInterruptHandler@interruptHandler 0005  
                                  putch@txData 0006                                    ??_I2C_DO_RX 0010  
                                  ??_I2C_DO_TX 0010                              ??_I2C_MasterClose 0005  
                       ??_I2C_MasterDisableIrq 0005                                    ??_I2C_Close 0005  
                            ??_I2C_MasterStart 0005                              ??_I2C_MasterWrite 0016  
                                _Slave_Address 00A8                 __end_of_I2C_CallbackReturnStop 27C6  
                       _I2C_DO_RX_NACK_RESTART 2756                               ?_I2C_DO_TX_EMPTY 0001  
                           _I2C_MasterClearIrq 27DA                 ?_EUSART_SetOverrunErrorHandler 0005  
                                  vfprintf@fmt 00DB                     _EUSART_FramingErrorHandler 00F1  
                                     ??___wmul 0009                         _EUSART_SetErrorHandler 2744  
                          ?_I2C_MasterClearIrq 0001                    __end_of_I2C_MasterGetRxData 27BA  
                        __end_of_I2C_DO_RX_ACK 276E                               _I2C_DO_SEND_STOP 276E  
                            ??_I2C_SetCallback 0009                                       ??_printf 0055  
                          I2C_Open@returnValue 0006                             _I2C_MasterSendNack 279C  
                                     ??_strlen 0007                       ?_I2C_MasterEnableRestart 0001  
                       fp__I2C_DO_SEND_RESTART 0000                    __end_of_EUSART_Transmit_ISR 22E2  
                        _I2C_DO_SEND_ADR_WRITE 26C4                                    __pbssCOMRAM 0057  
                                __pcstackBANK0 00CC                                  __pcstackBANK1 0100  
                               ??_I2C_DO_RESET 0005                            ?_I2C_MasterSendNack 0001  
                 __end_of_I2C_DO_SEND_ADR_READ 26E4                           ??_I2C_MasterClearIrq 0005  
                  __end_of_I2C_DO_ADDRESS_NACK 20AC                     __end_of_EUSART_Receive_ISR 1A9C  
                             _I2C_MasterIsNack 26A0                     __size_of_EUSART_Initialize 0076  
                    _I2C_DO_SEND_RESTART_WRITE 277E               _EUSART_RxDefaultInterruptHandler 00F3  
                             _I2C_MasterSetIrq 27B2                                      _atoi$2115 0014  
                                    _atoi$2116 0018                                      _atoi$2117 0016  
                                    __pnvBANK0 00ED                          _rd2RegCompleteHandler 2498  
                        __end_of_fsmStateTable 1021                   __end_of_EUSART_RxDataHandler 2574  
                       _PIN_MANAGER_Initialize 243C                          _wr2RegCompleteHandler 24F0  
                    ??_I2C_CallbackReturnReset 0010                    __end_of_I2C_MasterOperation 22A0  
                         ??_I2C_MasterSendNack 0005                       rd2RegCompleteHandler@ptr 000E  
                                    __pintcode 0008                                   _eusartRxHead 0058  
                                 _eusartTxHead 005A                                   _eusartRxTail 0057  
                       ??_I2C_MasterSendTxData 0005                                   _eusartTxTail 0059  
                 ??_INTERRUPT_InterruptManager 0001                              __size_of_vfprintf 0064  
                                 fp__I2C_DO_RX 0000                                   fp__I2C_DO_TX 0000  
                      _eusartTxBufferRemaining 00F7                   __size_of_I2C_DO_SEND_RESTART 0008  
                                  __smallconst 1000                                       ?_isalpha 0005  
                                     ?_isdigit 0005                        I2C_MasterOperation@read 0014  
                                     _I2C_Open 1C7E                                       ?_islower 0005  
                                     ?_isspace 0005                                       ?_isupper 0005  
                               __size_of_fputc 0096                                 __size_of_fputs 0044  
                      ??_rd1RegCompleteHandler 0010                                       ?_toupper 000B  
                               __size_of_putch 000A                           _INTERRUPT_Initialize 27AE  
                               _eusartRxBuffer 008C                        ??_wr1RegCompleteHandler 0010  
                               _eusartTxBuffer 0094                                 ___wmul@product 0009  
       EUSART_SetErrorHandler@interruptHandler 0005                                       _PIE1bits 000F9D  
                            _eusartRxLastError 00A9                                       i2u210_40 1A34  
                                     i2u210_41 1A30                                       i2u212_40 1A78  
                                     i2u211_48 1A4A                                       i2u212_41 1A74  
                                     i2u211_49 1A5C                                       i2u213_48 1A7E  
                                     i2u206_40 22B2                                       i2u230_40 0070  
                                     i2u213_49 1A92                                       i2u206_41 22AE  
                                     i2u230_41 006C                                       i2u207_40 22D4  
                                     i2u231_40 007E                                       i2u207_41 22D0  
                                     i2u231_41 007A            __size_of_INTERRUPT_InterruptManager 00A8  
                                     i2u208_40 19FE                                       i2u208_41 19FA  
                                     i2u232_48 0084                                       i2u232_49 0098  
                        MCP79410_get_date@year 001D                                       i2u209_48 1A14  
                                     i2u226_40 0028                                       i2u209_49 1A26  
                                     i2u226_41 0024                                       i2u227_40 0036  
                                     i2u227_41 0032                                       i2u228_40 0044  
                                     i2u228_41 0040                                       i2u229_48 004A  
                                     i2u229_49 005E                                       _PIR1bits 000F9E  
              ??_EUSART_SetFramingErrorHandler 0007                                       i2u187_40 256A  
                                     i2u187_41 2566                                       _PIR2bits 000FA1  
                        __end_of_I2C_MasterFsm 1FDC                                       _RCONbits 000FD0  
                  __end_of_I2C_DO_RX_NACK_STOP 2766           fp__EUSART_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART_DefaultOverrunErrorHandler 27A8     __size_of_EUSART_DefaultOverrunErrorHandler 0006  
          ??_EUSART_DefaultOverrunErrorHandler 0001             ?_EUSART_DefaultOverrunErrorHandler 0001  
            _EUSART_DefaultOverrunErrorHandler 27A2                __end_of_I2C_MasterEnableRestart 27CE  
                               fp__I2C_DO_IDLE 0000                                 fp__I2C_DO_RCEN 0000  
               __size_of_I2C_Read1ByteRegister 0074                  __end_of_I2C_Read1ByteRegister 1F6C  
                                    _vfpfcnvrt 104A                          __end_of_I2C_SetBuffer 25E8  
                                    _xtoa$2081 0035                                      _xtoa$2082 0037  
                            ___wmul@multiplier 0005                         ?_I2C_DO_SEND_ADR_WRITE 0001  
                     I2C_MasterSendTxData@data 0005                       wr2RegCompleteHandler@ptr 000E  
                                 _isspace$2142 000B                                     vfpfcnvrt@c 00D4  
                                  _INTCON2bits 000FF1                     ??_I2C_DO_SEND_RESTART_READ 0005  
                        ?_INTERRUPT_Initialize 0001                       ?_rdBlkRegCompleteHandler 000E  
                                   _I2C_Poller 2628                                     _I2C_Status 0060  
                                 ?_I2C_DO_IDLE 0001                                   ?_I2C_DO_RCEN 0001  
                       ?_rd2RegCompleteHandler 000E                          fp__EUSART_Receive_ISR 0000  
                             ??_I2C_MasterOpen 0005                         ?_wr2RegCompleteHandler 000E  
                             ??_I2C_MasterStop 0005                       ??_I2C_MasterWaitForEvent 0005  
                             ??_I2C_Initialize 0005                      fp__I2C_DO_RX_NACK_RESTART 0000  
                                     __Hrparam 0000                                     vfprintf@ap 00DD  
                                     __Lrparam 0000                                     vfprintf@fp 00D9  
                         __end_of_I2C_DO_RESET 26F0                          MCP79410_get_time@hour 0019  
                      ??_OSCILLATOR_Initialize 0005                            _EUSART_ErrorHandler 00ED  
                         _I2C_DO_SEND_ADR_READ 26D4                    ?_EUSART_DefaultErrorHandler 0001  
                                   ?_vfpfcnvrt 0049               I2C_Read1ByteRegister@returnValue 0018  
                              _I2C_MasterClose 27D6                  I2C_SetAddressNackCallback@ptr 000C  
                              I2C_Open@address 0005                            fp__I2C_DO_SEND_STOP 0000  
                              _I2C_MasterStart 27CE                                _I2C_MasterWrite 274E  
                             __size_of_isalpha 003C                               __size_of_isdigit 0038  
                         _EUSART_RxDataHandler 2548                               __size_of_islower 0038  
                             __size_of_isspace 0052                                       __ptext10 1BE8  
                                     __ptext11 2708                                       __ptext20 243C  
                                     __ptext12 216E                                       __ptext21 2712  
                                     __ptext13 2396                                       __ptext30 1D0C  
                                     __ptext22 27AE                                       __ptext14 2322  
                                     __ptext31 1FDC                                       __ptext23 268C  
                                     __ptext15 16BC                                       __ptext40 1F6C  
                                     __ptext32 1EF8                                       __ptext24 1E82  
                                     __ptext16 21C6                                       __ptext41 2046  
                                     __ptext33 2646                                       __ptext25 271C  
                                     __ptext17 23CE                                       __ptext50 26F0  
                                     __ptext42 26E4                                       __ptext34 1C7E  
                                     __ptext26 2726                                       __ptext18 259E  
                                     __ptext51 1B42                                       __ptext43 2756  
                                     __ptext35 25E8                                       __ptext27 2730  
                                     __ptext19 2676                                       __ptext60 2796  
                                     __ptext52 191C                                       __ptext44 275E  
                                     __ptext36 274E                                       __ptext28 273A  
                                     __ptext61 27B6                                       __ptext53 26C4  
                                     __ptext45 2766                                       __ptext37 225C  
                                     __ptext29 2744                                       __ptext70 24F0  
                                     __ptext62 279C                                       __ptext54 26D4  
                                     __ptext46 276E                                       __ptext38 2628  
                                     __ptext71 265E                                       __ptext63 27BA  
                                     __ptext55 26FC                                       __ptext47 2776  
                                     __ptext39 26B4                                       __ptext80 27DA  
                                     __ptext72 1E08                                       __ptext64 27BE  
                                     __ptext56 1D8C                                       __ptext48 277E  
                                     __ptext73 25C4                                       __ptext65 27C2  
                                     __ptext57 27B2                                       __ptext49 2786  
                                     __ptext82 22A0                                       __ptext74 27C6  
                                     __ptext66 22E2                                       __ptext58 26A0  
                                     __ptext83 19E0                                       __ptext75 27CA  
                                     __ptext67 246C                                       __ptext59 278E  
                                     __ptext84 27A2                                       __ptext76 27CE  
                                     __ptext68 2498                                       __ptext85 27DE  
                                     __ptext77 251C                                       __ptext69 24C4  
                                     __ptext86 27A8                                       __ptext78 27D2  
                                     __ptext87 2548                                       __ptext79 27D6  
                                     __ptext88 0000                               __size_of_isupper 0038  
          __end_of_I2C_SetDataCompleteCallback 2676                    _I2C_SetDataCompleteCallback 265E  
                      ?_I2C_DO_RX_NACK_RESTART 0001                               __size_of_toupper 005E  
                     __end_of_I2C_DO_SEND_STOP 2776                                  __size_of_atoi 019A  
                                __size_of_main 00A6                                  __size_of_xtoa 02D8  
                      ?_EUSART_SetErrorHandler 0005                                _I2C_SetCallback 1E08  
                ??_I2C_SetDataCompleteCallback 000E  EUSART_SetOverrunErrorHandler@interruptHandler 0005  
                                     int$flags 005B                          ?_I2C_DO_SEND_ADR_READ 0001  
                                     _vfprintf 20AC             __end_of_INTERRUPT_InterruptManager 00B0  
                   _INTERRUPT_InterruptManager 0008                                      printf@fmt 00DF  
        __end_of_EUSART_SetFramingErrorHandler 2744         __size_of_EUSART_SetFramingErrorHandler 000A  
                _EUSART_SetFramingErrorHandler 273A                       __end_of_I2C_MasterIsNack 26B4  
                     __end_of_I2C_MasterSetIrq 27B6                                 _vfpfcnvrt$2097 00D7  
                                   _INTCONbits 000FF2                          ?_EUSART_RxDataHandler 0001  
                                     isalpha@c 0005                                       isdigit@c 0005  
                       ??_INTERRUPT_Initialize 0005                 __end_of_I2C_DO_RX_NACK_RESTART 275E  
                                     intlevel2 0000                                    ?_I2C_Poller 0001  
                       fp__EUSART_Transmit_ISR 0000               __size_of_I2C_MasterEnableRestart 0004  
                                     islower@c 0005                                       isspace@c 0005  
                      ?_PIN_MANAGER_Initialize 0001                 __end_of_EUSART_SetErrorHandler 274E  
                          _I2C_DO_SEND_RESTART 2776                  __size_of_I2C_MasterDisableIrq 0004  
                                     isupper@c 0005                         fp__I2C_DO_ADDRESS_NACK 0000  
         __end_of_EUSART_SetRxInterruptHandler 2730          __size_of_EUSART_SetRxInterruptHandler 000A  
                 _EUSART_SetRxInterruptHandler 2726                __size_of_I2C_MasterWaitForEvent 0010  
                                     printf@ap 0102                             _EUSART_Receive_ISR 19E0  
EUSART_SetFramingErrorHandler@interruptHandler 0005                        __end_of_I2C_MasterClose 27DA  
                     __size_of_I2C_DO_TX_EMPTY 007C                             fp__I2C_DO_TX_EMPTY 0000  
                                  ??_vfpfcnvrt 004F                        __end_of_I2C_MasterStart 27D2  
                      __end_of_I2C_MasterWrite 2756                           ?_I2C_DO_SEND_RESTART 0001  
                          ?_EUSART_Receive_ISR 0001                  fp__EUSART_DefaultErrorHandler 0000  
                 __size_of_I2C_MasterGetRxData 0004                                       toupper@c 000B  
                                  _SSPCON1bits 000FC6                                    _SSPCON2bits 000FC5  
                  __size_of_I2C_MasterClearIrq 0004                             EUSART_Write@txData 0005  
                 __size_of_EUSART_Transmit_ISR 0042                        __end_of_I2C_SetCallback 1E82  
               __end_of_PIN_MANAGER_Initialize 246C                 __size_of_rd1RegCompleteHandler 002C  
                __end_of_rd1RegCompleteHandler 24F0                         __size_of_I2C_DO_RX_ACK 0008  
                             fp__I2C_DO_RX_ACK 0000                 __size_of_wr1RegCompleteHandler 002C  
                         ??_EUSART_Receive_ISR 0001                          __size_of_I2C_DO_RESET 000C  
                __end_of_wr1RegCompleteHandler 2498                   __size_of_I2C_DO_ADDRESS_NACK 0066  
                         __size_of_I2C_DO_IDLE 000C                           __size_of_I2C_DO_RCEN 000C  
                           __size_of_I2C_DO_RX 00A6                             __size_of_I2C_DO_TX 00C4  
