

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Mar 02 15:00:48 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,inline
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,inline
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,inline
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1,inline
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1,inline
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1,inline
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1,inline
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1,inline
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1,inline
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1,inline
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	text73,global,reloc=2,class=CODE,delta=1
    87                           	psect	text74,global,reloc=2,class=CODE,delta=1
    88                           	psect	text75,global,reloc=2,class=CODE,delta=1
    89                           	psect	text76,global,reloc=2,class=CODE,delta=1,inline
    90                           	psect	text77,global,reloc=2,class=CODE,delta=1,inline
    91                           	psect	text78,global,reloc=2,class=CODE,delta=1,inline
    92                           	psect	text79,global,reloc=2,class=CODE,delta=1
    93                           	psect	text80,global,reloc=2,class=CODE,delta=1,inline
    94                           	psect	text81,global,reloc=2,class=CODE,delta=1,inline
    95                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
    96                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    97                           	psect	text84,global,reloc=2,class=CODE,delta=1
    98                           	psect	text85,global,reloc=2,class=CODE,delta=1
    99                           	psect	text86,global,reloc=2,class=CODE,delta=1
   100                           	psect	text87,global,reloc=2,class=CODE,delta=1
   101                           	psect	text88,global,reloc=2,class=CODE,delta=1
   102                           	psect	text89,global,reloc=2,class=CODE,delta=1
   103                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   104                           	psect	text90,global,reloc=2,class=CODE,delta=1
   105                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   106                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   107                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   108                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   109  0000                     
   110                           ; Version 2.20
   111                           ; Generated 05/05/2020 GMT
   112                           ; 
   113                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution.
   127                           ; 
   128                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   129                           ;        software without specific prior written permission.
   130                           ; 
   131                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   132                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   133                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   134                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   135                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   136                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   137                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   138                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   139                           ; 
   140                           ; 
   141                           ; Code-generator required, PIC18F46K20 Definitions
   142                           ; 
   143                           ; SFR Addresses
   144  0000                     
   145                           	psect	smallconst
   146  001000                     __psmallconst:
   147                           	callstack 0
   148  001000  00                 	db	0
   149  001001                     _fsmStateTable:
   150                           	callstack 0
   151  001001  BE                 	db	low _I2C_DO_IDLE
   152  001002  27                 	db	high _I2C_DO_IDLE
   153  001003  96                 	db	low _I2C_DO_SEND_ADR_READ
   154  001004  27                 	db	high _I2C_DO_SEND_ADR_READ
   155  001005  86                 	db	low _I2C_DO_SEND_ADR_WRITE
   156  001006  27                 	db	high _I2C_DO_SEND_ADR_WRITE
   157  001007  1C                 	db	low _I2C_DO_TX
   158  001008  19                 	db	high _I2C_DO_TX
   159  001009  46                 	db	low _I2C_DO_RX
   160  00100A  1B                 	db	high _I2C_DO_RX
   161  00100B  B2                 	db	low _I2C_DO_RCEN
   162  00100C  27                 	db	high _I2C_DO_RCEN
   163  00100D  90                 	db	low _I2C_DO_TX_EMPTY
   164  00100E  1D                 	db	high _I2C_DO_TX_EMPTY
   165  00100F  48                 	db	low _I2C_DO_SEND_RESTART_READ
   166  001010  28                 	db	high _I2C_DO_SEND_RESTART_READ
   167  001011  40                 	db	low _I2C_DO_SEND_RESTART_WRITE
   168  001012  28                 	db	high _I2C_DO_SEND_RESTART_WRITE
   169  001013  38                 	db	low _I2C_DO_SEND_RESTART
   170  001014  28                 	db	high _I2C_DO_SEND_RESTART
   171  001015  30                 	db	low _I2C_DO_SEND_STOP
   172  001016  28                 	db	high _I2C_DO_SEND_STOP
   173  001017  28                 	db	low _I2C_DO_RX_ACK
   174  001018  28                 	db	high _I2C_DO_RX_ACK
   175  001019  20                 	db	low _I2C_DO_RX_NACK_STOP
   176  00101A  28                 	db	high _I2C_DO_RX_NACK_STOP
   177  00101B  18                 	db	low _I2C_DO_RX_NACK_RESTART
   178  00101C  28                 	db	high _I2C_DO_RX_NACK_RESTART
   179  00101D  A6                 	db	low _I2C_DO_RESET
   180  00101E  27                 	db	high _I2C_DO_RESET
   181  00101F  B8                 	db	low _I2C_DO_ADDRESS_NACK
   182  001020  20                 	db	high _I2C_DO_ADDRESS_NACK
   183  001021                     __end_of_fsmStateTable:
   184                           	callstack 0
   185  001021                     STR_1:
   186                           
   187                           ; BSR set to: 0
   188  001021  52                 	db	82	;'R'
   189  001022  54                 	db	84	;'T'
   190  001023  43                 	db	67	;'C'
   191  001024  3A                 	db	58	;':'
   192  001025  20                 	db	32
   193  001026  32                 	db	50	;'2'
   194  001027  30                 	db	48	;'0'
   195  001028  25                 	db	37
   196  001029  30                 	db	48	;'0'
   197  00102A  32                 	db	50	;'2'
   198  00102B  78                 	db	120	;'x'
   199  00102C  2D                 	db	45
   200  00102D  25                 	db	37
   201  00102E  30                 	db	48	;'0'
   202  00102F  32                 	db	50	;'2'
   203  001030  78                 	db	120	;'x'
   204  001031  2D                 	db	45
   205  001032  25                 	db	37
   206  001033  30                 	db	48	;'0'
   207  001034  32                 	db	50	;'2'
   208  001035  78                 	db	120	;'x'
   209  001036  20                 	db	32
   210  001037  25                 	db	37
   211  001038  30                 	db	48	;'0'
   212  001039  32                 	db	50	;'2'
   213  00103A  78                 	db	120	;'x'
   214  00103B  3A                 	db	58	;':'
   215  00103C  25                 	db	37
   216  00103D  30                 	db	48	;'0'
   217  00103E  32                 	db	50	;'2'
   218  00103F  78                 	db	120	;'x'
   219  001040  3A                 	db	58	;':'
   220  001041  25                 	db	37
   221  001042  30                 	db	48	;'0'
   222  001043  32                 	db	50	;'2'
   223  001044  78                 	db	120	;'x'
   224  001045  0D                 	db	13
   225  001046  0A                 	db	10
   226  001047  00                 	db	0
   227  001048  00                 	db	0	; dummy byte at the end
   228  0000                     
   229                           	psect	nvBANK0
   230  0000F2                     __pnvBANK0:
   231                           	callstack 0
   232  0000F2                     _EUSART_ErrorHandler:
   233                           	callstack 0
   234  0000F2                     	ds	2
   235  0000F4                     _EUSART_OverrunErrorHandler:
   236                           	callstack 0
   237  0000F4                     	ds	2
   238  0000F6                     _EUSART_FramingErrorHandler:
   239                           	callstack 0
   240  0000F6                     	ds	2
   241  0000F8                     _EUSART_RxDefaultInterruptHandler:
   242                           	callstack 0
   243  0000F8                     	ds	2
   244  0000FA                     _EUSART_TxDefaultInterruptHandler:
   245                           	callstack 0
   246  0000FA                     	ds	2
   247  0000FC                     _eusartTxBufferRemaining:
   248                           	callstack 0
   249  0000FC                     	ds	1
   250  0000                     _RCONbits	set	4048
   251  0000                     _RCREG	set	4014
   252  0000                     _RCSTAbits	set	4011
   253  0000                     _TXREG	set	4013
   254  0000                     _TXSTAbits	set	4012
   255  0000                     _SPBRGH	set	4016
   256  0000                     _SPBRG	set	4015
   257  0000                     _TXSTA	set	4012
   258  0000                     _RCSTA	set	4011
   259  0000                     _BAUDCON	set	4024
   260  0000                     _INTCONbits	set	4082
   261  0000                     _INTCON2bits	set	4081
   262  0000                     _WPUB	set	3964
   263  0000                     _ANSELH	set	3967
   264  0000                     _ANSEL	set	3966
   265  0000                     _TRISD	set	3989
   266  0000                     _TRISC	set	3988
   267  0000                     _TRISB	set	3987
   268  0000                     _TRISA	set	3986
   269  0000                     _TRISE	set	3990
   270  0000                     _LATC	set	3979
   271  0000                     _LATB	set	3978
   272  0000                     _LATA	set	3977
   273  0000                     _LATD	set	3980
   274  0000                     _LATE	set	3981
   275  0000                     _OSCTUNE	set	3995
   276  0000                     _OSCCON	set	4051
   277  0000                     _PIR1bits	set	3998
   278  0000                     _PIE1bits	set	3997
   279  0000                     _SSPSTATbits	set	4039
   280  0000                     _PIR2bits	set	4001
   281  0000                     _SSPCON2bits	set	4037
   282  0000                     _SSPBUF	set	4041
   283  0000                     _SSPCON1bits	set	4038
   284  0000                     _SSPADD	set	4040
   285  0000                     _SSPCON2	set	4037
   286  0000                     _SSPCON1	set	4038
   287  0000                     _SSPSTAT	set	4039
   288                           
   289                           ; #config settings
   290                           
   291                           	psect	cinit
   292  0026CC                     __pcinit:
   293                           	callstack 0
   294  0026CC                     start_initialization:
   295                           	callstack 0
   296  0026CC                     __initialization:
   297                           	callstack 0
   298                           
   299                           ; Clear objects allocated to BANK0 (113 bytes)
   300  0026CC  EE00  F060         	lfsr	0,__pbssBANK0
   301  0026D0  0E71               	movlw	113
   302  0026D2                     clear_0:
   303  0026D2  6AEE               	clrf	postinc0,c
   304  0026D4  06E8               	decf	wreg,f,c
   305  0026D6  E1FD               	bnz	clear_0
   306                           
   307                           ; Clear objects allocated to COMRAM (4 bytes)
   308  0026D8  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   309  0026DA  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   310  0026DC  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   311  0026DE  6A57               	clrf	__pbssCOMRAM& (0+255),c
   312  0026E0                     end_of_initialization:
   313                           	callstack 0
   314  0026E0                     __end_of__initialization:
   315                           	callstack 0
   316  0026E0  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   317  0026E2  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   318  0026E4  0100               	movlb	0
   319  0026E6  EF4E  F00D         	goto	_main	;jump to C main() function
   320                           
   321                           	psect	bssCOMRAM
   322  000057                     __pbssCOMRAM:
   323                           	callstack 0
   324  000057                     _eusartRxTail:
   325                           	callstack 0
   326  000057                     	ds	1
   327  000058                     _eusartRxHead:
   328                           	callstack 0
   329  000058                     	ds	1
   330  000059                     _eusartTxTail:
   331                           	callstack 0
   332  000059                     	ds	1
   333  00005A                     _eusartTxHead:
   334                           	callstack 0
   335  00005A                     	ds	1
   336                           
   337                           	psect	bssBANK0
   338  000060                     __pbssBANK0:
   339                           	callstack 0
   340  000060                     _I2C_Status:
   341                           	callstack 0
   342  000060                     	ds	36
   343  000084                     _eusartRxStatusBuffer:
   344                           	callstack 0
   345  000084                     	ds	8
   346  00008C                     _eusartRxBuffer:
   347                           	callstack 0
   348  00008C                     	ds	8
   349  000094                     _eusartTxBuffer:
   350                           	callstack 0
   351  000094                     	ds	8
   352  00009C                     _writeBuffer:
   353                           	callstack 0
   354  00009C                     	ds	3
   355  00009F                     _nout:
   356                           	callstack 0
   357  00009F                     	ds	2
   358  0000A1                     _width:
   359                           	callstack 0
   360  0000A1                     	ds	2
   361  0000A3                     _prec:
   362                           	callstack 0
   363  0000A3                     	ds	2
   364  0000A5                     _flags:
   365                           	callstack 0
   366  0000A5                     	ds	2
   367  0000A7                     _readBuffer:
   368                           	callstack 0
   369  0000A7                     	ds	1
   370  0000A8                     _Slave_Address:
   371                           	callstack 0
   372  0000A8                     	ds	1
   373  0000A9                     _eusartRxLastError:
   374                           	callstack 0
   375  0000A9                     	ds	1
   376  0000AA                     _eusartRxCount:
   377                           	callstack 0
   378  0000AA                     	ds	1
   379  0000AB                     _dbuf:
   380                           	callstack 0
   381  0000AB                     	ds	32
   382  0000CB                     _sec:
   383                           	callstack 0
   384  0000CB                     	ds	1
   385  0000CC                     _min:
   386                           	callstack 0
   387  0000CC                     	ds	1
   388  0000CD                     _hour:
   389                           	callstack 0
   390  0000CD                     	ds	1
   391  0000CE                     _year:
   392                           	callstack 0
   393  0000CE                     	ds	1
   394  0000CF                     _month:
   395                           	callstack 0
   396  0000CF                     	ds	1
   397  0000D0                     _day:
   398                           	callstack 0
   399  0000D0                     	ds	1
   400                           
   401                           	psect	cstackBANK1
   402  000100                     __pcstackBANK1:
   403                           	callstack 0
   404  000100                     	ds	2
   405  000102                     printf@ap:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x2
   409  000102                     	ds	2
   410                           
   411                           	psect	cstackBANK0
   412  0000D1                     __pcstackBANK0:
   413                           	callstack 0
   414  0000D1                     vfpfcnvrt@llu:
   415                           	callstack 0
   416                           
   417                           ; 8 bytes @ 0x0
   418  0000D1                     	ds	8
   419  0000D9                     vfpfcnvrt@c:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x8
   423  0000D9                     	ds	1
   424  0000DA                     vfpfcnvrt@done:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x9
   428  0000DA                     	ds	2
   429  0000DC                     _vfpfcnvrt$2102:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0xB
   433  0000DC                     	ds	2
   434  0000DE                     ?_vfprintf:
   435                           	callstack 0
   436  0000DE                     vfprintf@fp:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0xD
   440  0000DE                     	ds	2
   441  0000E0                     vfprintf@fmt:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0xF
   445  0000E0                     	ds	2
   446  0000E2                     vfprintf@ap:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x11
   450  0000E2                     	ds	2
   451  0000E4                     ?_printf:
   452                           	callstack 0
   453  0000E4                     printf@fmt:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x13
   457  0000E4                     	ds	14
   458                           
   459                           	psect	cstackCOMRAM
   460  000001                     __pcstackCOMRAM:
   461                           	callstack 0
   462  000001                     ??_INTERRUPT_InterruptManager:
   463  000001                     
   464                           ; 1 bytes @ 0x0
   465  000001                     	ds	4
   466  000005                     ?_strlen:
   467                           	callstack 0
   468  000005                     ?_isupper:
   469                           	callstack 0
   470  000005                     ?_isalpha:
   471                           	callstack 0
   472  000005                     ?_isdigit:
   473                           	callstack 0
   474  000005                     ?_isspace:
   475                           	callstack 0
   476  000005                     ?_islower:
   477                           	callstack 0
   478  000005                     ?___wmul:
   479                           	callstack 0
   480  000005                     I2C_Open@address:
   481                           	callstack 0
   482  000005                     I2C_Close@returnValue:
   483                           	callstack 0
   484  000005                     I2C_MasterSendTxData@data:
   485                           	callstack 0
   486  000005                     EUSART_Write@txData:
   487                           	callstack 0
   488  000005                     I2C_SetBuffer@buffer:
   489                           	callstack 0
   490  000005                     I2C_SetCallback@cb:
   491                           	callstack 0
   492  000005                     EUSART_SetFramingErrorHandler@interruptHandler:
   493                           	callstack 0
   494  000005                     EUSART_SetOverrunErrorHandler@interruptHandler:
   495                           	callstack 0
   496  000005                     EUSART_SetErrorHandler@interruptHandler:
   497                           	callstack 0
   498  000005                     EUSART_SetTxInterruptHandler@interruptHandler:
   499                           	callstack 0
   500  000005                     EUSART_SetRxInterruptHandler@interruptHandler:
   501                           	callstack 0
   502  000005                     ___wmul@multiplier:
   503                           	callstack 0
   504  000005                     isalpha@c:
   505                           	callstack 0
   506  000005                     isdigit@c:
   507                           	callstack 0
   508  000005                     isspace@c:
   509                           	callstack 0
   510  000005                     isupper@c:
   511                           	callstack 0
   512  000005                     strlen@s:
   513                           	callstack 0
   514  000005                     islower@c:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x4
   518  000005                     	ds	1
   519  000006                     I2C_Open@returnValue:
   520                           	callstack 0
   521  000006                     putch@txData:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0x5
   525  000006                     	ds	1
   526  000007                     ??_isupper:
   527  000007                     ??_isalpha:
   528  000007                     ??_isdigit:
   529  000007                     ??_isspace:
   530  000007                     ??_islower:
   531  000007                     I2C_SetBuffer@bufferSize:
   532                           	callstack 0
   533  000007                     I2C_SetCallback@ptr:
   534                           	callstack 0
   535  000007                     ___wmul@multiplicand:
   536                           	callstack 0
   537  000007                     fputc@c:
   538                           	callstack 0
   539  000007                     strlen@a:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x6
   543  000007                     	ds	2
   544  000009                     I2C_SetCallback@idx:
   545                           	callstack 0
   546  000009                     ___wmul@product:
   547                           	callstack 0
   548  000009                     fputc@fp:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x8
   552  000009                     	ds	1
   553  00000A                     I2C_SetDataCompleteCallback@cb:
   554                           	callstack 0
   555  00000A                     I2C_SetAddressNackCallback@cb:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x9
   559  00000A                     	ds	1
   560  00000B                     ??_fputc:
   561  00000B                     ?_toupper:
   562                           	callstack 0
   563  00000B                     _isspace$2147:
   564                           	callstack 0
   565  00000B                     toupper@c:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0xA
   569  00000B                     	ds	1
   570  00000C                     ?_atoi:
   571                           	callstack 0
   572  00000C                     I2C_SetDataCompleteCallback@ptr:
   573                           	callstack 0
   574  00000C                     I2C_SetAddressNackCallback@ptr:
   575                           	callstack 0
   576  00000C                     atoi@s:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0xB
   580  00000C                     	ds	1
   581  00000D                     ??_toupper:
   582                           
   583                           ; 1 bytes @ 0xC
   584  00000D                     	ds	1
   585  00000E                     ??_atoi:
   586  00000E                     rd1RegCompleteHandler@ptr:
   587                           	callstack 0
   588  00000E                     rd2RegCompleteHandler@ptr:
   589                           	callstack 0
   590  00000E                     wr1RegCompleteHandler@ptr:
   591                           	callstack 0
   592  00000E                     wr2RegCompleteHandler@ptr:
   593                           	callstack 0
   594  00000E                     rdBlkRegCompleteHandler@ptr:
   595                           	callstack 0
   596  00000E                     I2C_CallbackReturnReset@funPtr:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0xD
   600  00000E                     	ds	2
   601  000010                     ??_I2C_DO_TX:
   602  000010                     ??_I2C_DO_RX:
   603  000010                     ??_I2C_DO_TX_EMPTY:
   604  000010                     ??_I2C_DO_ADDRESS_NACK:
   605  000010                     fputs@s:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0xF
   609  000010                     	ds	1
   610  000011                     _toupper$2196:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x10
   614  000011                     	ds	1
   615  000012                     ??_I2C_MasterFsm:
   616  000012                     atoi@neg:
   617                           	callstack 0
   618  000012                     fputs@fp:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x11
   622  000012                     	ds	2
   623  000014                     I2C_MasterOperation@read:
   624                           	callstack 0
   625  000014                     fputs@c:
   626                           	callstack 0
   627  000014                     _atoi$2120:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x13
   631  000014                     	ds	1
   632  000015                     I2C_MasterOperation@returnValue:
   633                           	callstack 0
   634  000015                     fputs@i:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x14
   638  000015                     	ds	1
   639  000016                     I2C_Read1ByteRegister@reg:
   640                           	callstack 0
   641  000016                     I2C_Write1ByteRegister@reg:
   642                           	callstack 0
   643  000016                     _atoi$2122:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x15
   647  000016                     	ds	1
   648  000017                     ?_pad:
   649                           	callstack 0
   650  000017                     I2C_Read1ByteRegister@address:
   651                           	callstack 0
   652  000017                     I2C_Write1ByteRegister@data:
   653                           	callstack 0
   654  000017                     pad@fp:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x16
   658  000017                     	ds	1
   659  000018                     I2C_Read1ByteRegister@returnValue:
   660                           	callstack 0
   661  000018                     I2C_Write1ByteRegister@address:
   662                           	callstack 0
   663  000018                     _atoi$2121:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0x17
   667  000018                     	ds	1
   668  000019                     ??_MCP79410_init:
   669  000019                     MCP79410_get_date@day:
   670                           	callstack 0
   671  000019                     MCP79410_get_time@hour:
   672                           	callstack 0
   673  000019                     pad@buf:
   674                           	callstack 0
   675  000019                     atoi@n:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x18
   679  000019                     	ds	2
   680  00001B                     MCP79410_get_date@mouth:
   681                           	callstack 0
   682  00001B                     MCP79410_get_time@min:
   683                           	callstack 0
   684  00001B                     pad@p:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x1A
   688  00001B                     	ds	2
   689  00001D                     ??_pad:
   690  00001D                     MCP79410_get_date@year:
   691                           	callstack 0
   692  00001D                     MCP79410_get_time@sec:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x1C
   696  00001D                     	ds	1
   697  00001E                     pad@i:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x1D
   701  00001E                     	ds	1
   702  00001F                     
   703                           ; 1 bytes @ 0x1E
   704  00001F                     	ds	1
   705  000020                     pad@w:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x1F
   709  000020                     	ds	2
   710  000022                     ?_xtoa:
   711                           	callstack 0
   712  000022                     xtoa@fp:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x21
   716  000022                     	ds	2
   717  000024                     xtoa@d:
   718                           	callstack 0
   719                           
   720                           ; 8 bytes @ 0x23
   721  000024                     	ds	8
   722  00002C                     xtoa@x:
   723                           	callstack 0
   724                           
   725                           ; 1 bytes @ 0x2B
   726  00002C                     	ds	1
   727  00002D                     ??_xtoa:
   728                           
   729                           ; 1 bytes @ 0x2C
   730  00002D                     	ds	8
   731  000035                     _xtoa$2086:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x34
   735  000035                     	ds	2
   736  000037                     _xtoa$2087:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x36
   740  000037                     	ds	2
   741  000039                     xtoa@p:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x38
   745  000039                     	ds	2
   746  00003B                     xtoa@w:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x3A
   750  00003B                     	ds	2
   751  00003D                     xtoa@n:
   752                           	callstack 0
   753                           
   754                           ; 8 bytes @ 0x3C
   755  00003D                     	ds	8
   756  000045                     xtoa@i:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x44
   760  000045                     	ds	2
   761  000047                     xtoa@c:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x46
   765  000047                     	ds	2
   766  000049                     ?_vfpfcnvrt:
   767                           	callstack 0
   768  000049                     vfpfcnvrt@fp:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x48
   772  000049                     	ds	2
   773  00004B                     vfpfcnvrt@fmt:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x4A
   777  00004B                     	ds	2
   778  00004D                     vfpfcnvrt@ap:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x4C
   782  00004D                     	ds	2
   783  00004F                     ??_vfpfcnvrt:
   784                           
   785                           ; 1 bytes @ 0x4E
   786  00004F                     	ds	4
   787  000053                     vfprintf@cfmt:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x52
   791  000053                     	ds	2
   792  000055                     ??_main:
   793                           
   794                           ; 1 bytes @ 0x54
   795  000055                     	ds	2
   796                           
   797 ;;
   798 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   799 ;;
   800 ;; *************** function _main *****************
   801 ;; Defined at:
   802 ;;		line 58 in file "main.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   818 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   819 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   820 ;;Total ram usage:        2 bytes
   821 ;; Hardware stack levels required when called:   14
   822 ;; This function calls:
   823 ;;		_MCP79410_get_date
   824 ;;		_MCP79410_get_time
   825 ;;		_MCP79410_init
   826 ;;		_SYSTEM_Initialize
   827 ;;		_printf
   828 ;; This function is called by:
   829 ;;		Startup code after reset
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           	psect	text0
   834  001A9C                     __ptext0:
   835                           	callstack 0
   836  001A9C                     _main:
   837                           	callstack 17
   838  001A9C                     
   839                           ;main.c: 60:     SYSTEM_Initialize();
   840  001A9C  EC9C  F013         	call	_SYSTEM_Initialize	;wreg free
   841  001AA0                     
   842                           ;main.c: 61:     MCP79410_init();
   843  001AA0  EC45  F011         	call	_MCP79410_init	;wreg free
   844  001AA4                     
   845                           ;main.c: 68:     (INTCONbits.GIE = 1);
   846  001AA4  8EF2               	bsf	242,7,c	;volatile
   847  001AA6                     
   848                           ;main.c: 74:     (INTCONbits.PEIE = 1);
   849  001AA6  8CF2               	bsf	242,6,c	;volatile
   850  001AA8                     
   851                           ;main.c: 79:     day = 0x02;
   852  001AA8  0E02               	movlw	2
   853  001AAA  0100               	movlb	0	; () banked
   854  001AAC  6FD0               	movwf	_day& (0+255),b
   855  001AAE                     
   856                           ; BSR set to: 0
   857                           ;main.c: 80:     month = 0x03;
   858  001AAE  0E03               	movlw	3
   859  001AB0  6FCF               	movwf	_month& (0+255),b
   860  001AB2                     
   861                           ; BSR set to: 0
   862                           ;main.c: 81:     year = 0x21;
   863  001AB2  0E21               	movlw	33
   864  001AB4  6FCE               	movwf	_year& (0+255),b
   865  001AB6                     
   866                           ; BSR set to: 0
   867                           ;main.c: 82:     hour = 0x14;
   868  001AB6  0E14               	movlw	20
   869  001AB8  6FCD               	movwf	_hour& (0+255),b
   870  001ABA                     
   871                           ; BSR set to: 0
   872                           ;main.c: 83:     min = 0x00;
   873  001ABA  0E00               	movlw	0
   874  001ABC  6FCC               	movwf	_min& (0+255),b
   875  001ABE                     l4352:
   876                           
   877                           ;main.c: 87:         MCP79410_get_date(&day,&month,&year);
   878  001ABE  0ED0               	movlw	low _day
   879  001AC0  6E19               	movwf	MCP79410_get_date@day^0,c
   880  001AC2  0E00               	movlw	high _day
   881  001AC4  6E1A               	movwf	(MCP79410_get_date@day+1)^0,c
   882  001AC6  0ECF               	movlw	low _month
   883  001AC8  6E1B               	movwf	MCP79410_get_date@mouth^0,c
   884  001ACA  0E00               	movlw	high _month
   885  001ACC  6E1C               	movwf	(MCP79410_get_date@mouth+1)^0,c
   886  001ACE  0ECE               	movlw	low _year
   887  001AD0  6E1D               	movwf	MCP79410_get_date@year^0,c
   888  001AD2  0E00               	movlw	high _year
   889  001AD4  6E1E               	movwf	(MCP79410_get_date@year+1)^0,c
   890  001AD6  EC27  F010         	call	_MCP79410_get_date	;wreg free
   891  001ADA                     
   892                           ;main.c: 88:         MCP79410_get_time(&hour,&min,&sec);
   893  001ADA  0ECD               	movlw	low _hour
   894  001ADC  6E19               	movwf	MCP79410_get_time@hour^0,c
   895  001ADE  0E00               	movlw	high _hour
   896  001AE0  6E1A               	movwf	(MCP79410_get_time@hour+1)^0,c
   897  001AE2  0ECC               	movlw	low _min
   898  001AE4  6E1B               	movwf	MCP79410_get_time@min^0,c
   899  001AE6  0E00               	movlw	high _min
   900  001AE8  6E1C               	movwf	(MCP79410_get_time@min+1)^0,c
   901  001AEA  0ECB               	movlw	low _sec
   902  001AEC  6E1D               	movwf	MCP79410_get_time@sec^0,c
   903  001AEE  0E00               	movlw	high _sec
   904  001AF0  6E1E               	movwf	(MCP79410_get_time@sec+1)^0,c
   905  001AF2  EC88  F00E         	call	_MCP79410_get_time	;wreg free
   906  001AF6                     
   907                           ;main.c: 89:         printf("RTC: 20%02x-%02x-%02x %02x:%02x:%02x\r\n",year,month,day,ho
      +                          ur,min,sec);
   908  001AF6  0E21               	movlw	low STR_1
   909  001AF8  0100               	movlb	0	; () banked
   910  001AFA  6FE4               	movwf	printf@fmt& (0+255),b
   911  001AFC  0E10               	movlw	high STR_1
   912  001AFE  6FE5               	movwf	(printf@fmt+1)& (0+255),b
   913  001B00  C0CE  F0E6         	movff	_year,?_printf+2
   914  001B04  6BE7               	clrf	(?_printf+3)& (0+255),b
   915  001B06  C0CF  F0E8         	movff	_month,?_printf+4
   916  001B0A  6BE9               	clrf	(?_printf+5)& (0+255),b
   917  001B0C  C0D0  F0EA         	movff	_day,?_printf+6
   918  001B10  6BEB               	clrf	(?_printf+7)& (0+255),b
   919  001B12  C0CD  F0EC         	movff	_hour,?_printf+8
   920  001B16  6BED               	clrf	(?_printf+9)& (0+255),b
   921  001B18  C0CC  F0EE         	movff	_min,?_printf+10
   922  001B1C  6BEF               	clrf	(?_printf+11)& (0+255),b
   923  001B1E  C0CB  F0F0         	movff	_sec,?_printf+12
   924  001B22  6BF1               	clrf	(?_printf+13)& (0+255),b
   925  001B24  EC1B  F013         	call	_printf	;wreg free
   926  001B28                     
   927                           ;main.c: 90:      _delay((unsigned long)((1000)*(8000000/4000.0)));
   928  001B28  0E0B               	movlw	11
   929  001B2A  6E56               	movwf	(??_main+1)^0,c
   930  001B2C  0E26               	movlw	38
   931  001B2E  6E55               	movwf	??_main^0,c
   932  001B30  0E5E               	movlw	94
   933  001B32                     u2957:
   934  001B32  2EE8               	decfsz	wreg,f,c
   935  001B34  D7FE               	bra	u2957
   936  001B36  2E55               	decfsz	??_main^0,f,c
   937  001B38  D7FC               	bra	u2957
   938  001B3A  2E56               	decfsz	(??_main+1)^0,f,c
   939  001B3C  D7FA               	bra	u2957
   940  001B3E  EF5F  F00D         	goto	l4352
   941  001B42  EF58  F000         	goto	start
   942  001B46                     __end_of_main:
   943                           	callstack 0
   944                           
   945 ;; *************** function _printf *****************
   946 ;; Defined at:
   947 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\printf.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;  fmt             2   19[BANK0 ] PTR const unsigned char 
   950 ;;		 -> STR_1(39), 
   951 ;; Auto vars:     Size  Location     Type
   952 ;;  ap              2    2[BANK1 ] PTR void [1]
   953 ;;		 -> ?_printf(2), 
   954 ;;  ret             2    0        int 
   955 ;; Return value:  Size  Location     Type
   956 ;;                  2   19[BANK0 ] int 
   957 ;; Registers used:
   958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   964 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   965 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;      Totals:         0      14       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   968 ;;Total ram usage:       18 bytes
   969 ;; Hardware stack levels used:    1
   970 ;; Hardware stack levels required when called:   12
   971 ;; This function calls:
   972 ;;		_vfprintf
   973 ;; This function is called by:
   974 ;;		_main
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           	psect	text1
   979  002636                     __ptext1:
   980                           	callstack 0
   981  002636                     _printf:
   982                           	callstack 18
   983  002636  0EE6               	movlw	low (?_printf+2)
   984  002638  0101               	movlb	1	; () banked
   985  00263A  6F02               	movwf	printf@ap& (0+255),b
   986  00263C  0E00               	movlw	high (?_printf+2)
   987  00263E  6F03               	movwf	(printf@ap+1)& (0+255),b
   988  002640                     
   989                           ; BSR set to: 1
   990  002640  0E00               	movlw	0
   991  002642  0100               	movlb	0	; () banked
   992  002644  6FDE               	movwf	vfprintf@fp& (0+255),b
   993  002646  0E00               	movlw	0
   994  002648  6FDF               	movwf	(vfprintf@fp+1)& (0+255),b
   995  00264A  C0E4  F0E0         	movff	printf@fmt,vfprintf@fmt
   996  00264E  C0E5  F0E1         	movff	printf@fmt+1,vfprintf@fmt+1
   997  002652  0E02               	movlw	low printf@ap
   998  002654  6FE2               	movwf	vfprintf@ap& (0+255),b
   999  002656  0E01               	movlw	high printf@ap
  1000  002658  6FE3               	movwf	(vfprintf@ap+1)& (0+255),b
  1001  00265A  EC8F  F010         	call	_vfprintf	;wreg free
  1002  00265E  0012               	return		;funcret
  1003  002660                     __end_of_printf:
  1004                           	callstack 0
  1005                           
  1006 ;; *************** function _vfprintf *****************
  1007 ;; Defined at:
  1008 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
  1011 ;;		 -> NULL(0), 
  1012 ;;  fmt             2   15[BANK0 ] PTR const unsigned char 
  1013 ;;		 -> STR_1(39), 
  1014 ;;  ap              2   17[BANK0 ] PTR PTR void 
  1015 ;;		 -> printf@ap(2), 
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  1018 ;;		 -> STR_1(39), 
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  2   13[BANK0 ] int 
  1021 ;; Registers used:
  1022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1028 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1029 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;Total ram usage:        8 bytes
  1033 ;; Hardware stack levels used:    1
  1034 ;; Hardware stack levels required when called:   11
  1035 ;; This function calls:
  1036 ;;		_vfpfcnvrt
  1037 ;; This function is called by:
  1038 ;;		_printf
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text2
  1043  00211E                     __ptext2:
  1044                           	callstack 0
  1045  00211E                     _vfprintf:
  1046                           	callstack 18
  1047  00211E                     
  1048                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1049  00211E  C0E0  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  1050  002122  C0E1  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1051  002126                     
  1052                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  1053  002126  0E00               	movlw	0
  1054  002128  0100               	movlb	0	; () banked
  1055  00212A  6FA0               	movwf	(_nout+1)& (0+255),b
  1056  00212C  0E00               	movlw	0
  1057  00212E  6F9F               	movwf	_nout& (0+255),b
  1058                           
  1059                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1060  002130  EFAD  F010         	goto	l4326
  1061  002134                     l4324:
  1062                           
  1063                           ; BSR set to: 0
  1064                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1065  002134  C0DE  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  1066  002138  C0DF  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1067  00213C  0E53               	movlw	low vfprintf@cfmt
  1068  00213E  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  1069  002140  0E00               	movlw	high vfprintf@cfmt
  1070  002142  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1071  002144  C0E2  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1072  002148  C0E3  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1073  00214C  EC25  F008         	call	_vfpfcnvrt	;wreg free
  1074  002150  5049               	movf	?_vfpfcnvrt^0,w,c
  1075  002152  0100               	movlb	0	; () banked
  1076  002154  279F               	addwf	_nout& (0+255),f,b
  1077  002156  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
  1078  002158  23A0               	addwfc	(_nout+1)& (0+255),f,b
  1079  00215A                     l4326:
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1083  00215A  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  1084  00215E  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1085  002162                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1086  002162  6AF8               	clrf	tblptru,c
  1087  002164                     	endif
  1088  002164                     	if	0	;tblptru may be non-zero
  1089  002164                     	endif
  1090  002164  0008               	tblrd		*
  1091  002166  50F5               	movf	tablat,w,c
  1092  002168  0900               	iorlw	0
  1093  00216A  A4D8               	btfss	status,2,c
  1094  00216C  EFBA  F010         	goto	u2941
  1095  002170  EFBC  F010         	goto	u2940
  1096  002174                     u2941:
  1097  002174  EF9A  F010         	goto	l4324
  1098  002178                     u2940:
  1099  002178                     
  1100                           ; BSR set to: 0
  1101                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1102  002178  C09F  F0DE         	movff	_nout,?_vfprintf
  1103  00217C  C0A0  F0DF         	movff	_nout+1,?_vfprintf+1
  1104  002180                     
  1105                           ; BSR set to: 0
  1106  002180  0012               	return		;funcret
  1107  002182                     __end_of_vfprintf:
  1108                           	callstack 0
  1109                           
  1110 ;; *************** function _vfpfcnvrt *****************
  1111 ;; Defined at:
  1112 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  1115 ;;		 -> NULL(0), 
  1116 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  1117 ;;		 -> vfprintf@cfmt(2), 
  1118 ;;  ap              2   76[COMRAM] PTR PTR void 
  1119 ;;		 -> printf@ap(2), 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  llu             8    0[BANK0 ] unsigned long long 
  1122 ;;  ll              8    0        long long 
  1123 ;;  f               4    0        long long 
  1124 ;;  vp              3    0        PTR void 
  1125 ;;  ct              3    0        unsigned char [3]
  1126 ;;  cp              3    0        PTR unsigned char 
  1127 ;;  done            2    9[BANK0 ] int 
  1128 ;;  i               2    0        int 
  1129 ;;  c               1    8[BANK0 ] unsigned char 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  2   72[COMRAM] int 
  1132 ;; Registers used:
  1133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1139 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1140 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;      Totals:        10      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;Total ram usage:       23 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:   10
  1146 ;; This function calls:
  1147 ;;		_atoi
  1148 ;;		_fputc
  1149 ;;		_isdigit
  1150 ;;		_xtoa
  1151 ;; This function is called by:
  1152 ;;		_vfprintf
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text3
  1157  00104A                     __ptext3:
  1158                           	callstack 0
  1159  00104A                     _vfpfcnvrt:
  1160                           	callstack 18
  1161  00104A                     
  1162                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  1163  00104A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1164  00104E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1165  001052  CFDE FFF6          	movff	postinc2,tblptrl
  1166  001056  CFDD FFF7          	movff	postdec2,tblptrh
  1167  00105A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1168  00105A  6AF8               	clrf	tblptru,c
  1169  00105C                     	endif
  1170  00105C                     	if	0	;tblptru may be non-zero
  1171  00105C                     	endif
  1172  00105C  0008               	tblrd		*
  1173  00105E  50F5               	movf	tablat,w,c
  1174  001060  0A25               	xorlw	37
  1175  001062  A4D8               	btfss	status,2,c
  1176  001064  EF36  F008         	goto	u2831
  1177  001068  EF38  F008         	goto	u2830
  1178  00106C                     u2831:
  1179  00106C  EFD5  F009         	goto	l4306
  1180  001070                     u2830:
  1181  001070                     
  1182                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1183  001070  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1184  001074  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1185  001078  2ADE               	incf	postinc2,f,c
  1186  00107A  0E00               	movlw	0
  1187  00107C  22DD               	addwfc	postdec2,f,c
  1188  00107E                     
  1189                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1190  00107E  0E00               	movlw	0
  1191  001080  0100               	movlb	0	; () banked
  1192  001082  6FA2               	movwf	(_width+1)& (0+255),b
  1193  001084  0E00               	movlw	0
  1194  001086  6FA1               	movwf	_width& (0+255),b
  1195  001088  C0A1  F0A5         	movff	_width,_flags
  1196  00108C  C0A2  F0A6         	movff	_width+1,_flags+1
  1197  001090                     
  1198                           ; BSR set to: 0
  1199                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1200  001090  69A3               	setf	_prec& (0+255),b
  1201  001092  69A4               	setf	(_prec+1)& (0+255),b
  1202  001094                     
  1203                           ; BSR set to: 0
  1204                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  1205  001094  0E00               	movlw	0
  1206  001096  6FDB               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1207  001098  0E00               	movlw	0
  1208  00109A  6FDA               	movwf	vfpfcnvrt@done& (0+255),b
  1209                           
  1210                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1211  00109C  EF97  F008         	goto	l4254
  1212  0010A0                     l4228:
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  1216  0010A0  81A5               	bsf	_flags& (0+255),0,b
  1217  0010A2                     l4230:
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  1221  0010A2  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1222  0010A6  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1223  0010AA  2ADE               	incf	postinc2,f,c
  1224  0010AC  0E00               	movlw	0
  1225  0010AE  22DD               	addwfc	postdec2,f,c
  1226                           
  1227                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  1228  0010B0  EF97  F008         	goto	l4254
  1229  0010B4                     l4232:
  1230                           
  1231                           ; BSR set to: 0
  1232                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  1233  0010B4  83A5               	bsf	_flags& (0+255),1,b
  1234  0010B6  EF51  F008         	goto	l4230
  1235  0010BA                     l4236:
  1236                           
  1237                           ; BSR set to: 0
  1238                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  1239  0010BA  85A5               	bsf	_flags& (0+255),2,b
  1240  0010BC  EF51  F008         	goto	l4230
  1241  0010C0                     l4240:
  1242                           
  1243                           ; BSR set to: 0
  1244                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  1245  0010C0  87A5               	bsf	_flags& (0+255),3,b
  1246  0010C2  EF51  F008         	goto	l4230
  1247  0010C6                     l4244:
  1248                           
  1249                           ; BSR set to: 0
  1250                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  1251  0010C6  89A5               	bsf	_flags& (0+255),4,b
  1252  0010C8  EF51  F008         	goto	l4230
  1253  0010CC                     l4248:
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  1257  0010CC  0E00               	movlw	0
  1258  0010CE  6FDB               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1259  0010D0  0E01               	movlw	1
  1260  0010D2  6FDA               	movwf	vfpfcnvrt@done& (0+255),b
  1261                           
  1262                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  1263  0010D4  EF97  F008         	goto	l4254
  1264  0010D8                     l4252:
  1265                           
  1266                           ; BSR set to: 0
  1267  0010D8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1268  0010DC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1269  0010E0  CFDE FFF6          	movff	postinc2,tblptrl
  1270  0010E4  CFDD FFF7          	movff	postdec2,tblptrh
  1271  0010E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1272  0010E8  6AF8               	clrf	tblptru,c
  1273  0010EA                     	endif
  1274  0010EA                     	if	0	;tblptru may be non-zero
  1275  0010EA                     	endif
  1276  0010EA  0008               	tblrd		*
  1277  0010EC  50F5               	movf	tablat,w,c
  1278  0010EE  6E4F               	movwf	??_vfpfcnvrt^0,c
  1279  0010F0  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
  1280                           
  1281                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1282                           ; Switch size 1, requested type "simple"
  1283                           ; Number of cases is 1, Range of values is 0 to 0
  1284                           ; switch strategies available:
  1285                           ; Name         Instructions Cycles
  1286                           ; simple_byte            4     3 (average)
  1287                           ;	Chosen strategy is simple_byte
  1288  0010F2  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  1289  0010F4  0A00               	xorlw	0	; case 0
  1290  0010F6  B4D8               	btfsc	status,2,c
  1291  0010F8  EF80  F008         	goto	l4490
  1292  0010FC  EF66  F008         	goto	l4248
  1293  001100                     l4490:
  1294                           
  1295                           ; BSR set to: 0
  1296                           ; Switch size 1, requested type "simple"
  1297                           ; Number of cases is 5, Range of values is 32 to 48
  1298                           ; switch strategies available:
  1299                           ; Name         Instructions Cycles
  1300                           ; simple_byte           16     9 (average)
  1301                           ;	Chosen strategy is simple_byte
  1302  001100  504F               	movf	??_vfpfcnvrt^0,w,c
  1303  001102  0A20               	xorlw	32	; case 32
  1304  001104  B4D8               	btfsc	status,2,c
  1305  001106  EF60  F008         	goto	l4240
  1306  00110A  0A03               	xorlw	3	; case 35
  1307  00110C  B4D8               	btfsc	status,2,c
  1308  00110E  EF63  F008         	goto	l4244
  1309  001112  0A08               	xorlw	8	; case 43
  1310  001114  B4D8               	btfsc	status,2,c
  1311  001116  EF5D  F008         	goto	l4236
  1312  00111A  0A06               	xorlw	6	; case 45
  1313  00111C  B4D8               	btfsc	status,2,c
  1314  00111E  EF50  F008         	goto	l4228
  1315  001122  0A1D               	xorlw	29	; case 48
  1316  001124  B4D8               	btfsc	status,2,c
  1317  001126  EF5A  F008         	goto	l4232
  1318  00112A  EF66  F008         	goto	l4248
  1319  00112E                     l4254:
  1320                           
  1321                           ; BSR set to: 0
  1322                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1323  00112E  51DA               	movf	vfpfcnvrt@done& (0+255),w,b
  1324  001130  11DB               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1325  001132  B4D8               	btfsc	status,2,c
  1326  001134  EF9E  F008         	goto	u2841
  1327  001138  EFA0  F008         	goto	u2840
  1328  00113C                     u2841:
  1329  00113C  EF6C  F008         	goto	l4252
  1330  001140                     u2840:
  1331  001140                     
  1332                           ; BSR set to: 0
  1333                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  1334  001140  A1A5               	btfss	_flags& (0+255),0,b
  1335  001142  EFA5  F008         	goto	u2851
  1336  001146  EFA7  F008         	goto	u2850
  1337  00114A                     u2851:
  1338  00114A  EFA8  F008         	goto	l4258
  1339  00114E                     u2850:
  1340  00114E                     
  1341                           ; BSR set to: 0
  1342                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  1343  00114E  93A5               	bcf	_flags& (0+255),1,b
  1344  001150                     l4258:
  1345                           
  1346                           ; BSR set to: 0
  1347                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  1348  001150  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1349  001154  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1350  001158  CFDE FFF6          	movff	postinc2,tblptrl
  1351  00115C  CFDD FFF7          	movff	postdec2,tblptrh
  1352  001160                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1353  001160  6AF8               	clrf	tblptru,c
  1354  001162                     	endif
  1355  001162                     	if	0	;tblptru may be non-zero
  1356  001162                     	endif
  1357  001162  0008               	tblrd		*
  1358  001164  50F5               	movf	tablat,w,c
  1359  001166  0A2A               	xorlw	42
  1360  001168  A4D8               	btfss	status,2,c
  1361  00116A  EFB9  F008         	goto	u2861
  1362  00116E  EFBB  F008         	goto	u2860
  1363  001172                     u2861:
  1364  001172  EFE4  F008         	goto	l4266
  1365  001176                     u2860:
  1366  001176                     
  1367                           ; BSR set to: 0
  1368                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  1369  001176  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1370  00117A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1371  00117E  2ADE               	incf	postinc2,f,c
  1372  001180  0E00               	movlw	0
  1373  001182  22DD               	addwfc	postdec2,f,c
  1374                           
  1375                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1376  001184  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1377  001188  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1378  00118C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  1379  001190  0E02               	movlw	2
  1380  001192  26DE               	addwf	postinc2,f,c
  1381  001194  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  1382  001198  0E00               	movlw	0
  1383  00119A  22DD               	addwfc	postdec2,f,c
  1384  00119C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1385  0011A0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1386  0011A4  CFDE F0A1          	movff	postinc2,_width
  1387  0011A8  CFDD F0A2          	movff	postdec2,_width+1
  1388  0011AC                     
  1389                           ; BSR set to: 0
  1390                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  1391  0011AC  BFA2               	btfsc	(_width+1)& (0+255),7,b
  1392  0011AE  EFDD  F008         	goto	u2870
  1393  0011B2  EFDB  F008         	goto	u2871
  1394  0011B6                     u2871:
  1395  0011B6  EF29  F009         	goto	l4276
  1396  0011BA                     u2870:
  1397  0011BA                     
  1398                           ; BSR set to: 0
  1399                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  1400  0011BA  81A5               	bsf	_flags& (0+255),0,b
  1401                           
  1402                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  1403  0011BC  6DA1               	negf	_width& (0+255),b
  1404  0011BE  1FA2               	comf	(_width+1)& (0+255),f,b
  1405  0011C0  B0D8               	btfsc	status,0,c
  1406  0011C2  2BA2               	incf	(_width+1)& (0+255),f,b
  1407  0011C4  EF29  F009         	goto	l4276
  1408  0011C8                     l4266:
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  1412  0011C8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1413  0011CC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1414  0011D0  CFDE F00C          	movff	postinc2,atoi@s
  1415  0011D4  CFDD F00D          	movff	postdec2,atoi@s+1
  1416  0011D8  EC5E  F00B         	call	_atoi	;wreg free
  1417  0011DC  C00C  F0A1         	movff	?_atoi,_width
  1418  0011E0  C00D  F0A2         	movff	?_atoi+1,_width+1
  1419                           
  1420                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1421  0011E4  EFFB  F008         	goto	l4270
  1422  0011E8                     l4268:
  1423                           
  1424                           ; BSR set to: 0
  1425                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  1426  0011E8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1427  0011EC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1428  0011F0  2ADE               	incf	postinc2,f,c
  1429  0011F2  0E00               	movlw	0
  1430  0011F4  22DD               	addwfc	postdec2,f,c
  1431  0011F6                     l4270:
  1432  0011F6  0ED0               	movlw	208
  1433  0011F8  6E4F               	movwf	??_vfpfcnvrt^0,c
  1434  0011FA  0EFF               	movlw	255
  1435  0011FC  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
  1436  0011FE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1437  001202  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1438  001206  CFDE FFF6          	movff	postinc2,tblptrl
  1439  00120A  CFDD FFF7          	movff	postdec2,tblptrh
  1440  00120E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1441  00120E  6AF8               	clrf	tblptru,c
  1442  001210                     	endif
  1443  001210                     	if	0	;tblptru may be non-zero
  1444  001210                     	endif
  1445  001210  0008               	tblrd		*
  1446  001212  50F5               	movf	tablat,w,c
  1447  001214  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
  1448  001216  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
  1449  001218  504F               	movf	??_vfpfcnvrt^0,w,c
  1450  00121A  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1451  00121C  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  1452  00121E  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1453  001220  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  1454  001222  E10A               	bnz	u2880
  1455  001224  0E0A               	movlw	10
  1456  001226  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1457  001228  A0D8               	btfss	status,0,c
  1458  00122A  EF19  F009         	goto	u2881
  1459  00122E  EF1C  F009         	goto	u2880
  1460  001232                     u2881:
  1461  001232  0E01               	movlw	1
  1462  001234  EF1D  F009         	goto	u2890
  1463  001238                     u2880:
  1464  001238  0E00               	movlw	0
  1465  00123A                     u2890:
  1466  00123A  0100               	movlb	0	; () banked
  1467  00123C  6FDC               	movwf	_vfpfcnvrt$2102& (0+255),b
  1468  00123E  6BDD               	clrf	(_vfpfcnvrt$2102+1)& (0+255),b
  1469  001240                     
  1470                           ; BSR set to: 0
  1471  001240  51DC               	movf	_vfpfcnvrt$2102& (0+255),w,b
  1472  001242  11DD               	iorwf	(_vfpfcnvrt$2102+1)& (0+255),w,b
  1473  001244  A4D8               	btfss	status,2,c
  1474  001246  EF27  F009         	goto	u2901
  1475  00124A  EF29  F009         	goto	u2900
  1476  00124E                     u2901:
  1477  00124E  EFF4  F008         	goto	l4268
  1478  001252                     u2900:
  1479  001252                     l4276:
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1483  001252  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1484  001256  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1485  00125A  CFDE FFF6          	movff	postinc2,tblptrl
  1486  00125E  CFDD FFF7          	movff	postdec2,tblptrh
  1487  001262                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1488  001262  6AF8               	clrf	tblptru,c
  1489  001264                     	endif
  1490  001264                     	if	0	;tblptru may be non-zero
  1491  001264                     	endif
  1492  001264  0008               	tblrd		*
  1493  001266  50F5               	movf	tablat,w,c
  1494  001268  0A78               	xorlw	120
  1495  00126A  B4D8               	btfsc	status,2,c
  1496  00126C  EF3A  F009         	goto	u2911
  1497  001270  EF3C  F009         	goto	u2910
  1498  001274                     u2911:
  1499  001274  EF4F  F009         	goto	l4280
  1500  001278                     u2910:
  1501  001278                     
  1502                           ; BSR set to: 0
  1503  001278  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1504  00127C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1505  001280  CFDE FFF6          	movff	postinc2,tblptrl
  1506  001284  CFDD FFF7          	movff	postdec2,tblptrh
  1507  001288                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1508  001288  6AF8               	clrf	tblptru,c
  1509  00128A                     	endif
  1510  00128A                     	if	0	;tblptru may be non-zero
  1511  00128A                     	endif
  1512  00128A  0008               	tblrd		*
  1513  00128C  50F5               	movf	tablat,w,c
  1514  00128E  0A58               	xorlw	88
  1515  001290  A4D8               	btfss	status,2,c
  1516  001292  EF4D  F009         	goto	u2921
  1517  001296  EF4F  F009         	goto	u2920
  1518  00129A                     u2921:
  1519  00129A  EF9E  F009         	goto	l4290
  1520  00129E                     u2920:
  1521  00129E                     l4280:
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  1525  00129E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1526  0012A2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1527  0012A6  CFDE FFF6          	movff	postinc2,tblptrl
  1528  0012AA  CFDD FFF7          	movff	postdec2,tblptrh
  1529  0012AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1530  0012AE  6AF8               	clrf	tblptru,c
  1531  0012B0                     	endif
  1532  0012B0                     	if	0	;tblptru may be non-zero
  1533  0012B0                     	endif
  1534  0012B0  0008               	tblrd		*
  1535  0012B2  CFF5 F0D9          	movff	tablat,vfpfcnvrt@c
  1536  0012B6                     
  1537                           ; BSR set to: 0
  1538                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  1539  0012B6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1540  0012BA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1541  0012BE  2ADE               	incf	postinc2,f,c
  1542  0012C0  0E00               	movlw	0
  1543  0012C2  22DD               	addwfc	postdec2,f,c
  1544  0012C4                     
  1545                           ; BSR set to: 0
  1546                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1547  0012C4  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1548  0012C8  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1549  0012CC  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  1550  0012D0  0E02               	movlw	2
  1551  0012D2  26DE               	addwf	postinc2,f,c
  1552  0012D4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  1553  0012D8  0E00               	movlw	0
  1554  0012DA  22DD               	addwfc	postdec2,f,c
  1555  0012DC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1556  0012E0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1557  0012E4  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  1558  0012E8  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  1559  0012EC  C051  F0D1         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1560  0012F0  C052  F0D2         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1561  0012F4  6BD3               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  1562  0012F6  6BD4               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  1563  0012F8  6BD5               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  1564  0012FA  6BD6               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  1565  0012FC  6BD7               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  1566  0012FE  6BD8               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  1567  001300                     
  1568                           ; BSR set to: 0
  1569                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1280:            
      +                           return xtoa(fp, llu, c);
  1570  001300  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  1571  001304  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1572  001308  C0D1  F024         	movff	vfpfcnvrt@llu,xtoa@d
  1573  00130C  C0D2  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1574  001310  C0D3  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1575  001314  C0D4  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1576  001318  C0D5  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1577  00131C  C0D6  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1578  001320  C0D7  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1579  001324  C0D8  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1580  001328  C0D9  F02C         	movff	vfpfcnvrt@c,xtoa@x
  1581  00132C  ECF2  F009         	call	_xtoa	;wreg free
  1582  001330  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  1583  001334  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1584  001338  EFF1  F009         	goto	l1509
  1585  00133C                     l4290:
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  1589  00133C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1590  001340  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1591  001344  CFDE FFF6          	movff	postinc2,tblptrl
  1592  001348  CFDD FFF7          	movff	postdec2,tblptrh
  1593  00134C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1594  00134C  6AF8               	clrf	tblptru,c
  1595  00134E                     	endif
  1596  00134E                     	if	0	;tblptru may be non-zero
  1597  00134E                     	endif
  1598  00134E  0008               	tblrd		*
  1599  001350  50F5               	movf	tablat,w,c
  1600  001352  0A25               	xorlw	37
  1601  001354  A4D8               	btfss	status,2,c
  1602  001356  EFAF  F009         	goto	u2931
  1603  00135A  EFB1  F009         	goto	u2930
  1604  00135E                     u2931:
  1605  00135E  EFC8  F009         	goto	l4300
  1606  001362                     u2930:
  1607  001362                     
  1608                           ; BSR set to: 0
  1609                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  1610  001362  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1611  001366  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1612  00136A  2ADE               	incf	postinc2,f,c
  1613  00136C  0E00               	movlw	0
  1614  00136E  22DD               	addwfc	postdec2,f,c
  1615  001370                     
  1616                           ; BSR set to: 0
  1617                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  1618  001370  0E00               	movlw	0
  1619  001372  6E08               	movwf	(fputc@c+1)^0,c
  1620  001374  0E25               	movlw	37
  1621  001376  6E07               	movwf	fputc@c^0,c
  1622  001378  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1623  00137C  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1624  001380  ECF6  F00D         	call	_fputc	;wreg free
  1625  001384                     l4296:
  1626                           
  1627                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  1628  001384  0E00               	movlw	0
  1629  001386  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  1630  001388  0E01               	movlw	1
  1631  00138A  6E49               	movwf	?_vfpfcnvrt^0,c
  1632  00138C  EFF1  F009         	goto	l1509
  1633  001390                     l4300:
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  1637  001390  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1638  001394  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1639  001398  2ADE               	incf	postinc2,f,c
  1640  00139A  0E00               	movlw	0
  1641  00139C  22DD               	addwfc	postdec2,f,c
  1642  00139E                     
  1643                           ; BSR set to: 0
  1644                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  1645  00139E  0E00               	movlw	0
  1646  0013A0  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  1647  0013A2  0E00               	movlw	0
  1648  0013A4  6E49               	movwf	?_vfpfcnvrt^0,c
  1649  0013A6  EFF1  F009         	goto	l1509
  1650  0013AA                     l4306:
  1651                           
  1652                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  1653  0013AA  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1654  0013AE  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1655  0013B2  CFDE FFF6          	movff	postinc2,tblptrl
  1656  0013B6  CFDD FFF7          	movff	postdec2,tblptrh
  1657  0013BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1658  0013BA  6AF8               	clrf	tblptru,c
  1659  0013BC                     	endif
  1660  0013BC                     	if	0	;tblptru may be non-zero
  1661  0013BC                     	endif
  1662  0013BC  0008               	tblrd		*
  1663  0013BE  50F5               	movf	tablat,w,c
  1664  0013C0  6E07               	movwf	fputc@c^0,c
  1665  0013C2  6A08               	clrf	(fputc@c+1)^0,c
  1666  0013C4  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1667  0013C8  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1668  0013CC  ECF6  F00D         	call	_fputc	;wreg free
  1669  0013D0                     
  1670                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  1671  0013D0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1672  0013D4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1673  0013D8  2ADE               	incf	postinc2,f,c
  1674  0013DA  0E00               	movlw	0
  1675  0013DC  22DD               	addwfc	postdec2,f,c
  1676  0013DE  EFC2  F009         	goto	l4296
  1677  0013E2                     l1509:
  1678  0013E2  0012               	return		;funcret
  1679  0013E4                     __end_of_vfpfcnvrt:
  1680                           	callstack 0
  1681                           
  1682 ;; *************** function _xtoa *****************
  1683 ;; Defined at:
  1684 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  1687 ;;		 -> NULL(0), 
  1688 ;;  d               8   35[COMRAM] unsigned long long 
  1689 ;;  x               1   43[COMRAM] unsigned char 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  n               8   60[COMRAM] unsigned long long 
  1692 ;;  c               2   70[COMRAM] int 
  1693 ;;  i               2   68[COMRAM] int 
  1694 ;;  w               2   58[COMRAM] int 
  1695 ;;  p               2   56[COMRAM] int 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  2   33[COMRAM] int 
  1698 ;; Registers used:
  1699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1705 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1706 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1709 ;;Total ram usage:       39 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    9
  1712 ;; This function calls:
  1713 ;;		_isalpha
  1714 ;;		_isupper
  1715 ;;		_pad
  1716 ;;		_toupper
  1717 ;; This function is called by:
  1718 ;;		_vfpfcnvrt
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text4
  1723  0013E4                     __ptext4:
  1724                           	callstack 0
  1725  0013E4                     _xtoa:
  1726                           	callstack 18
  1727  0013E4                     
  1728                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  1729  0013E4  0100               	movlb	0	; () banked
  1730  0013E6  BFA4               	btfsc	(_prec+1)& (0+255),7,b
  1731  0013E8  EFF8  F009         	goto	u2591
  1732  0013EC  EFFA  F009         	goto	u2590
  1733  0013F0                     u2591:
  1734  0013F0  EFFB  F009         	goto	l4114
  1735  0013F4                     u2590:
  1736  0013F4                     
  1737                           ; BSR set to: 0
  1738                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  1739  0013F4  93A5               	bcf	_flags& (0+255),1,b
  1740  0013F6                     l4114:
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  1744  0013F6  BFA4               	btfsc	(_prec+1)& (0+255),7,b
  1745  0013F8  EF08  F00A         	goto	u2600
  1746  0013FC  51A4               	movf	(_prec+1)& (0+255),w,b
  1747  0013FE  E106               	bnz	u2601
  1748  001400  05A3               	decf	_prec& (0+255),w,b
  1749  001402  B0D8               	btfsc	status,0,c
  1750  001404  EF06  F00A         	goto	u2601
  1751  001408  EF08  F00A         	goto	u2600
  1752  00140C                     u2601:
  1753  00140C  EF0E  F00A         	goto	l1455
  1754  001410                     u2600:
  1755  001410                     
  1756                           ; BSR set to: 0
  1757  001410  0E00               	movlw	0
  1758  001412  6E3A               	movwf	(xtoa@p+1)^0,c
  1759  001414  0E01               	movlw	1
  1760  001416  6E39               	movwf	xtoa@p^0,c
  1761  001418  EF12  F00A         	goto	l1457
  1762  00141C                     l1455:
  1763                           
  1764                           ; BSR set to: 0
  1765  00141C  C0A3  F039         	movff	_prec,xtoa@p
  1766  001420  C0A4  F03A         	movff	_prec+1,xtoa@p+1
  1767  001424                     l1457:
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  1771  001424  C0A1  F03B         	movff	_width,xtoa@w
  1772  001428  C0A2  F03C         	movff	_width+1,xtoa@w+1
  1773                           
  1774                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  1775  00142C  A9A5               	btfss	_flags& (0+255),4,b
  1776  00142E  EF1B  F00A         	goto	u2611
  1777  001432  EF1D  F00A         	goto	u2610
  1778  001436                     u2611:
  1779  001436  EF21  F00A         	goto	l4120
  1780  00143A                     u2610:
  1781  00143A                     
  1782                           ; BSR set to: 0
  1783                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  1784  00143A  0EFE               	movlw	254
  1785  00143C  263B               	addwf	xtoa@w^0,f,c
  1786  00143E  0EFF               	movlw	255
  1787  001440  223C               	addwfc	(xtoa@w+1)^0,f,c
  1788  001442                     l4120:
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  1792  001442  C024  F03D         	movff	xtoa@d,xtoa@n
  1793  001446  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  1794  00144A  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  1795  00144E  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  1796  001452  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  1797  001456  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  1798  00145A  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  1799  00145E  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  1800  001462                     
  1801                           ; BSR set to: 0
  1802                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  1803  001462  0E00               	movlw	0
  1804  001464  6E46               	movwf	(xtoa@i+1)^0,c
  1805  001466  0E1F               	movlw	31
  1806  001468  6E45               	movwf	xtoa@i^0,c
  1807  00146A                     
  1808                           ; BSR set to: 0
  1809                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  1810  00146A  0E00               	movlw	0
  1811  00146C  6FCA               	movwf	(_dbuf+31)& (0+255),b
  1812                           
  1813                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1814  00146E  EFEC  F00A         	goto	l4156
  1815  001472                     l4126:
  1816                           
  1817                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  1818  001472  0645               	decf	xtoa@i^0,f,c
  1819  001474  A0D8               	btfss	status,0,c
  1820  001476  0646               	decf	(xtoa@i+1)^0,f,c
  1821  001478                     
  1822                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  1823  001478  0E0F               	movlw	15
  1824  00147A  143D               	andwf	xtoa@n^0,w,c
  1825  00147C  6E47               	movwf	xtoa@c^0,c
  1826  00147E  6A48               	clrf	(xtoa@c+1)^0,c
  1827  001480                     
  1828                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  1829  001480  BE48               	btfsc	(xtoa@c+1)^0,7,c
  1830  001482  EF4C  F00A         	goto	u2621
  1831  001486  5048               	movf	(xtoa@c+1)^0,w,c
  1832  001488  E109               	bnz	u2620
  1833  00148A  0E0A               	movlw	10
  1834  00148C  5C47               	subwf	xtoa@c^0,w,c
  1835  00148E  A0D8               	btfss	status,0,c
  1836  001490  EF4C  F00A         	goto	u2621
  1837  001494  EF4E  F00A         	goto	u2620
  1838  001498                     u2621:
  1839  001498  EF56  F00A         	goto	l4134
  1840  00149C                     u2620:
  1841  00149C  0E57               	movlw	87
  1842  00149E  2447               	addwf	xtoa@c^0,w,c
  1843  0014A0  6E47               	movwf	xtoa@c^0,c
  1844  0014A2  0E00               	movlw	0
  1845  0014A4  2048               	addwfc	(xtoa@c+1)^0,w,c
  1846  0014A6  6E48               	movwf	(xtoa@c+1)^0,c
  1847  0014A8  EF5C  F00A         	goto	l1464
  1848  0014AC                     l4134:
  1849  0014AC  0E30               	movlw	48
  1850  0014AE  2447               	addwf	xtoa@c^0,w,c
  1851  0014B0  6E47               	movwf	xtoa@c^0,c
  1852  0014B2  0E00               	movlw	0
  1853  0014B4  2048               	addwfc	(xtoa@c+1)^0,w,c
  1854  0014B6  6E48               	movwf	(xtoa@c+1)^0,c
  1855  0014B8                     l1464:
  1856  0014B8  0EBF               	movlw	191
  1857  0014BA  6E2D               	movwf	??_xtoa^0,c
  1858  0014BC  0EFF               	movlw	255
  1859  0014BE  6E2E               	movwf	(??_xtoa+1)^0,c
  1860  0014C0  502C               	movf	xtoa@x^0,w,c
  1861  0014C2  6E2F               	movwf	(??_xtoa+2)^0,c
  1862  0014C4  6A30               	clrf	(??_xtoa+3)^0,c
  1863  0014C6  502D               	movf	??_xtoa^0,w,c
  1864  0014C8  262F               	addwf	(??_xtoa+2)^0,f,c
  1865  0014CA  502E               	movf	(??_xtoa+1)^0,w,c
  1866  0014CC  2230               	addwfc	(??_xtoa+3)^0,f,c
  1867  0014CE  5030               	movf	(??_xtoa+3)^0,w,c
  1868  0014D0  E10A               	bnz	u2630
  1869  0014D2  0E1A               	movlw	26
  1870  0014D4  5C2F               	subwf	(??_xtoa+2)^0,w,c
  1871  0014D6  A0D8               	btfss	status,0,c
  1872  0014D8  EF70  F00A         	goto	u2631
  1873  0014DC  EF73  F00A         	goto	u2630
  1874  0014E0                     u2631:
  1875  0014E0  0E01               	movlw	1
  1876  0014E2  EF74  F00A         	goto	u2640
  1877  0014E6                     u2630:
  1878  0014E6  0E00               	movlw	0
  1879  0014E8                     u2640:
  1880  0014E8  6E35               	movwf	_xtoa$2086^0,c
  1881  0014EA  6A36               	clrf	(_xtoa$2086+1)^0,c
  1882  0014EC  5035               	movf	_xtoa$2086^0,w,c
  1883  0014EE  1036               	iorwf	(_xtoa$2086+1)^0,w,c
  1884  0014F0  B4D8               	btfsc	status,2,c
  1885  0014F2  EF7D  F00A         	goto	u2651
  1886  0014F6  EF7F  F00A         	goto	u2650
  1887  0014FA                     u2651:
  1888  0014FA  EFAF  F00A         	goto	l4148
  1889  0014FE                     u2650:
  1890  0014FE  0E9F               	movlw	159
  1891  001500  6E2D               	movwf	??_xtoa^0,c
  1892  001502  0EFF               	movlw	255
  1893  001504  6E2E               	movwf	(??_xtoa+1)^0,c
  1894  001506  0E20               	movlw	32
  1895  001508  1047               	iorwf	xtoa@c^0,w,c
  1896  00150A  6E2F               	movwf	(??_xtoa+2)^0,c
  1897  00150C  0E00               	movlw	0
  1898  00150E  1048               	iorwf	(xtoa@c+1)^0,w,c
  1899  001510  6E30               	movwf	(??_xtoa+3)^0,c
  1900  001512  502D               	movf	??_xtoa^0,w,c
  1901  001514  262F               	addwf	(??_xtoa+2)^0,f,c
  1902  001516  502E               	movf	(??_xtoa+1)^0,w,c
  1903  001518  2230               	addwfc	(??_xtoa+3)^0,f,c
  1904  00151A  5030               	movf	(??_xtoa+3)^0,w,c
  1905  00151C  E10A               	bnz	u2660
  1906  00151E  0E1A               	movlw	26
  1907  001520  5C2F               	subwf	(??_xtoa+2)^0,w,c
  1908  001522  A0D8               	btfss	status,0,c
  1909  001524  EF96  F00A         	goto	u2661
  1910  001528  EF99  F00A         	goto	u2660
  1911  00152C                     u2661:
  1912  00152C  0E01               	movlw	1
  1913  00152E  EF9A  F00A         	goto	u2670
  1914  001532                     u2660:
  1915  001532  0E00               	movlw	0
  1916  001534                     u2670:
  1917  001534  6E37               	movwf	_xtoa$2087^0,c
  1918  001536  6A38               	clrf	(_xtoa$2087+1)^0,c
  1919  001538  5037               	movf	_xtoa$2087^0,w,c
  1920  00153A  1038               	iorwf	(_xtoa$2087+1)^0,w,c
  1921  00153C  B4D8               	btfsc	status,2,c
  1922  00153E  EFA3  F00A         	goto	u2681
  1923  001542  EFA5  F00A         	goto	u2680
  1924  001546                     u2681:
  1925  001546  EFAF  F00A         	goto	l4148
  1926  00154A                     u2680:
  1927  00154A                     
  1928                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  1929  00154A  C047  F00B         	movff	xtoa@c,toupper@c
  1930  00154E  C048  F00C         	movff	xtoa@c+1,toupper@c+1
  1931  001552  ECC1  F010         	call	_toupper	;wreg free
  1932  001556  C00B  F047         	movff	?_toupper,xtoa@c
  1933  00155A  C00C  F048         	movff	?_toupper+1,xtoa@c+1
  1934  00155E                     l4148:
  1935                           
  1936                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  1937  00155E  0EAB               	movlw	low _dbuf
  1938  001560  2445               	addwf	xtoa@i^0,w,c
  1939  001562  6ED9               	movwf	fsr2l,c
  1940  001564  0E00               	movlw	high _dbuf
  1941  001566  2046               	addwfc	(xtoa@i+1)^0,w,c
  1942  001568  6EDA               	movwf	fsr2h,c
  1943  00156A  C047  FFDF         	movff	xtoa@c,indf2
  1944  00156E                     
  1945                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  1946  00156E  0639               	decf	xtoa@p^0,f,c
  1947  001570  A0D8               	btfss	status,0,c
  1948  001572  063A               	decf	(xtoa@p+1)^0,f,c
  1949  001574                     
  1950                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  1951  001574  063B               	decf	xtoa@w^0,f,c
  1952  001576  A0D8               	btfss	status,0,c
  1953  001578  063C               	decf	(xtoa@w+1)^0,f,c
  1954  00157A                     
  1955                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  1956  00157A  C03D  F02D         	movff	xtoa@n,??_xtoa
  1957  00157E  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  1958  001582  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  1959  001586  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  1960  00158A  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  1961  00158E  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  1962  001592  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  1963  001596  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  1964  00159A  0E05               	movlw	5
  1965  00159C  EFD9  F00A         	goto	u2690
  1966  0015A0                     u2695:
  1967  0015A0  90D8               	bcf	status,0,c
  1968  0015A2  3234               	rrcf	(??_xtoa+7)^0,f,c
  1969  0015A4  3233               	rrcf	(??_xtoa+6)^0,f,c
  1970  0015A6  3232               	rrcf	(??_xtoa+5)^0,f,c
  1971  0015A8  3231               	rrcf	(??_xtoa+4)^0,f,c
  1972  0015AA  3230               	rrcf	(??_xtoa+3)^0,f,c
  1973  0015AC  322F               	rrcf	(??_xtoa+2)^0,f,c
  1974  0015AE  322E               	rrcf	(??_xtoa+1)^0,f,c
  1975  0015B0  322D               	rrcf	??_xtoa^0,f,c
  1976  0015B2                     u2690:
  1977  0015B2  2EE8               	decfsz	wreg,f,c
  1978  0015B4  EFD0  F00A         	goto	u2695
  1979  0015B8  C02D  F03D         	movff	??_xtoa,xtoa@n
  1980  0015BC  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  1981  0015C0  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  1982  0015C4  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  1983  0015C8  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  1984  0015CC  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  1985  0015D0  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  1986  0015D4  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  1987  0015D8                     l4156:
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1990  0015D8  BE46               	btfsc	(xtoa@i+1)^0,7,c
  1991  0015DA  EFF8  F00A         	goto	u2701
  1992  0015DE  5046               	movf	(xtoa@i+1)^0,w,c
  1993  0015E0  E109               	bnz	u2700
  1994  0015E2  0E02               	movlw	2
  1995  0015E4  5C45               	subwf	xtoa@i^0,w,c
  1996  0015E6  A0D8               	btfss	status,0,c
  1997  0015E8  EFF8  F00A         	goto	u2701
  1998  0015EC  EFFA  F00A         	goto	u2700
  1999  0015F0                     u2701:
  2000  0015F0  EF2B  F00B         	goto	l1478
  2001  0015F4                     u2700:
  2002  0015F4  503D               	movf	xtoa@n^0,w,c
  2003  0015F6  103E               	iorwf	(xtoa@n+1)^0,w,c
  2004  0015F8  103F               	iorwf	(xtoa@n+2)^0,w,c
  2005  0015FA  1040               	iorwf	(xtoa@n+3)^0,w,c
  2006  0015FC  1041               	iorwf	(xtoa@n+4)^0,w,c
  2007  0015FE  1042               	iorwf	(xtoa@n+5)^0,w,c
  2008  001600  1043               	iorwf	(xtoa@n+6)^0,w,c
  2009  001602  1044               	iorwf	(xtoa@n+7)^0,w,c
  2010  001604  A4D8               	btfss	status,2,c
  2011  001606  EF07  F00B         	goto	u2711
  2012  00160A  EF09  F00B         	goto	u2710
  2013  00160E                     u2711:
  2014  00160E  EF39  F00A         	goto	l4126
  2015  001612                     u2710:
  2016  001612  BE3A               	btfsc	(xtoa@p+1)^0,7,c
  2017  001614  EF16  F00B         	goto	u2720
  2018  001618  503A               	movf	(xtoa@p+1)^0,w,c
  2019  00161A  E106               	bnz	u2721
  2020  00161C  0439               	decf	xtoa@p^0,w,c
  2021  00161E  B0D8               	btfsc	status,0,c
  2022  001620  EF14  F00B         	goto	u2721
  2023  001624  EF16  F00B         	goto	u2720
  2024  001628                     u2721:
  2025  001628  EF39  F00A         	goto	l4126
  2026  00162C                     u2720:
  2027  00162C  BE3C               	btfsc	(xtoa@w+1)^0,7,c
  2028  00162E  EF21  F00B         	goto	u2731
  2029  001632  503C               	movf	(xtoa@w+1)^0,w,c
  2030  001634  E108               	bnz	u2730
  2031  001636  043B               	decf	xtoa@w^0,w,c
  2032  001638  A0D8               	btfss	status,0,c
  2033  00163A  EF21  F00B         	goto	u2731
  2034  00163E  EF23  F00B         	goto	u2730
  2035  001642                     u2731:
  2036  001642  EF2B  F00B         	goto	l1478
  2037  001646                     u2730:
  2038  001646  0100               	movlb	0	; () banked
  2039  001648  B3A5               	btfsc	_flags& (0+255),1,b
  2040  00164A  EF29  F00B         	goto	u2741
  2041  00164E  EF2B  F00B         	goto	u2740
  2042  001652                     u2741:
  2043  001652  EF39  F00A         	goto	l4126
  2044  001656                     u2740:
  2045  001656                     l1478:
  2046                           
  2047                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  2048  001656  0100               	movlb	0	; () banked
  2049  001658  A9A5               	btfss	_flags& (0+255),4,b
  2050  00165A  EF31  F00B         	goto	u2751
  2051  00165E  EF33  F00B         	goto	u2750
  2052  001662                     u2751:
  2053  001662  EF49  F00B         	goto	l4172
  2054  001666                     u2750:
  2055  001666                     
  2056                           ; BSR set to: 0
  2057                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  2058  001666  0645               	decf	xtoa@i^0,f,c
  2059  001668  A0D8               	btfss	status,0,c
  2060  00166A  0646               	decf	(xtoa@i+1)^0,f,c
  2061  00166C                     
  2062                           ; BSR set to: 0
  2063                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  2064  00166C  0EAB               	movlw	low _dbuf
  2065  00166E  2445               	addwf	xtoa@i^0,w,c
  2066  001670  6ED9               	movwf	fsr2l,c
  2067  001672  0E00               	movlw	high _dbuf
  2068  001674  2046               	addwfc	(xtoa@i+1)^0,w,c
  2069  001676  6EDA               	movwf	fsr2h,c
  2070  001678  C02C  FFDF         	movff	xtoa@x,indf2
  2071  00167C                     
  2072                           ; BSR set to: 0
  2073                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  2074  00167C  0645               	decf	xtoa@i^0,f,c
  2075  00167E  A0D8               	btfss	status,0,c
  2076  001680  0646               	decf	(xtoa@i+1)^0,f,c
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  2079  001682  0EAB               	movlw	low _dbuf
  2080  001684  2445               	addwf	xtoa@i^0,w,c
  2081  001686  6ED9               	movwf	fsr2l,c
  2082  001688  0E00               	movlw	high _dbuf
  2083  00168A  2046               	addwfc	(xtoa@i+1)^0,w,c
  2084  00168C  6EDA               	movwf	fsr2h,c
  2085  00168E  0E30               	movlw	48
  2086  001690  6EDF               	movwf	indf2,c
  2087  001692                     l4172:
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  2091  001692  C022  F017         	movff	xtoa@fp,pad@fp
  2092  001696  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  2093  00169A  0EAB               	movlw	low _dbuf
  2094  00169C  2445               	addwf	xtoa@i^0,w,c
  2095  00169E  6E19               	movwf	pad@buf^0,c
  2096  0016A0  0E00               	movlw	high _dbuf
  2097  0016A2  2046               	addwfc	(xtoa@i+1)^0,w,c
  2098  0016A4  6E1A               	movwf	(pad@buf+1)^0,c
  2099  0016A6  C03B  F01B         	movff	xtoa@w,pad@p
  2100  0016AA  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  2101  0016AE  EC2B  F00C         	call	_pad	;wreg free
  2102  0016B2  C017  F022         	movff	?_pad,?_xtoa
  2103  0016B6  C018  F023         	movff	?_pad+1,?_xtoa+1
  2104  0016BA  0012               	return		;funcret
  2105  0016BC                     __end_of_xtoa:
  2106                           	callstack 0
  2107                           
  2108 ;; *************** function _toupper *****************
  2109 ;; Defined at:
  2110 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;  c               2   10[COMRAM] int 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  2   10[COMRAM] int 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2125 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;Total ram usage:        8 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    5
  2131 ;; This function calls:
  2132 ;;		_islower
  2133 ;; This function is called by:
  2134 ;;		_xtoa
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text5
  2139  002182                     __ptext5:
  2140                           	callstack 0
  2141  002182                     _toupper:
  2142                           	callstack 21
  2143  002182  0E9F               	movlw	159
  2144  002184  6E0D               	movwf	??_toupper^0,c
  2145  002186  0EFF               	movlw	255
  2146  002188  6E0E               	movwf	(??_toupper+1)^0,c
  2147  00218A  C00B  F00F         	movff	toupper@c,??_toupper+2
  2148  00218E  C00C  F010         	movff	toupper@c+1,??_toupper+3
  2149  002192  500D               	movf	??_toupper^0,w,c
  2150  002194  260F               	addwf	(??_toupper+2)^0,f,c
  2151  002196  500E               	movf	(??_toupper+1)^0,w,c
  2152  002198  2210               	addwfc	(??_toupper+3)^0,f,c
  2153  00219A  5010               	movf	(??_toupper+3)^0,w,c
  2154  00219C  E10A               	bnz	u2520
  2155  00219E  0E1A               	movlw	26
  2156  0021A0  5C0F               	subwf	(??_toupper+2)^0,w,c
  2157  0021A2  A0D8               	btfss	status,0,c
  2158  0021A4  EFD6  F010         	goto	u2521
  2159  0021A8  EFD9  F010         	goto	u2520
  2160  0021AC                     u2521:
  2161  0021AC  0E01               	movlw	1
  2162  0021AE  EFDA  F010         	goto	u2530
  2163  0021B2                     u2520:
  2164  0021B2  0E00               	movlw	0
  2165  0021B4                     u2530:
  2166  0021B4  6E11               	movwf	_toupper$2196^0,c
  2167  0021B6  6A12               	clrf	(_toupper$2196+1)^0,c
  2168  0021B8  5011               	movf	_toupper$2196^0,w,c
  2169  0021BA  1012               	iorwf	(_toupper$2196+1)^0,w,c
  2170  0021BC  B4D8               	btfsc	status,2,c
  2171  0021BE  EFE3  F010         	goto	u2541
  2172  0021C2  EFE5  F010         	goto	u2540
  2173  0021C6                     u2541:
  2174  0021C6  EFEB  F010         	goto	l1604
  2175  0021CA                     u2540:
  2176  0021CA  0E5F               	movlw	95
  2177  0021CC  140B               	andwf	toupper@c^0,w,c
  2178  0021CE  6E0B               	movwf	?_toupper^0,c
  2179  0021D0  6A0C               	clrf	(?_toupper+1)^0,c
  2180  0021D2  EFEF  F010         	goto	l1609
  2181  0021D6                     l1604:
  2182  0021D6  C00B  F00B         	movff	toupper@c,?_toupper
  2183  0021DA  C00C  F00C         	movff	toupper@c+1,?_toupper+1
  2184  0021DE                     l1609:
  2185  0021DE  0012               	return		;funcret
  2186  0021E0                     __end_of_toupper:
  2187                           	callstack 0
  2188                           
  2189 ;; *************** function _islower *****************
  2190 ;; Defined at:
  2191 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  c               2    4[COMRAM] int 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;		None
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  2    4[COMRAM] int 
  2198 ;; Registers used:
  2199 ;;		wreg, status,2, status,0
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2205 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;Total ram usage:        6 bytes
  2210 ;; Hardware stack levels used:    1
  2211 ;; Hardware stack levels required when called:    4
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		_toupper
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text6
  2220  002420                     __ptext6:
  2221                           	callstack 0
  2222  002420                     _islower:
  2223                           	callstack 21
  2224  002420  0E9F               	movlw	159
  2225  002422  6E07               	movwf	??_islower^0,c
  2226  002424  0EFF               	movlw	255
  2227  002426  6E08               	movwf	(??_islower+1)^0,c
  2228  002428  C005  F009         	movff	islower@c,??_islower+2
  2229  00242C  C006  F00A         	movff	islower@c+1,??_islower+3
  2230  002430  5007               	movf	??_islower^0,w,c
  2231  002432  2609               	addwf	(??_islower+2)^0,f,c
  2232  002434  5008               	movf	(??_islower+1)^0,w,c
  2233  002436  220A               	addwfc	(??_islower+3)^0,f,c
  2234  002438  500A               	movf	(??_islower+3)^0,w,c
  2235  00243A  E10A               	bnz	u2420
  2236  00243C  0E1A               	movlw	26
  2237  00243E  5C09               	subwf	(??_islower+2)^0,w,c
  2238  002440  A0D8               	btfss	status,0,c
  2239  002442  EF25  F012         	goto	u2421
  2240  002446  EF28  F012         	goto	u2420
  2241  00244A                     u2421:
  2242  00244A  0E01               	movlw	1
  2243  00244C  EF29  F012         	goto	u2430
  2244  002450                     u2420:
  2245  002450  0E00               	movlw	0
  2246  002452                     u2430:
  2247  002452  6E05               	movwf	?_islower^0,c
  2248  002454  6A06               	clrf	(?_islower+1)^0,c
  2249  002456  0012               	return		;funcret
  2250  002458                     __end_of_islower:
  2251                           	callstack 0
  2252                           
  2253 ;; *************** function _pad *****************
  2254 ;; Defined at:
  2255 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  2258 ;;		 -> NULL(0), 
  2259 ;;  buf             2   24[COMRAM] PTR unsigned char 
  2260 ;;		 -> dbuf(32), 
  2261 ;;  p               2   26[COMRAM] int 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;  w               2   31[COMRAM] int 
  2264 ;;  i               2   29[COMRAM] int 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  2   22[COMRAM] int 
  2267 ;; Registers used:
  2268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2274 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;Total ram usage:       11 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    8
  2281 ;; This function calls:
  2282 ;;		_fputc
  2283 ;;		_fputs
  2284 ;;		_strlen
  2285 ;; This function is called by:
  2286 ;;		_xtoa
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text7
  2291  001856                     __ptext7:
  2292                           	callstack 0
  2293  001856                     _pad:
  2294                           	callstack 18
  2295  001856                     
  2296                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2297  001856  0100               	movlb	0	; () banked
  2298  001858  A1A5               	btfss	_flags& (0+255),0,b
  2299  00185A  EF31  F00C         	goto	u2441
  2300  00185E  EF33  F00C         	goto	u2440
  2301  001862                     u2441:
  2302  001862  EF3D  F00C         	goto	l4058
  2303  001866                     u2440:
  2304  001866                     
  2305                           ; BSR set to: 0
  2306                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2307  001866  C019  F010         	movff	pad@buf,fputs@s
  2308  00186A  C01A  F011         	movff	pad@buf+1,fputs@s+1
  2309  00186E  C017  F012         	movff	pad@fp,fputs@fp
  2310  001872  C018  F013         	movff	pad@fp+1,fputs@fp+1
  2311  001876  EC6D  F011         	call	_fputs	;wreg free
  2312  00187A                     l4058:
  2313                           
  2314                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2315  00187A  BE1C               	btfsc	(pad@p+1)^0,7,c
  2316  00187C  EF42  F00C         	goto	u2451
  2317  001880  EF44  F00C         	goto	u2450
  2318  001884                     u2451:
  2319  001884  EF4A  F00C         	goto	l4062
  2320  001888                     u2450:
  2321  001888  C01B  F020         	movff	pad@p,pad@w
  2322  00188C  C01C  F021         	movff	pad@p+1,pad@w+1
  2323  001890  EF4E  F00C         	goto	l1445
  2324  001894                     l4062:
  2325  001894  0E00               	movlw	0
  2326  001896  6E21               	movwf	(pad@w+1)^0,c
  2327  001898  0E00               	movlw	0
  2328  00189A  6E20               	movwf	pad@w^0,c
  2329  00189C                     l1445:
  2330                           
  2331                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2332  00189C  0E00               	movlw	0
  2333  00189E  6E1F               	movwf	(pad@i+1)^0,c
  2334  0018A0  0E00               	movlw	0
  2335  0018A2  6E1E               	movwf	pad@i^0,c
  2336                           
  2337                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2338  0018A4  EF60  F00C         	goto	l4068
  2339  0018A8                     l4064:
  2340                           
  2341                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2342  0018A8  0E00               	movlw	0
  2343  0018AA  6E08               	movwf	(fputc@c+1)^0,c
  2344  0018AC  0E20               	movlw	32
  2345  0018AE  6E07               	movwf	fputc@c^0,c
  2346  0018B0  C017  F009         	movff	pad@fp,fputc@fp
  2347  0018B4  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  2348  0018B8  ECF6  F00D         	call	_fputc	;wreg free
  2349  0018BC                     
  2350                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2351  0018BC  4A1E               	infsnz	pad@i^0,f,c
  2352  0018BE  2A1F               	incf	(pad@i+1)^0,f,c
  2353  0018C0                     l4068:
  2354                           
  2355                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2356  0018C0  5020               	movf	pad@w^0,w,c
  2357  0018C2  5C1E               	subwf	pad@i^0,w,c
  2358  0018C4  501F               	movf	(pad@i+1)^0,w,c
  2359  0018C6  0A80               	xorlw	128
  2360  0018C8  6E1D               	movwf	??_pad^0,c
  2361  0018CA  5021               	movf	(pad@w+1)^0,w,c
  2362  0018CC  0A80               	xorlw	128
  2363  0018CE  581D               	subwfb	??_pad^0,w,c
  2364  0018D0  A0D8               	btfss	status,0,c
  2365  0018D2  EF6D  F00C         	goto	u2461
  2366  0018D6  EF6F  F00C         	goto	u2460
  2367  0018DA                     u2461:
  2368  0018DA  EF54  F00C         	goto	l4064
  2369  0018DE                     u2460:
  2370  0018DE                     
  2371                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2372  0018DE  0100               	movlb	0	; () banked
  2373  0018E0  B1A5               	btfsc	_flags& (0+255),0,b
  2374  0018E2  EF75  F00C         	goto	u2471
  2375  0018E6  EF77  F00C         	goto	u2470
  2376  0018EA                     u2471:
  2377  0018EA  EF81  F00C         	goto	l4072
  2378  0018EE                     u2470:
  2379  0018EE                     
  2380                           ; BSR set to: 0
  2381                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2382  0018EE  C019  F010         	movff	pad@buf,fputs@s
  2383  0018F2  C01A  F011         	movff	pad@buf+1,fputs@s+1
  2384  0018F6  C017  F012         	movff	pad@fp,fputs@fp
  2385  0018FA  C018  F013         	movff	pad@fp+1,fputs@fp+1
  2386  0018FE  EC6D  F011         	call	_fputs	;wreg free
  2387  001902                     l4072:
  2388                           
  2389                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  2390  001902  C019  F005         	movff	pad@buf,strlen@s
  2391  001906  C01A  F006         	movff	pad@buf+1,strlen@s+1
  2392  00190A  EC64  F012         	call	_strlen	;wreg free
  2393  00190E  5020               	movf	pad@w^0,w,c
  2394  001910  2405               	addwf	?_strlen^0,w,c
  2395  001912  6E17               	movwf	?_pad^0,c
  2396  001914  5021               	movf	(pad@w+1)^0,w,c
  2397  001916  2006               	addwfc	(?_strlen+1)^0,w,c
  2398  001918  6E18               	movwf	(?_pad+1)^0,c
  2399  00191A  0012               	return		;funcret
  2400  00191C                     __end_of_pad:
  2401                           	callstack 0
  2402                           
  2403 ;; *************** function _strlen *****************
  2404 ;; Defined at:
  2405 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;  s               2    4[COMRAM] PTR const unsigned char 
  2408 ;;		 -> dbuf(32), 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  a               2    6[COMRAM] PTR const unsigned char 
  2411 ;;		 -> dbuf(32), 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  2    4[COMRAM] unsigned int 
  2414 ;; Registers used:
  2415 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2421 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;Total ram usage:        4 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; Hardware stack levels required when called:    4
  2428 ;; This function calls:
  2429 ;;		Nothing
  2430 ;; This function is called by:
  2431 ;;		_pad
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text8
  2436  0024C8                     __ptext8:
  2437                           	callstack 0
  2438  0024C8                     _strlen:
  2439                           	callstack 21
  2440  0024C8  C005  F007         	movff	strlen@s,strlen@a
  2441  0024CC  C006  F008         	movff	strlen@s+1,strlen@a+1
  2442  0024D0  EF6C  F012         	goto	l4038
  2443  0024D4                     l4036:
  2444  0024D4  4A05               	infsnz	strlen@s^0,f,c
  2445  0024D6  2A06               	incf	(strlen@s+1)^0,f,c
  2446  0024D8                     l4038:
  2447  0024D8  C005  FFD9         	movff	strlen@s,fsr2l
  2448  0024DC  C006  FFDA         	movff	strlen@s+1,fsr2h
  2449  0024E0  50DF               	movf	indf2,w,c
  2450  0024E2  A4D8               	btfss	status,2,c
  2451  0024E4  EF76  F012         	goto	u2411
  2452  0024E8  EF78  F012         	goto	u2410
  2453  0024EC                     u2411:
  2454  0024EC  EF6A  F012         	goto	l4036
  2455  0024F0                     u2410:
  2456  0024F0  5007               	movf	strlen@a^0,w,c
  2457  0024F2  5C05               	subwf	strlen@s^0,w,c
  2458  0024F4  6E05               	movwf	?_strlen^0,c
  2459  0024F6  5008               	movf	(strlen@a+1)^0,w,c
  2460  0024F8  5806               	subwfb	(strlen@s+1)^0,w,c
  2461  0024FA  6E06               	movwf	(?_strlen+1)^0,c
  2462  0024FC  0012               	return		;funcret
  2463  0024FE                     __end_of_strlen:
  2464                           	callstack 0
  2465                           
  2466 ;; *************** function _fputs *****************
  2467 ;; Defined at:
  2468 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;  s               2   15[COMRAM] PTR const unsigned char 
  2471 ;;		 -> dbuf(32), 
  2472 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  2473 ;;		 -> NULL(0), 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  i               2   20[COMRAM] int 
  2476 ;;  c               1   19[COMRAM] unsigned char 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  2   15[COMRAM] int 
  2479 ;; Registers used:
  2480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2486 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2489 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2490 ;;Total ram usage:        7 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; Hardware stack levels required when called:    7
  2493 ;; This function calls:
  2494 ;;		_fputc
  2495 ;; This function is called by:
  2496 ;;		_pad
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text9
  2501  0022DA                     __ptext9:
  2502                           	callstack 0
  2503  0022DA                     _fputs:
  2504                           	callstack 18
  2505  0022DA  0E00               	movlw	0
  2506  0022DC  6E16               	movwf	(fputs@i+1)^0,c
  2507  0022DE  0E00               	movlw	0
  2508  0022E0  6E15               	movwf	fputs@i^0,c
  2509  0022E2  EF7E  F011         	goto	l4032
  2510  0022E6                     l4028:
  2511  0022E6  C014  F007         	movff	fputs@c,fputc@c
  2512  0022EA  6A08               	clrf	(fputc@c+1)^0,c
  2513  0022EC  C012  F009         	movff	fputs@fp,fputc@fp
  2514  0022F0  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  2515  0022F4  ECF6  F00D         	call	_fputc	;wreg free
  2516  0022F8  4A15               	infsnz	fputs@i^0,f,c
  2517  0022FA  2A16               	incf	(fputs@i+1)^0,f,c
  2518  0022FC                     l4032:
  2519  0022FC  5015               	movf	fputs@i^0,w,c
  2520  0022FE  2410               	addwf	fputs@s^0,w,c
  2521  002300  6ED9               	movwf	fsr2l,c
  2522  002302  5016               	movf	(fputs@i+1)^0,w,c
  2523  002304  2011               	addwfc	(fputs@s+1)^0,w,c
  2524  002306  6EDA               	movwf	fsr2h,c
  2525  002308  50DF               	movf	indf2,w,c
  2526  00230A  6E14               	movwf	fputs@c^0,c
  2527  00230C  5014               	movf	fputs@c^0,w,c
  2528  00230E  A4D8               	btfss	status,2,c
  2529  002310  EF8C  F011         	goto	u2401
  2530  002314  EF8E  F011         	goto	u2400
  2531  002318                     u2401:
  2532  002318  EF73  F011         	goto	l4028
  2533  00231C                     u2400:
  2534  00231C  0012               	return		;funcret
  2535  00231E                     __end_of_fputs:
  2536                           	callstack 0
  2537                           
  2538 ;; *************** function _fputc *****************
  2539 ;; Defined at:
  2540 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  c               2    6[COMRAM] int 
  2543 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  2544 ;;		 -> NULL(0), 
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;		None
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  2    6[COMRAM] int 
  2549 ;; Registers used:
  2550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2558 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;Total ram usage:        9 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    6
  2563 ;; This function calls:
  2564 ;;		_putch
  2565 ;; This function is called by:
  2566 ;;		_pad
  2567 ;;		_vfpfcnvrt
  2568 ;;		_fputs
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           	psect	text10
  2573  001BEC                     __ptext10:
  2574                           	callstack 0
  2575  001BEC                     _fputc:
  2576                           	callstack 18
  2577  001BEC  5009               	movf	fputc@fp^0,w,c
  2578  001BEE  100A               	iorwf	(fputc@fp+1)^0,w,c
  2579  001BF0  B4D8               	btfsc	status,2,c
  2580  001BF2  EFFD  F00D         	goto	u2361
  2581  001BF6  EFFF  F00D         	goto	u2360
  2582  001BFA                     u2361:
  2583  001BFA  EF08  F00E         	goto	l4016
  2584  001BFE                     u2360:
  2585  001BFE  5009               	movf	fputc@fp^0,w,c
  2586  001C00  100A               	iorwf	(fputc@fp+1)^0,w,c
  2587  001C02  A4D8               	btfss	status,2,c
  2588  001C04  EF06  F00E         	goto	u2371
  2589  001C08  EF08  F00E         	goto	u2370
  2590  001C0C                     u2371:
  2591  001C0C  EF0D  F00E         	goto	l4018
  2592  001C10                     u2370:
  2593  001C10                     l4016:
  2594  001C10  5007               	movf	fputc@c^0,w,c
  2595  001C12  ECE5  F013         	call	_putch
  2596  001C16  EF40  F00E         	goto	l1585
  2597  001C1A                     l4018:
  2598  001C1A  EE20 F004          	lfsr	2,4
  2599  001C1E  5009               	movf	fputc@fp^0,w,c
  2600  001C20  26D9               	addwf	fsr2l,f,c
  2601  001C22  500A               	movf	(fputc@fp+1)^0,w,c
  2602  001C24  22DA               	addwfc	fsr2h,f,c
  2603  001C26  50DE               	movf	postinc2,w,c
  2604  001C28  10DE               	iorwf	postinc2,w,c
  2605  001C2A  B4D8               	btfsc	status,2,c
  2606  001C2C  EF1A  F00E         	goto	u2381
  2607  001C30  EF1C  F00E         	goto	u2380
  2608  001C34                     u2381:
  2609  001C34  EF37  F00E         	goto	l4022
  2610  001C38                     u2380:
  2611  001C38  EE20 F004          	lfsr	2,4
  2612  001C3C  5009               	movf	fputc@fp^0,w,c
  2613  001C3E  26D9               	addwf	fsr2l,f,c
  2614  001C40  500A               	movf	(fputc@fp+1)^0,w,c
  2615  001C42  22DA               	addwfc	fsr2h,f,c
  2616  001C44  EE10 F002          	lfsr	1,2
  2617  001C48  5009               	movf	fputc@fp^0,w,c
  2618  001C4A  26E1               	addwf	fsr1l,f,c
  2619  001C4C  500A               	movf	(fputc@fp+1)^0,w,c
  2620  001C4E  22E2               	addwfc	fsr1h,f,c
  2621  001C50  50DE               	movf	postinc2,w,c
  2622  001C52  5CE6               	subwf	postinc1,w,c
  2623  001C54  50E6               	movf	postinc1,w,c
  2624  001C56  0A80               	xorlw	128
  2625  001C58  6E0F               	movwf	(??_fputc+4)^0,c
  2626  001C5A  50DE               	movf	postinc2,w,c
  2627  001C5C  0A80               	xorlw	128
  2628  001C5E  580F               	subwfb	(??_fputc+4)^0,w,c
  2629  001C60  B0D8               	btfsc	status,0,c
  2630  001C62  EF35  F00E         	goto	u2391
  2631  001C66  EF37  F00E         	goto	u2390
  2632  001C6A                     u2391:
  2633  001C6A  EF40  F00E         	goto	l1585
  2634  001C6E                     u2390:
  2635  001C6E                     l4022:
  2636  001C6E  EE20 F002          	lfsr	2,2
  2637  001C72  5009               	movf	fputc@fp^0,w,c
  2638  001C74  26D9               	addwf	fsr2l,f,c
  2639  001C76  500A               	movf	(fputc@fp+1)^0,w,c
  2640  001C78  22DA               	addwfc	fsr2h,f,c
  2641  001C7A  2ADE               	incf	postinc2,f,c
  2642  001C7C  0E00               	movlw	0
  2643  001C7E  22DD               	addwfc	postdec2,f,c
  2644  001C80                     l1585:
  2645  001C80  0012               	return		;funcret
  2646  001C82                     __end_of_fputc:
  2647                           	callstack 0
  2648                           
  2649 ;; *************** function _putch *****************
  2650 ;; Defined at:
  2651 ;;		line 201 in file "mcc_generated_files/eusart.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  txData          1    wreg     unsigned char 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;  txData          1    5[COMRAM] unsigned char 
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;Total ram usage:        1 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; Hardware stack levels required when called:    5
  2672 ;; This function calls:
  2673 ;;		_EUSART_Write
  2674 ;; This function is called by:
  2675 ;;		_fputc
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text11
  2680  0027CA                     __ptext11:
  2681                           	callstack 0
  2682  0027CA                     _putch:
  2683                           	callstack 18
  2684                           
  2685                           ;incstack = 0
  2686                           ;putch@txData stored from wreg
  2687  0027CA  6E06               	movwf	putch@txData^0,c
  2688  0027CC                     
  2689                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  2690  0027CC  5006               	movf	putch@txData^0,w,c
  2691  0027CE  ECF0  F010         	call	_EUSART_Write
  2692  0027D2  0012               	return		;funcret
  2693  0027D4                     __end_of_putch:
  2694                           	callstack 0
  2695                           
  2696 ;; *************** function _EUSART_Write *****************
  2697 ;; Defined at:
  2698 ;;		line 173 in file "mcc_generated_files/eusart.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;  txData          1    wreg     unsigned char 
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;  txData          1    4[COMRAM] unsigned char 
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      void 
  2705 ;; Registers used:
  2706 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;Total ram usage:        1 bytes
  2717 ;; Hardware stack levels used:    1
  2718 ;; Hardware stack levels required when called:    4
  2719 ;; This function calls:
  2720 ;;		Nothing
  2721 ;; This function is called by:
  2722 ;;		_putch
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           	psect	text12
  2727  0021E0                     __ptext12:
  2728                           	callstack 0
  2729  0021E0                     _EUSART_Write:
  2730                           	callstack 18
  2731                           
  2732                           ;incstack = 0
  2733                           ;EUSART_Write@txData stored from wreg
  2734  0021E0  6E05               	movwf	EUSART_Write@txData^0,c
  2735  0021E2                     l3994:
  2736                           
  2737                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  2738  0021E2  0100               	movlb	0	; () banked
  2739  0021E4  51FC               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
  2740  0021E6  B4D8               	btfsc	status,2,c
  2741  0021E8  EFF8  F010         	goto	u2331
  2742  0021EC  EFFA  F010         	goto	u2330
  2743  0021F0                     u2331:
  2744  0021F0  EFF1  F010         	goto	l3994
  2745  0021F4                     u2330:
  2746  0021F4                     
  2747                           ; BSR set to: 0
  2748                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TX1IE)
  2749  0021F4  B89D               	btfsc	157,4,c	;volatile
  2750  0021F6  EFFF  F010         	goto	u2341
  2751  0021FA  EF01  F011         	goto	u2340
  2752  0021FE                     u2341:
  2753  0021FE  EF05  F011         	goto	l595
  2754  002202                     u2340:
  2755  002202                     
  2756                           ; BSR set to: 0
  2757                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  2758  002202  C005  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  2759                           
  2760                           ;mcc_generated_files/eusart.c: 182:     }
  2761  002206  EF1A  F011         	goto	l4008
  2762  00220A                     l595:
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TX1IE = 0;
  2766  00220A  989D               	bcf	157,4,c	;volatile
  2767  00220C                     
  2768                           ; BSR set to: 0
  2769                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  2770  00220C  0E94               	movlw	low _eusartTxBuffer
  2771  00220E  245A               	addwf	_eusartTxHead^0,w,c	;volatile
  2772  002210  6ED9               	movwf	fsr2l,c
  2773  002212  6ADA               	clrf	fsr2h,c
  2774  002214  0E00               	movlw	high _eusartTxBuffer
  2775  002216  22DA               	addwfc	fsr2h,f,c
  2776  002218  C005  FFDF         	movff	EUSART_Write@txData,indf2
  2777  00221C                     
  2778                           ; BSR set to: 0
  2779  00221C  2A5A               	incf	_eusartTxHead^0,f,c	;volatile
  2780  00221E                     
  2781                           ; BSR set to: 0
  2782                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  2783  00221E  0E07               	movlw	7
  2784  002220  645A               	cpfsgt	_eusartTxHead^0,c	;volatile
  2785  002222  EF15  F011         	goto	u2351
  2786  002226  EF17  F011         	goto	u2350
  2787  00222A                     u2351:
  2788  00222A  EF19  F011         	goto	l4006
  2789  00222E                     u2350:
  2790  00222E                     
  2791                           ; BSR set to: 0
  2792                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  2793  00222E  0E00               	movlw	0
  2794  002230  6E5A               	movwf	_eusartTxHead^0,c	;volatile
  2795  002232                     l4006:
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  2799  002232  07FC               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
  2800  002234                     l4008:
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TX1IE = 1;
  2804  002234  889D               	bsf	157,4,c	;volatile
  2805  002236                     
  2806                           ; BSR set to: 0
  2807  002236  0012               	return		;funcret
  2808  002238                     __end_of_EUSART_Write:
  2809                           	callstack 0
  2810                           
  2811 ;; *************** function _isupper *****************
  2812 ;; Defined at:
  2813 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  c               2    4[COMRAM] int 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  2    4[COMRAM] int 
  2820 ;; Registers used:
  2821 ;;		wreg, status,2, status,0
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2830 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;Total ram usage:        6 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    4
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_xtoa
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text13
  2842  002458                     __ptext13:
  2843                           	callstack 0
  2844  002458                     _isupper:
  2845                           	callstack 22
  2846  002458  0EBF               	movlw	191
  2847  00245A  6E07               	movwf	??_isupper^0,c
  2848  00245C  0EFF               	movlw	255
  2849  00245E  6E08               	movwf	(??_isupper+1)^0,c
  2850  002460  C005  F009         	movff	isupper@c,??_isupper+2
  2851  002464  C006  F00A         	movff	isupper@c+1,??_isupper+3
  2852  002468  5007               	movf	??_isupper^0,w,c
  2853  00246A  2609               	addwf	(??_isupper+2)^0,f,c
  2854  00246C  5008               	movf	(??_isupper+1)^0,w,c
  2855  00246E  220A               	addwfc	(??_isupper+3)^0,f,c
  2856  002470  500A               	movf	(??_isupper+3)^0,w,c
  2857  002472  E10A               	bnz	u2480
  2858  002474  0E1A               	movlw	26
  2859  002476  5C09               	subwf	(??_isupper+2)^0,w,c
  2860  002478  A0D8               	btfss	status,0,c
  2861  00247A  EF41  F012         	goto	u2481
  2862  00247E  EF44  F012         	goto	u2480
  2863  002482                     u2481:
  2864  002482  0E01               	movlw	1
  2865  002484  EF45  F012         	goto	u2490
  2866  002488                     u2480:
  2867  002488  0E00               	movlw	0
  2868  00248A                     u2490:
  2869  00248A  6E05               	movwf	?_isupper^0,c
  2870  00248C  6A06               	clrf	(?_isupper+1)^0,c
  2871  00248E  0012               	return		;funcret
  2872  002490                     __end_of_isupper:
  2873                           	callstack 0
  2874                           
  2875 ;; *************** function _isalpha *****************
  2876 ;; Defined at:
  2877 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  c               2    4[COMRAM] int 
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;		None
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  2    4[COMRAM] int 
  2884 ;; Registers used:
  2885 ;;		wreg, status,2, status,0
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2891 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;Total ram usage:        6 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; Hardware stack levels required when called:    4
  2898 ;; This function calls:
  2899 ;;		Nothing
  2900 ;; This function is called by:
  2901 ;;		_xtoa
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           	psect	text14
  2906  0023E4                     __ptext14:
  2907                           	callstack 0
  2908  0023E4                     _isalpha:
  2909                           	callstack 22
  2910  0023E4  0E9F               	movlw	159
  2911  0023E6  6E07               	movwf	??_isalpha^0,c
  2912  0023E8  0EFF               	movlw	255
  2913  0023EA  6E08               	movwf	(??_isalpha+1)^0,c
  2914  0023EC  0E20               	movlw	32
  2915  0023EE  1005               	iorwf	isalpha@c^0,w,c
  2916  0023F0  6E09               	movwf	(??_isalpha+2)^0,c
  2917  0023F2  0E00               	movlw	0
  2918  0023F4  1006               	iorwf	(isalpha@c+1)^0,w,c
  2919  0023F6  6E0A               	movwf	(??_isalpha+3)^0,c
  2920  0023F8  5007               	movf	??_isalpha^0,w,c
  2921  0023FA  2609               	addwf	(??_isalpha+2)^0,f,c
  2922  0023FC  5008               	movf	(??_isalpha+1)^0,w,c
  2923  0023FE  220A               	addwfc	(??_isalpha+3)^0,f,c
  2924  002400  500A               	movf	(??_isalpha+3)^0,w,c
  2925  002402  E10A               	bnz	u2500
  2926  002404  0E1A               	movlw	26
  2927  002406  5C09               	subwf	(??_isalpha+2)^0,w,c
  2928  002408  A0D8               	btfss	status,0,c
  2929  00240A  EF09  F012         	goto	u2501
  2930  00240E  EF0C  F012         	goto	u2500
  2931  002412                     u2501:
  2932  002412  0E01               	movlw	1
  2933  002414  EF0D  F012         	goto	u2510
  2934  002418                     u2500:
  2935  002418  0E00               	movlw	0
  2936  00241A                     u2510:
  2937  00241A  6E05               	movwf	?_isalpha^0,c
  2938  00241C  6A06               	clrf	(?_isalpha+1)^0,c
  2939  00241E  0012               	return		;funcret
  2940  002420                     __end_of_isalpha:
  2941                           	callstack 0
  2942                           
  2943 ;; *************** function _atoi *****************
  2944 ;; Defined at:
  2945 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  s               2   11[COMRAM] PTR const unsigned char 
  2948 ;;		 -> STR_1(39), 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;  n               2   24[COMRAM] int 
  2951 ;;  neg             2   17[COMRAM] int 
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  2   11[COMRAM] int 
  2954 ;; Registers used:
  2955 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2961 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2962 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2963 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;Total ram usage:       15 bytes
  2966 ;; Hardware stack levels used:    1
  2967 ;; Hardware stack levels required when called:    5
  2968 ;; This function calls:
  2969 ;;		___wmul
  2970 ;;		_isdigit
  2971 ;;		_isspace
  2972 ;; This function is called by:
  2973 ;;		_vfpfcnvrt
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           	psect	text15
  2978  0016BC                     __ptext15:
  2979                           	callstack 0
  2980  0016BC                     _atoi:
  2981                           	callstack 22
  2982  0016BC  0E00               	movlw	0
  2983  0016BE  6E1A               	movwf	(atoi@n+1)^0,c
  2984  0016C0  0E00               	movlw	0
  2985  0016C2  6E19               	movwf	atoi@n^0,c
  2986  0016C4  0E00               	movlw	0
  2987  0016C6  6E13               	movwf	(atoi@neg+1)^0,c
  2988  0016C8  0E00               	movlw	0
  2989  0016CA  6E12               	movwf	atoi@neg^0,c
  2990  0016CC  EF6A  F00B         	goto	l4180
  2991  0016D0                     l4178:
  2992  0016D0  4A0C               	infsnz	atoi@s^0,f,c
  2993  0016D2  2A0D               	incf	(atoi@s+1)^0,f,c
  2994  0016D4                     l4180:
  2995  0016D4  0E01               	movlw	1
  2996  0016D6  6E18               	movwf	_atoi$2121^0,c
  2997  0016D8  C00C  FFF6         	movff	atoi@s,tblptrl
  2998  0016DC  C00D  FFF7         	movff	atoi@s+1,tblptrh
  2999  0016E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3000  0016E0  6AF8               	clrf	tblptru,c
  3001  0016E2                     	endif
  3002  0016E2                     	if	0	;tblptru may be non-zero
  3003  0016E2                     	endif
  3004  0016E2  0008               	tblrd		*
  3005  0016E4  50F5               	movf	tablat,w,c
  3006  0016E6  0A20               	xorlw	32
  3007  0016E8  B4D8               	btfsc	status,2,c
  3008  0016EA  EF79  F00B         	goto	u2761
  3009  0016EE  EF7B  F00B         	goto	u2760
  3010  0016F2                     u2761:
  3011  0016F2  EF99  F00B         	goto	l4188
  3012  0016F6                     u2760:
  3013  0016F6  0EF7               	movlw	247
  3014  0016F8  6E0E               	movwf	??_atoi^0,c
  3015  0016FA  0EFF               	movlw	255
  3016  0016FC  6E0F               	movwf	(??_atoi+1)^0,c
  3017  0016FE  C00C  FFF6         	movff	atoi@s,tblptrl
  3018  001702  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3019  001706                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3020  001706  6AF8               	clrf	tblptru,c
  3021  001708                     	endif
  3022  001708                     	if	0	;tblptru may be non-zero
  3023  001708                     	endif
  3024  001708  0008               	tblrd		*
  3025  00170A  50F5               	movf	tablat,w,c
  3026  00170C  6E10               	movwf	(??_atoi+2)^0,c
  3027  00170E  6A11               	clrf	(??_atoi+3)^0,c
  3028  001710  500E               	movf	??_atoi^0,w,c
  3029  001712  2610               	addwf	(??_atoi+2)^0,f,c
  3030  001714  500F               	movf	(??_atoi+1)^0,w,c
  3031  001716  2211               	addwfc	(??_atoi+3)^0,f,c
  3032  001718  5011               	movf	(??_atoi+3)^0,w,c
  3033  00171A  E109               	bnz	u2770
  3034  00171C  0E05               	movlw	5
  3035  00171E  5C10               	subwf	(??_atoi+2)^0,w,c
  3036  001720  A0D8               	btfss	status,0,c
  3037  001722  EF95  F00B         	goto	u2771
  3038  001726  EF97  F00B         	goto	u2770
  3039  00172A                     u2771:
  3040  00172A  EF99  F00B         	goto	l4188
  3041  00172E                     u2770:
  3042  00172E  0E00               	movlw	0
  3043  001730  6E18               	movwf	_atoi$2121^0,c
  3044  001732                     l4188:
  3045  001732  C018  F014         	movff	_atoi$2121,_atoi$2120
  3046  001736  6A15               	clrf	(_atoi$2120+1)^0,c
  3047  001738  5014               	movf	_atoi$2120^0,w,c
  3048  00173A  1015               	iorwf	(_atoi$2120+1)^0,w,c
  3049  00173C  A4D8               	btfss	status,2,c
  3050  00173E  EFA3  F00B         	goto	u2781
  3051  001742  EFA5  F00B         	goto	u2780
  3052  001746                     u2781:
  3053  001746  EF68  F00B         	goto	l4178
  3054  00174A                     u2780:
  3055  00174A  EFAF  F00B         	goto	l4198
  3056  00174E                     l4194:
  3057  00174E  0E00               	movlw	0
  3058  001750  6E13               	movwf	(atoi@neg+1)^0,c
  3059  001752  0E01               	movlw	1
  3060  001754  6E12               	movwf	atoi@neg^0,c
  3061  001756                     l4196:
  3062  001756  4A0C               	infsnz	atoi@s^0,f,c
  3063  001758  2A0D               	incf	(atoi@s+1)^0,f,c
  3064  00175A  EFE6  F00B         	goto	l4204
  3065  00175E                     l4198:
  3066  00175E  C00C  FFF6         	movff	atoi@s,tblptrl
  3067  001762  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3068  001766                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3069  001766  6AF8               	clrf	tblptru,c
  3070  001768                     	endif
  3071  001768                     	if	0	;tblptru may be non-zero
  3072  001768                     	endif
  3073  001768  0008               	tblrd		*
  3074  00176A  50F5               	movf	tablat,w,c
  3075  00176C  6E0E               	movwf	??_atoi^0,c
  3076  00176E  6A0F               	clrf	(??_atoi+1)^0,c
  3077                           
  3078                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3079                           ; Switch size 1, requested type "simple"
  3080                           ; Number of cases is 1, Range of values is 0 to 0
  3081                           ; switch strategies available:
  3082                           ; Name         Instructions Cycles
  3083                           ; simple_byte            4     3 (average)
  3084                           ;	Chosen strategy is simple_byte
  3085  001770  500F               	movf	(??_atoi+1)^0,w,c
  3086  001772  0A00               	xorlw	0	; case 0
  3087  001774  B4D8               	btfsc	status,2,c
  3088  001776  EFBF  F00B         	goto	l4492
  3089  00177A  EFE6  F00B         	goto	l4204
  3090  00177E                     l4492:
  3091                           
  3092                           ; Switch size 1, requested type "simple"
  3093                           ; Number of cases is 2, Range of values is 43 to 45
  3094                           ; switch strategies available:
  3095                           ; Name         Instructions Cycles
  3096                           ; simple_byte            7     4 (average)
  3097                           ;	Chosen strategy is simple_byte
  3098  00177E  500E               	movf	??_atoi^0,w,c
  3099  001780  0A2B               	xorlw	43	; case 43
  3100  001782  B4D8               	btfsc	status,2,c
  3101  001784  EFAB  F00B         	goto	l4196
  3102  001788  0A06               	xorlw	6	; case 45
  3103  00178A  B4D8               	btfsc	status,2,c
  3104  00178C  EFA7  F00B         	goto	l4194
  3105  001790  EFE6  F00B         	goto	l4204
  3106  001794                     l4200:
  3107  001794  C019  F005         	movff	atoi@n,___wmul@multiplier
  3108  001798  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  3109  00179C  0E00               	movlw	0
  3110  00179E  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  3111  0017A0  0E0A               	movlw	10
  3112  0017A2  6E07               	movwf	___wmul@multiplicand^0,c
  3113  0017A4  EC30  F013         	call	___wmul	;wreg free
  3114  0017A8  C00C  FFF6         	movff	atoi@s,tblptrl
  3115  0017AC  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3116  0017B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3117  0017B0  6AF8               	clrf	tblptru,c
  3118  0017B2                     	endif
  3119  0017B2                     	if	0	;tblptru may be non-zero
  3120  0017B2                     	endif
  3121  0017B2  0008               	tblrd		*
  3122  0017B4  50F5               	movf	tablat,w,c
  3123  0017B6  5E05               	subwf	?___wmul^0,f,c
  3124  0017B8  0E00               	movlw	0
  3125  0017BA  5A06               	subwfb	(?___wmul+1)^0,f,c
  3126  0017BC  0E30               	movlw	48
  3127  0017BE  2405               	addwf	?___wmul^0,w,c
  3128  0017C0  6E19               	movwf	atoi@n^0,c
  3129  0017C2  0E00               	movlw	0
  3130  0017C4  2006               	addwfc	(?___wmul+1)^0,w,c
  3131  0017C6  6E1A               	movwf	(atoi@n+1)^0,c
  3132  0017C8  EFAB  F00B         	goto	l4196
  3133  0017CC                     l4204:
  3134  0017CC  0ED0               	movlw	208
  3135  0017CE  6E0E               	movwf	??_atoi^0,c
  3136  0017D0  0EFF               	movlw	255
  3137  0017D2  6E0F               	movwf	(??_atoi+1)^0,c
  3138  0017D4  C00C  FFF6         	movff	atoi@s,tblptrl
  3139  0017D8  C00D  FFF7         	movff	atoi@s+1,tblptrh
  3140  0017DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3141  0017DC  6AF8               	clrf	tblptru,c
  3142  0017DE                     	endif
  3143  0017DE                     	if	0	;tblptru may be non-zero
  3144  0017DE                     	endif
  3145  0017DE  0008               	tblrd		*
  3146  0017E0  50F5               	movf	tablat,w,c
  3147  0017E2  6E10               	movwf	(??_atoi+2)^0,c
  3148  0017E4  6A11               	clrf	(??_atoi+3)^0,c
  3149  0017E6  500E               	movf	??_atoi^0,w,c
  3150  0017E8  2610               	addwf	(??_atoi+2)^0,f,c
  3151  0017EA  500F               	movf	(??_atoi+1)^0,w,c
  3152  0017EC  2211               	addwfc	(??_atoi+3)^0,f,c
  3153  0017EE  5011               	movf	(??_atoi+3)^0,w,c
  3154  0017F0  E10A               	bnz	u2790
  3155  0017F2  0E0A               	movlw	10
  3156  0017F4  5C10               	subwf	(??_atoi+2)^0,w,c
  3157  0017F6  A0D8               	btfss	status,0,c
  3158  0017F8  EF00  F00C         	goto	u2791
  3159  0017FC  EF03  F00C         	goto	u2790
  3160  001800                     u2791:
  3161  001800  0E01               	movlw	1
  3162  001802  EF04  F00C         	goto	u2800
  3163  001806                     u2790:
  3164  001806  0E00               	movlw	0
  3165  001808                     u2800:
  3166  001808  6E16               	movwf	_atoi$2122^0,c
  3167  00180A  6A17               	clrf	(_atoi$2122+1)^0,c
  3168  00180C  5016               	movf	_atoi$2122^0,w,c
  3169  00180E  1017               	iorwf	(_atoi$2122+1)^0,w,c
  3170  001810  A4D8               	btfss	status,2,c
  3171  001812  EF0D  F00C         	goto	u2811
  3172  001816  EF0F  F00C         	goto	u2810
  3173  00181A                     u2811:
  3174  00181A  EFCA  F00B         	goto	l4200
  3175  00181E                     u2810:
  3176  00181E  5012               	movf	atoi@neg^0,w,c
  3177  001820  1013               	iorwf	(atoi@neg+1)^0,w,c
  3178  001822  A4D8               	btfss	status,2,c
  3179  001824  EF16  F00C         	goto	u2821
  3180  001828  EF18  F00C         	goto	u2820
  3181  00182C                     u2821:
  3182  00182C  EF26  F00C         	goto	l1544
  3183  001830                     u2820:
  3184  001830  C019  F00E         	movff	atoi@n,??_atoi
  3185  001834  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  3186  001838  1E0E               	comf	??_atoi^0,f,c
  3187  00183A  1E0F               	comf	(??_atoi+1)^0,f,c
  3188  00183C  4A0E               	infsnz	??_atoi^0,f,c
  3189  00183E  2A0F               	incf	(??_atoi+1)^0,f,c
  3190  001840  C00E  F00C         	movff	??_atoi,?_atoi
  3191  001844  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  3192  001848  EF2A  F00C         	goto	l1547
  3193  00184C                     l1544:
  3194  00184C  C019  F00C         	movff	atoi@n,?_atoi
  3195  001850  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  3196  001854                     l1547:
  3197  001854  0012               	return		;funcret
  3198  001856                     __end_of_atoi:
  3199                           	callstack 0
  3200                           
  3201 ;; *************** function _isspace *****************
  3202 ;; Defined at:
  3203 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  c               2    4[COMRAM] int 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  2    4[COMRAM] int 
  3210 ;; Registers used:
  3211 ;;		wreg, status,2, status,0
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3217 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3220 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3221 ;;Total ram usage:        7 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:    4
  3224 ;; This function calls:
  3225 ;;		Nothing
  3226 ;; This function is called by:
  3227 ;;		_atoi
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text16
  3232  002238                     __ptext16:
  3233                           	callstack 0
  3234  002238                     _isspace:
  3235                           	callstack 22
  3236  002238  0E01               	movlw	1
  3237  00223A  6E0B               	movwf	_isspace$2147^0,c
  3238  00223C  0E20               	movlw	32
  3239  00223E  1805               	xorwf	isspace@c^0,w,c
  3240  002240  1006               	iorwf	(isspace@c+1)^0,w,c
  3241  002242  B4D8               	btfsc	status,2,c
  3242  002244  EF26  F011         	goto	u2571
  3243  002248  EF28  F011         	goto	u2570
  3244  00224C                     u2571:
  3245  00224C  EF41  F011         	goto	l4106
  3246  002250                     u2570:
  3247  002250  0EF7               	movlw	247
  3248  002252  6E07               	movwf	??_isspace^0,c
  3249  002254  0EFF               	movlw	255
  3250  002256  6E08               	movwf	(??_isspace+1)^0,c
  3251  002258  C005  F009         	movff	isspace@c,??_isspace+2
  3252  00225C  C006  F00A         	movff	isspace@c+1,??_isspace+3
  3253  002260  5007               	movf	??_isspace^0,w,c
  3254  002262  2609               	addwf	(??_isspace+2)^0,f,c
  3255  002264  5008               	movf	(??_isspace+1)^0,w,c
  3256  002266  220A               	addwfc	(??_isspace+3)^0,f,c
  3257  002268  500A               	movf	(??_isspace+3)^0,w,c
  3258  00226A  E109               	bnz	u2580
  3259  00226C  0E05               	movlw	5
  3260  00226E  5C09               	subwf	(??_isspace+2)^0,w,c
  3261  002270  A0D8               	btfss	status,0,c
  3262  002272  EF3D  F011         	goto	u2581
  3263  002276  EF3F  F011         	goto	u2580
  3264  00227A                     u2581:
  3265  00227A  EF41  F011         	goto	l4106
  3266  00227E                     u2580:
  3267  00227E  0E00               	movlw	0
  3268  002280  6E0B               	movwf	_isspace$2147^0,c
  3269  002282                     l4106:
  3270  002282  C00B  F005         	movff	_isspace$2147,?_isspace
  3271  002286  6A06               	clrf	(?_isspace+1)^0,c
  3272  002288  0012               	return		;funcret
  3273  00228A                     __end_of_isspace:
  3274                           	callstack 0
  3275                           
  3276 ;; *************** function _isdigit *****************
  3277 ;; Defined at:
  3278 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  c               2    4[COMRAM] int 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;		None
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  2    4[COMRAM] int 
  3285 ;; Registers used:
  3286 ;;		wreg, status,2, status,0
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3294 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;Total ram usage:        6 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    4
  3299 ;; This function calls:
  3300 ;;		Nothing
  3301 ;; This function is called by:
  3302 ;;		_vfpfcnvrt
  3303 ;;		_atoi
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text17
  3308  002490                     __ptext17:
  3309                           	callstack 0
  3310  002490                     _isdigit:
  3311                           	callstack 23
  3312  002490  0ED0               	movlw	208
  3313  002492  6E07               	movwf	??_isdigit^0,c
  3314  002494  0EFF               	movlw	255
  3315  002496  6E08               	movwf	(??_isdigit+1)^0,c
  3316  002498  C005  F009         	movff	isdigit@c,??_isdigit+2
  3317  00249C  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  3318  0024A0  5007               	movf	??_isdigit^0,w,c
  3319  0024A2  2609               	addwf	(??_isdigit+2)^0,f,c
  3320  0024A4  5008               	movf	(??_isdigit+1)^0,w,c
  3321  0024A6  220A               	addwfc	(??_isdigit+3)^0,f,c
  3322  0024A8  500A               	movf	(??_isdigit+3)^0,w,c
  3323  0024AA  E10A               	bnz	u2550
  3324  0024AC  0E0A               	movlw	10
  3325  0024AE  5C09               	subwf	(??_isdigit+2)^0,w,c
  3326  0024B0  A0D8               	btfss	status,0,c
  3327  0024B2  EF5D  F012         	goto	u2551
  3328  0024B6  EF60  F012         	goto	u2550
  3329  0024BA                     u2551:
  3330  0024BA  0E01               	movlw	1
  3331  0024BC  EF61  F012         	goto	u2560
  3332  0024C0                     u2550:
  3333  0024C0  0E00               	movlw	0
  3334  0024C2                     u2560:
  3335  0024C2  6E05               	movwf	?_isdigit^0,c
  3336  0024C4  6A06               	clrf	(?_isdigit+1)^0,c
  3337  0024C6  0012               	return		;funcret
  3338  0024C8                     __end_of_isdigit:
  3339                           	callstack 0
  3340                           
  3341 ;; *************** function ___wmul *****************
  3342 ;; Defined at:
  3343 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  multiplier      2    4[COMRAM] unsigned int 
  3346 ;;  multiplicand    2    6[COMRAM] unsigned int 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  product         2    8[COMRAM] unsigned int 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  2    4[COMRAM] unsigned int 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2, status,0, prodl, prodh
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3358 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;Total ram usage:        6 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; Hardware stack levels required when called:    4
  3365 ;; This function calls:
  3366 ;;		Nothing
  3367 ;; This function is called by:
  3368 ;;		_atoi
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text18
  3373  002660                     __ptext18:
  3374                           	callstack 0
  3375  002660                     ___wmul:
  3376                           	callstack 22
  3377  002660  5005               	movf	___wmul@multiplier^0,w,c
  3378  002662  0207               	mulwf	___wmul@multiplicand^0,c
  3379  002664  CFF3 F009          	movff	prodl,___wmul@product
  3380  002668  CFF4 F00A          	movff	prodh,___wmul@product+1
  3381  00266C  5005               	movf	___wmul@multiplier^0,w,c
  3382  00266E  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  3383  002670  50F3               	movf	243,w,c
  3384  002672  260A               	addwf	(___wmul@product+1)^0,f,c
  3385  002674  5006               	movf	(___wmul@multiplier+1)^0,w,c
  3386  002676  0207               	mulwf	___wmul@multiplicand^0,c
  3387  002678  50F3               	movf	243,w,c
  3388  00267A  260A               	addwf	(___wmul@product+1)^0,f,c
  3389  00267C  C009  F005         	movff	___wmul@product,?___wmul
  3390  002680  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  3391  002684  0012               	return		;funcret
  3392  002686                     __end_of___wmul:
  3393                           	callstack 0
  3394                           
  3395 ;; *************** function _SYSTEM_Initialize *****************
  3396 ;; Defined at:
  3397 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;		None
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;		None
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;Total ram usage:        0 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    6
  3418 ;; This function calls:
  3419 ;;		_EUSART_Initialize
  3420 ;;		_I2C_Initialize
  3421 ;;		_INTERRUPT_Initialize
  3422 ;;		_OSCILLATOR_Initialize
  3423 ;;		_PIN_MANAGER_Initialize
  3424 ;; This function is called by:
  3425 ;;		_main
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text19
  3430  002738                     __ptext19:
  3431                           	callstack 0
  3432  002738                     _SYSTEM_Initialize:
  3433                           	callstack 24
  3434  002738                     
  3435                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3436  002738  EC38  F014         	call	_INTERRUPT_Initialize	;wreg free
  3437  00273C                     
  3438                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  3439  00273C  ECA7  F013         	call	_I2C_Initialize	;wreg free
  3440  002740                     
  3441                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  3442  002740  EC7F  F012         	call	_PIN_MANAGER_Initialize	;wreg free
  3443  002744                     
  3444                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  3445  002744  ECEA  F013         	call	_OSCILLATOR_Initialize	;wreg free
  3446  002748                     
  3447                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  3448  002748  EC43  F00F         	call	_EUSART_Initialize	;wreg free
  3449  00274C  0012               	return		;funcret
  3450  00274E                     __end_of_SYSTEM_Initialize:
  3451                           	callstack 0
  3452                           
  3453 ;; *************** function _PIN_MANAGER_Initialize *****************
  3454 ;; Defined at:
  3455 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;		None
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;		None
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      void 
  3462 ;; Registers used:
  3463 ;;		wreg, status,2
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;Total ram usage:        0 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:    4
  3476 ;; This function calls:
  3477 ;;		Nothing
  3478 ;; This function is called by:
  3479 ;;		_SYSTEM_Initialize
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text20
  3484  0024FE                     __ptext20:
  3485                           	callstack 0
  3486  0024FE                     _PIN_MANAGER_Initialize:
  3487                           	callstack 25
  3488  0024FE                     
  3489                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3490  0024FE  0E00               	movlw	0
  3491  002500  6E8D               	movwf	141,c	;volatile
  3492                           
  3493                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  3494  002502  0E00               	movlw	0
  3495  002504  6E8C               	movwf	140,c	;volatile
  3496                           
  3497                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  3498  002506  0E00               	movlw	0
  3499  002508  6E89               	movwf	137,c	;volatile
  3500                           
  3501                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  3502  00250A  0E00               	movlw	0
  3503  00250C  6E8A               	movwf	138,c	;volatile
  3504                           
  3505                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  3506  00250E  0E00               	movlw	0
  3507  002510  6E8B               	movwf	139,c	;volatile
  3508                           
  3509                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  3510  002512  0E07               	movlw	7
  3511  002514  6E96               	movwf	150,c	;volatile
  3512  002516                     
  3513                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  3514  002516  6892               	setf	146,c	;volatile
  3515  002518                     
  3516                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  3517  002518  6893               	setf	147,c	;volatile
  3518                           
  3519                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  3520  00251A  0EBF               	movlw	191
  3521  00251C  6E94               	movwf	148,c	;volatile
  3522  00251E                     
  3523                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  3524  00251E  6895               	setf	149,c	;volatile
  3525  002520                     
  3526                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  3527  002520  687E               	setf	126,c	;volatile
  3528                           
  3529                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  3530  002522  0E1F               	movlw	31
  3531  002524  6E7F               	movwf	127,c	;volatile
  3532                           
  3533                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  3534  002526  0E00               	movlw	0
  3535  002528  6E7C               	movwf	124,c	;volatile
  3536  00252A                     
  3537                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  3538  00252A  8EF1               	bsf	241,7,c	;volatile
  3539  00252C  0012               	return		;funcret
  3540  00252E                     __end_of_PIN_MANAGER_Initialize:
  3541                           	callstack 0
  3542                           
  3543 ;; *************** function _OSCILLATOR_Initialize *****************
  3544 ;; Defined at:
  3545 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;		None
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;		None
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  1    wreg      void 
  3552 ;; Registers used:
  3553 ;;		wreg, status,2
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;Total ram usage:        0 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; Hardware stack levels required when called:    4
  3566 ;; This function calls:
  3567 ;;		Nothing
  3568 ;; This function is called by:
  3569 ;;		_SYSTEM_Initialize
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572                           
  3573                           	psect	text21
  3574  0027D4                     __ptext21:
  3575                           	callstack 0
  3576  0027D4                     _OSCILLATOR_Initialize:
  3577                           	callstack 25
  3578  0027D4                     
  3579                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x60;
  3580  0027D4  0E60               	movlw	96
  3581  0027D6  6ED3               	movwf	211,c	;volatile
  3582                           
  3583                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  3584  0027D8  0E00               	movlw	0
  3585  0027DA  6E9B               	movwf	155,c	;volatile
  3586  0027DC  0012               	return		;funcret
  3587  0027DE                     __end_of_OSCILLATOR_Initialize:
  3588                           	callstack 0
  3589                           
  3590 ;; *************** function _INTERRUPT_Initialize *****************
  3591 ;; Defined at:
  3592 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;		None
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;		None
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  1    wreg      void 
  3599 ;; Registers used:
  3600 ;;		None
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;Total ram usage:        0 bytes
  3611 ;; Hardware stack levels used:    1
  3612 ;; Hardware stack levels required when called:    4
  3613 ;; This function calls:
  3614 ;;		Nothing
  3615 ;; This function is called by:
  3616 ;;		_SYSTEM_Initialize
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           	psect	text22
  3621  002870                     __ptext22:
  3622                           	callstack 0
  3623  002870                     _INTERRUPT_Initialize:
  3624                           	callstack 25
  3625  002870                     
  3626                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  3627  002870  9ED0               	bcf	208,7,c	;volatile
  3628  002872  0012               	return		;funcret
  3629  002874                     __end_of_INTERRUPT_Initialize:
  3630                           	callstack 0
  3631                           
  3632 ;; *************** function _I2C_Initialize *****************
  3633 ;; Defined at:
  3634 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;		None
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;		None
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  1    wreg      void 
  3641 ;; Registers used:
  3642 ;;		wreg, status,2
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;Total ram usage:        0 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; Hardware stack levels required when called:    4
  3655 ;; This function calls:
  3656 ;;		Nothing
  3657 ;; This function is called by:
  3658 ;;		_SYSTEM_Initialize
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text23
  3663  00274E                     __ptext23:
  3664                           	callstack 0
  3665  00274E                     _I2C_Initialize:
  3666                           	callstack 25
  3667  00274E                     
  3668                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  3669  00274E  0E00               	movlw	0
  3670  002750  6EC7               	movwf	199,c	;volatile
  3671                           
  3672                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  3673  002752  0E08               	movlw	8
  3674  002754  6EC6               	movwf	198,c	;volatile
  3675                           
  3676                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  3677  002756  0E00               	movlw	0
  3678  002758  6EC5               	movwf	197,c	;volatile
  3679                           
  3680                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  3681  00275A  0E13               	movlw	19
  3682  00275C  6EC8               	movwf	200,c	;volatile
  3683  00275E                     
  3684                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  3685  00275E  9AC6               	bcf	198,5,c	;volatile
  3686  002760  0012               	return		;funcret
  3687  002762                     __end_of_I2C_Initialize:
  3688                           	callstack 0
  3689                           
  3690 ;; *************** function _EUSART_Initialize *****************
  3691 ;; Defined at:
  3692 ;;		line 88 in file "mcc_generated_files/eusart.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;		None
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;		None
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  1    wreg      void 
  3699 ;; Registers used:
  3700 ;;		wreg, status,2, status,0, cstack
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3710 ;;Total ram usage:        0 bytes
  3711 ;; Hardware stack levels used:    1
  3712 ;; Hardware stack levels required when called:    5
  3713 ;; This function calls:
  3714 ;;		_EUSART_SetErrorHandler
  3715 ;;		_EUSART_SetFramingErrorHandler
  3716 ;;		_EUSART_SetOverrunErrorHandler
  3717 ;;		_EUSART_SetRxInterruptHandler
  3718 ;;		_EUSART_SetTxInterruptHandler
  3719 ;; This function is called by:
  3720 ;;		_SYSTEM_Initialize
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text24
  3725  001E86                     __ptext24:
  3726                           	callstack 0
  3727  001E86                     _EUSART_Initialize:
  3728                           	callstack 24
  3729  001E86                     
  3730                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RC1IE = 0;
  3731  001E86  9A9D               	bcf	157,5,c	;volatile
  3732  001E88                     
  3733                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3734  001E88  0EE0               	movlw	low _EUSART_Receive_ISR
  3735  001E8A  6E05               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
  3736  001E8C  0E19               	movlw	high _EUSART_Receive_ISR
  3737  001E8E  6E06               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
  3738  001E90  ECF4  F013         	call	_EUSART_SetRxInterruptHandler	;wreg free
  3739  001E94                     
  3740                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TX1IE = 0;
  3741  001E94  989D               	bcf	157,4,c	;volatile
  3742                           
  3743                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  3744  001E96  0E62               	movlw	low _EUSART_Transmit_ISR
  3745  001E98  6E05               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
  3746  001E9A  0E23               	movlw	high _EUSART_Transmit_ISR
  3747  001E9C  6E06               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
  3748  001E9E  ECEF  F013         	call	_EUSART_SetTxInterruptHandler	;wreg free
  3749  001EA2                     
  3750                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  3751  001EA2  0E08               	movlw	8
  3752  001EA4  6EB8               	movwf	184,c	;volatile
  3753  001EA6                     
  3754                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  3755  001EA6  0E90               	movlw	144
  3756  001EA8  6EAB               	movwf	171,c	;volatile
  3757  001EAA                     
  3758                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  3759  001EAA  0E24               	movlw	36
  3760  001EAC  6EAC               	movwf	172,c	;volatile
  3761  001EAE                     
  3762                           ;mcc_generated_files/eusart.c: 107:     SPBRG = 0xCF;
  3763  001EAE  0ECF               	movlw	207
  3764  001EB0  6EAF               	movwf	175,c	;volatile
  3765  001EB2                     
  3766                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  3767  001EB2  0E00               	movlw	0
  3768  001EB4  6EB0               	movwf	176,c	;volatile
  3769  001EB6                     
  3770                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  3771  001EB6  0EA0               	movlw	low _EUSART_DefaultFramingErrorHandler
  3772  001EB8  6E05               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  3773  001EBA  0E28               	movlw	high _EUSART_DefaultFramingErrorHandler
  3774  001EBC  6E06               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  3775  001EBE  ECFE  F013         	call	_EUSART_SetFramingErrorHandler	;wreg free
  3776  001EC2                     
  3777                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  3778  001EC2  0E64               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3779  001EC4  6E05               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  3780  001EC6  0E28               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3781  001EC8  6E06               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3782  001ECA  ECF9  F013         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  3783  001ECE                     
  3784                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  3785  001ECE  0E6A               	movlw	low _EUSART_DefaultErrorHandler
  3786  001ED0  6E05               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  3787  001ED2  0E28               	movlw	high _EUSART_DefaultErrorHandler
  3788  001ED4  6E06               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  3789  001ED6  EC03  F014         	call	_EUSART_SetErrorHandler	;wreg free
  3790                           
  3791                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  3792  001EDA  0E00               	movlw	0
  3793  001EDC  0100               	movlb	0	; () banked
  3794  001EDE  6FA9               	movwf	_eusartRxLastError& (0+255),b	;volatile
  3795                           
  3796                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  3797  001EE0  0E00               	movlw	0
  3798  001EE2  6E5A               	movwf	_eusartTxHead^0,c	;volatile
  3799                           
  3800                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  3801  001EE4  0E00               	movlw	0
  3802  001EE6  6E59               	movwf	_eusartTxTail^0,c	;volatile
  3803                           
  3804                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  3805  001EE8  0E08               	movlw	8
  3806  001EEA  6FFC               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
  3807                           
  3808                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  3809  001EEC  0E00               	movlw	0
  3810  001EEE  6E58               	movwf	_eusartRxHead^0,c	;volatile
  3811                           
  3812                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  3813  001EF0  0E00               	movlw	0
  3814  001EF2  6E57               	movwf	_eusartRxTail^0,c	;volatile
  3815                           
  3816                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  3817  001EF4  0E00               	movlw	0
  3818  001EF6  6FAA               	movwf	_eusartRxCount& (0+255),b	;volatile
  3819  001EF8                     
  3820                           ; BSR set to: 0
  3821                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RC1IE = 1;
  3822  001EF8  8A9D               	bsf	157,5,c	;volatile
  3823  001EFA                     
  3824                           ; BSR set to: 0
  3825  001EFA  0012               	return		;funcret
  3826  001EFC                     __end_of_EUSART_Initialize:
  3827                           	callstack 0
  3828                           
  3829 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3830 ;; Defined at:
  3831 ;;		line 285 in file "mcc_generated_files/eusart.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3834 ;;		 -> EUSART_Transmit_ISR(1), 
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;		None
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      void 
  3839 ;; Registers used:
  3840 ;;		wreg, status,2, status,0
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3846 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3849 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;Total ram usage:        2 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; Hardware stack levels required when called:    4
  3853 ;; This function calls:
  3854 ;;		Nothing
  3855 ;; This function is called by:
  3856 ;;		_EUSART_Initialize
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text25
  3861  0027DE                     __ptext25:
  3862                           	callstack 0
  3863  0027DE                     _EUSART_SetTxInterruptHandler:
  3864                           	callstack 24
  3865  0027DE                     
  3866                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  3867  0027DE  C005  F0FA         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  3868  0027E2  C006  F0FB         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  3869  0027E6  0012               	return		;funcret
  3870  0027E8                     __end_of_EUSART_SetTxInterruptHandler:
  3871                           	callstack 0
  3872                           
  3873 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3874 ;; Defined at:
  3875 ;;		line 289 in file "mcc_generated_files/eusart.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3878 ;;		 -> EUSART_Receive_ISR(1), 
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;		None
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      void 
  3883 ;; Registers used:
  3884 ;;		wreg, status,2, status,0
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3893 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;Total ram usage:        2 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; Hardware stack levels required when called:    4
  3897 ;; This function calls:
  3898 ;;		Nothing
  3899 ;; This function is called by:
  3900 ;;		_EUSART_Initialize
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text26
  3905  0027E8                     __ptext26:
  3906                           	callstack 0
  3907  0027E8                     _EUSART_SetRxInterruptHandler:
  3908                           	callstack 24
  3909  0027E8                     
  3910                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  3911  0027E8  C005  F0F8         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  3912  0027EC  C006  F0F9         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  3913  0027F0  0012               	return		;funcret
  3914  0027F2                     __end_of_EUSART_SetRxInterruptHandler:
  3915                           	callstack 0
  3916                           
  3917 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3918 ;; Defined at:
  3919 ;;		line 277 in file "mcc_generated_files/eusart.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3922 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;		None
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      void 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2, status,0
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3937 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3938 ;;Total ram usage:        2 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; Hardware stack levels required when called:    4
  3941 ;; This function calls:
  3942 ;;		Nothing
  3943 ;; This function is called by:
  3944 ;;		_EUSART_Initialize
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           	psect	text27
  3949  0027F2                     __ptext27:
  3950                           	callstack 0
  3951  0027F2                     _EUSART_SetOverrunErrorHandler:
  3952                           	callstack 24
  3953  0027F2                     
  3954                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  3955  0027F2  C005  F0F4         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  3956  0027F6  C006  F0F5         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  3957  0027FA  0012               	return		;funcret
  3958  0027FC                     __end_of_EUSART_SetOverrunErrorHandler:
  3959                           	callstack 0
  3960                           
  3961 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3962 ;; Defined at:
  3963 ;;		line 273 in file "mcc_generated_files/eusart.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3966 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;		None
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  1    wreg      void 
  3971 ;; Registers used:
  3972 ;;		wreg, status,2, status,0
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3978 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3981 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3982 ;;Total ram usage:        2 bytes
  3983 ;; Hardware stack levels used:    1
  3984 ;; Hardware stack levels required when called:    4
  3985 ;; This function calls:
  3986 ;;		Nothing
  3987 ;; This function is called by:
  3988 ;;		_EUSART_Initialize
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992                           	psect	text28
  3993  0027FC                     __ptext28:
  3994                           	callstack 0
  3995  0027FC                     _EUSART_SetFramingErrorHandler:
  3996                           	callstack 24
  3997  0027FC                     
  3998                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  3999  0027FC  C005  F0F6         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  4000  002800  C006  F0F7         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  4001  002804  0012               	return		;funcret
  4002  002806                     __end_of_EUSART_SetFramingErrorHandler:
  4003                           	callstack 0
  4004                           
  4005 ;; *************** function _EUSART_SetErrorHandler *****************
  4006 ;; Defined at:
  4007 ;;		line 281 in file "mcc_generated_files/eusart.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  4010 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;		None
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  1    wreg      void 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4022 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4025 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4026 ;;Total ram usage:        2 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; Hardware stack levels required when called:    4
  4029 ;; This function calls:
  4030 ;;		Nothing
  4031 ;; This function is called by:
  4032 ;;		_EUSART_Initialize
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text29
  4037  002806                     __ptext29:
  4038                           	callstack 0
  4039  002806                     _EUSART_SetErrorHandler:
  4040                           	callstack 24
  4041  002806                     
  4042                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  4043  002806  C005  F0F2         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  4044  00280A  C006  F0F3         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  4045  00280E  0012               	return		;funcret
  4046  002810                     __end_of_EUSART_SetErrorHandler:
  4047                           	callstack 0
  4048                           
  4049 ;; *************** function _MCP79410_init *****************
  4050 ;; Defined at:
  4051 ;;		line 41 in file "mcp79410.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      void 
  4058 ;; Registers used:
  4059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;Total ram usage:        2 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:   13
  4072 ;; This function calls:
  4073 ;;		_I2C_Write1ByteRegister
  4074 ;; This function is called by:
  4075 ;;		_main
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           	psect	text30
  4080  00228A                     __ptext30:
  4081                           	callstack 0
  4082  00228A                     _MCP79410_init:
  4083                           	callstack 17
  4084  00228A                     
  4085                           ;mcp79410.c: 42:     I2C_Write1ByteRegister(0x6F, 0x03, 0x08);
  4086  00228A  0E03               	movlw	3
  4087  00228C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  4088  00228E  0E08               	movlw	8
  4089  002290  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  4090  002292  0E6F               	movlw	111
  4091  002294  ECF0  F00F         	call	_I2C_Write1ByteRegister
  4092                           
  4093                           ;mcp79410.c: 43:     I2C_Write1ByteRegister(0x6F, 0x00, 0x80);
  4094  002298  0E00               	movlw	0
  4095  00229A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  4096  00229C  0E80               	movlw	128
  4097  00229E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  4098  0022A0  0E6F               	movlw	111
  4099  0022A2  ECF0  F00F         	call	_I2C_Write1ByteRegister
  4100                           
  4101                           ;mcp79410.c: 44:     I2C_Write1ByteRegister(0x6F, 0x02, 0x01);
  4102  0022A6  0E02               	movlw	2
  4103  0022A8  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  4104  0022AA  0E01               	movlw	1
  4105  0022AC  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  4106  0022AE  0E6F               	movlw	111
  4107  0022B0  ECF0  F00F         	call	_I2C_Write1ByteRegister
  4108                           
  4109                           ;mcp79410.c: 45:     I2C_Write1ByteRegister(0x6F, 0x07, 0x40);
  4110  0022B4  0E07               	movlw	7
  4111  0022B6  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  4112  0022B8  0E40               	movlw	64
  4113  0022BA  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  4114  0022BC  0E6F               	movlw	111
  4115  0022BE  ECF0  F00F         	call	_I2C_Write1ByteRegister
  4116  0022C2                     
  4117                           ;mcp79410.c: 46:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  4118  0022C2  0E0B               	movlw	11
  4119  0022C4  6E1A               	movwf	(??_MCP79410_init+1)^0,c
  4120  0022C6  0E26               	movlw	38
  4121  0022C8  6E19               	movwf	??_MCP79410_init^0,c
  4122  0022CA  0E5E               	movlw	94
  4123  0022CC                     u2967:
  4124  0022CC  2EE8               	decfsz	wreg,f,c
  4125  0022CE  D7FE               	bra	u2967
  4126  0022D0  2E19               	decfsz	??_MCP79410_init^0,f,c
  4127  0022D2  D7FC               	bra	u2967
  4128  0022D4  2E1A               	decfsz	(??_MCP79410_init+1)^0,f,c
  4129  0022D6  D7FA               	bra	u2967
  4130  0022D8  0012               	return		;funcret
  4131  0022DA                     __end_of_MCP79410_init:
  4132                           	callstack 0
  4133                           
  4134 ;; *************** function _I2C_Write1ByteRegister *****************
  4135 ;; Defined at:
  4136 ;;		line 91 in file "mcc_generated_files/examples/i2c_master_example.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  address         1    wreg     unsigned char 
  4139 ;;  reg             1   21[COMRAM] unsigned char 
  4140 ;;  data            1   22[COMRAM] unsigned char 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  address         1   23[COMRAM] unsigned char 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      void 
  4145 ;; Registers used:
  4146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4152 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4155 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;Total ram usage:        3 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:   12
  4159 ;; This function calls:
  4160 ;;		_I2C_Close
  4161 ;;		_I2C_MasterWrite
  4162 ;;		_I2C_Open
  4163 ;;		_I2C_SetAddressNackCallback
  4164 ;;		_I2C_SetBuffer
  4165 ;;		_I2C_SetDataCompleteCallback
  4166 ;; This function is called by:
  4167 ;;		_MCP79410_init
  4168 ;;		_MCP79410_set_date_time
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           	psect	text31
  4173  001FE0                     __ptext31:
  4174                           	callstack 0
  4175  001FE0                     _I2C_Write1ByteRegister:
  4176                           	callstack 17
  4177                           
  4178                           ;incstack = 0
  4179                           ;I2C_Write1ByteRegister@address stored from wreg
  4180  001FE0  6E18               	movwf	I2C_Write1ByteRegister@address^0,c
  4181  001FE2                     l3534:
  4182  001FE2  5018               	movf	I2C_Write1ByteRegister@address^0,w,c
  4183  001FE4  EC41  F00E         	call	_I2C_Open
  4184  001FE8  0900               	iorlw	0
  4185  001FEA  B4D8               	btfsc	status,2,c
  4186  001FEC  EFFA  F00F         	goto	u2011
  4187  001FF0  EFFC  F00F         	goto	u2010
  4188  001FF4                     u2011:
  4189  001FF4  EFF1  F00F         	goto	l3534
  4190  001FF8                     u2010:
  4191  001FF8                     
  4192                           ;mcc_generated_files/examples/i2c_master_example.c: 94:     I2C_SetDataCompleteCallback(
      +                          wr1RegCompleteHandler,&data);
  4193  001FF8  0E2E               	movlw	low _wr1RegCompleteHandler
  4194  001FFA  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  4195  001FFC  0E25               	movlw	high _wr1RegCompleteHandler
  4196  001FFE  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  4197  002000  0E17               	movlw	low I2C_Write1ByteRegister@data
  4198  002002  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  4199  002004  0E00               	movlw	high I2C_Write1ByteRegister@data
  4200  002006  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  4201  002008  EC90  F013         	call	_I2C_SetDataCompleteCallback	;wreg free
  4202  00200C                     
  4203                           ;mcc_generated_files/examples/i2c_master_example.c: 95:     I2C_SetBuffer(&reg,1);
  4204  00200C  0E16               	movlw	low I2C_Write1ByteRegister@reg
  4205  00200E  6E05               	movwf	I2C_SetBuffer@buffer^0,c
  4206  002010  0E00               	movlw	high I2C_Write1ByteRegister@reg
  4207  002012  6E06               	movwf	(I2C_SetBuffer@buffer+1)^0,c
  4208  002014  0E00               	movlw	0
  4209  002016  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  4210  002018  0E01               	movlw	1
  4211  00201A  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  4212  00201C  EC43  F013         	call	_I2C_SetBuffer	;wreg free
  4213  002020                     
  4214                           ;mcc_generated_files/examples/i2c_master_example.c: 96:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  4215  002020  0E00               	movlw	0
  4216  002022  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
  4217  002024  0E00               	movlw	0
  4218  002026  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  4219  002028  0E00               	movlw	0
  4220  00202A  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  4221  00202C  0E00               	movlw	0
  4222  00202E  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  4223  002030  EC84  F013         	call	_I2C_SetAddressNackCallback	;wreg free
  4224  002034                     
  4225                           ;mcc_generated_files/examples/i2c_master_example.c: 97:     I2C_MasterWrite();
  4226  002034  EC08  F014         	call	_I2C_MasterWrite	;wreg free
  4227  002038                     l3544:
  4228  002038  ECEF  F012         	call	_I2C_Close	;wreg free
  4229  00203C  06E8               	decf	wreg,f,c
  4230  00203E  B4D8               	btfsc	status,2,c
  4231  002040  EF24  F010         	goto	u2021
  4232  002044  EF26  F010         	goto	u2020
  4233  002048                     u2021:
  4234  002048  EF1C  F010         	goto	l3544
  4235  00204C                     u2020:
  4236  00204C  0012               	return		;funcret
  4237  00204E                     __end_of_I2C_Write1ByteRegister:
  4238                           	callstack 0
  4239                           
  4240 ;; *************** function _MCP79410_get_time *****************
  4241 ;; Defined at:
  4242 ;;		line 86 in file "mcp79410.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  hour            2   24[COMRAM] PTR unsigned char 
  4245 ;;		 -> hour(1), 
  4246 ;;  min             2   26[COMRAM] PTR unsigned char 
  4247 ;;		 -> min(1), 
  4248 ;;  sec             2   28[COMRAM] PTR unsigned char 
  4249 ;;		 -> sec(1), 
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;		None
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  1    wreg      void 
  4254 ;; Registers used:
  4255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4261 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4264 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4265 ;;Total ram usage:        6 bytes
  4266 ;; Hardware stack levels used:    1
  4267 ;; Hardware stack levels required when called:   13
  4268 ;; This function calls:
  4269 ;;		_I2C_Read1ByteRegister
  4270 ;; This function is called by:
  4271 ;;		_main
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           	psect	text32
  4276  001D10                     __ptext32:
  4277                           	callstack 0
  4278  001D10                     _MCP79410_get_time:
  4279                           	callstack 17
  4280  001D10                     
  4281                           ;mcp79410.c: 87:                         uint8_t *hour,;mcp79410.c: 88:                 
      +                                  uint8_t *min,;mcp79410.c: 89:                         uint8_t *sec){;mcp79410.c:
      +                           91:     *sec = I2C_Read1ByteRegister(0x6F,0x00);
  4282  001D10  0E00               	movlw	0
  4283  001D12  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  4284  001D14  0E6F               	movlw	111
  4285  001D16  EC7E  F00F         	call	_I2C_Read1ByteRegister
  4286  001D1A  C01D  FFD9         	movff	MCP79410_get_time@sec,fsr2l
  4287  001D1E  C01E  FFDA         	movff	MCP79410_get_time@sec+1,fsr2h
  4288  001D22  6EDF               	movwf	indf2,c
  4289  001D24                     
  4290                           ;mcp79410.c: 92:     *sec = *sec & 0b01111111;
  4291  001D24  C01D  FFD9         	movff	MCP79410_get_time@sec,fsr2l
  4292  001D28  C01E  FFDA         	movff	MCP79410_get_time@sec+1,fsr2h
  4293  001D2C  50DF               	movf	indf2,w,c
  4294  001D2E  0B7F               	andlw	127
  4295  001D30  C01D  FFD9         	movff	MCP79410_get_time@sec,fsr2l
  4296  001D34  C01E  FFDA         	movff	MCP79410_get_time@sec+1,fsr2h
  4297  001D38  6EDF               	movwf	indf2,c
  4298  001D3A                     
  4299                           ;mcp79410.c: 94:     *min = I2C_Read1ByteRegister(0x6F,0x01);
  4300  001D3A  0E01               	movlw	1
  4301  001D3C  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  4302  001D3E  0E6F               	movlw	111
  4303  001D40  EC7E  F00F         	call	_I2C_Read1ByteRegister
  4304  001D44  C01B  FFD9         	movff	MCP79410_get_time@min,fsr2l
  4305  001D48  C01C  FFDA         	movff	MCP79410_get_time@min+1,fsr2h
  4306  001D4C  6EDF               	movwf	indf2,c
  4307                           
  4308                           ;mcp79410.c: 95:     *min = *min & 0b01111111;
  4309  001D4E  C01B  FFD9         	movff	MCP79410_get_time@min,fsr2l
  4310  001D52  C01C  FFDA         	movff	MCP79410_get_time@min+1,fsr2h
  4311  001D56  50DF               	movf	indf2,w,c
  4312  001D58  0B7F               	andlw	127
  4313  001D5A  C01B  FFD9         	movff	MCP79410_get_time@min,fsr2l
  4314  001D5E  C01C  FFDA         	movff	MCP79410_get_time@min+1,fsr2h
  4315  001D62  6EDF               	movwf	indf2,c
  4316  001D64                     
  4317                           ;mcp79410.c: 97:     *hour = I2C_Read1ByteRegister(0x6F,0x02);
  4318  001D64  0E02               	movlw	2
  4319  001D66  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  4320  001D68  0E6F               	movlw	111
  4321  001D6A  EC7E  F00F         	call	_I2C_Read1ByteRegister
  4322  001D6E  C019  FFD9         	movff	MCP79410_get_time@hour,fsr2l
  4323  001D72  C01A  FFDA         	movff	MCP79410_get_time@hour+1,fsr2h
  4324  001D76  6EDF               	movwf	indf2,c
  4325  001D78                     
  4326                           ;mcp79410.c: 98:     *hour = *hour & 0b00111111;
  4327  001D78  C019  FFD9         	movff	MCP79410_get_time@hour,fsr2l
  4328  001D7C  C01A  FFDA         	movff	MCP79410_get_time@hour+1,fsr2h
  4329  001D80  50DF               	movf	indf2,w,c
  4330  001D82  0B3F               	andlw	63
  4331  001D84  C019  FFD9         	movff	MCP79410_get_time@hour,fsr2l
  4332  001D88  C01A  FFDA         	movff	MCP79410_get_time@hour+1,fsr2h
  4333  001D8C  6EDF               	movwf	indf2,c
  4334  001D8E  0012               	return		;funcret
  4335  001D90                     __end_of_MCP79410_get_time:
  4336                           	callstack 0
  4337                           
  4338 ;; *************** function _MCP79410_get_date *****************
  4339 ;; Defined at:
  4340 ;;		line 72 in file "mcp79410.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  day             2   24[COMRAM] PTR unsigned char 
  4343 ;;		 -> day(1), 
  4344 ;;  mouth           2   26[COMRAM] PTR unsigned char 
  4345 ;;		 -> month(1), 
  4346 ;;  year            2   28[COMRAM] PTR unsigned char 
  4347 ;;		 -> year(1), 
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;		None
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  1    wreg      void 
  4352 ;; Registers used:
  4353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4359 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4362 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;Total ram usage:        6 bytes
  4364 ;; Hardware stack levels used:    1
  4365 ;; Hardware stack levels required when called:   13
  4366 ;; This function calls:
  4367 ;;		_I2C_Read1ByteRegister
  4368 ;; This function is called by:
  4369 ;;		_main
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text33
  4374  00204E                     __ptext33:
  4375                           	callstack 0
  4376  00204E                     _MCP79410_get_date:
  4377                           	callstack 17
  4378  00204E                     
  4379                           ;mcp79410.c: 73:                         uint8_t *day,;mcp79410.c: 74:                  
      +                                 uint8_t *mouth,;mcp79410.c: 75:                         uint8_t *year){;mcp79410.
      +                          c: 77:     *day = I2C_Read1ByteRegister(0x6F,0x04);
  4380  00204E  0E04               	movlw	4
  4381  002050  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  4382  002052  0E6F               	movlw	111
  4383  002054  EC7E  F00F         	call	_I2C_Read1ByteRegister
  4384  002058  C019  FFD9         	movff	MCP79410_get_date@day,fsr2l
  4385  00205C  C01A  FFDA         	movff	MCP79410_get_date@day+1,fsr2h
  4386  002060  6EDF               	movwf	indf2,c
  4387  002062                     
  4388                           ;mcp79410.c: 78:     *day = *day & 0b00111111;
  4389  002062  C019  FFD9         	movff	MCP79410_get_date@day,fsr2l
  4390  002066  C01A  FFDA         	movff	MCP79410_get_date@day+1,fsr2h
  4391  00206A  50DF               	movf	indf2,w,c
  4392  00206C  0B3F               	andlw	63
  4393  00206E  C019  FFD9         	movff	MCP79410_get_date@day,fsr2l
  4394  002072  C01A  FFDA         	movff	MCP79410_get_date@day+1,fsr2h
  4395  002076  6EDF               	movwf	indf2,c
  4396  002078                     
  4397                           ;mcp79410.c: 80:     *mouth = I2C_Read1ByteRegister(0x6F,0x05);
  4398  002078  0E05               	movlw	5
  4399  00207A  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  4400  00207C  0E6F               	movlw	111
  4401  00207E  EC7E  F00F         	call	_I2C_Read1ByteRegister
  4402  002082  C01B  FFD9         	movff	MCP79410_get_date@mouth,fsr2l
  4403  002086  C01C  FFDA         	movff	MCP79410_get_date@mouth+1,fsr2h
  4404  00208A  6EDF               	movwf	indf2,c
  4405                           
  4406                           ;mcp79410.c: 81:     *mouth = *mouth & 0b00011111;
  4407  00208C  C01B  FFD9         	movff	MCP79410_get_date@mouth,fsr2l
  4408  002090  C01C  FFDA         	movff	MCP79410_get_date@mouth+1,fsr2h
  4409  002094  50DF               	movf	indf2,w,c
  4410  002096  0B1F               	andlw	31
  4411  002098  C01B  FFD9         	movff	MCP79410_get_date@mouth,fsr2l
  4412  00209C  C01C  FFDA         	movff	MCP79410_get_date@mouth+1,fsr2h
  4413  0020A0  6EDF               	movwf	indf2,c
  4414  0020A2                     
  4415                           ;mcp79410.c: 83:     *year = I2C_Read1ByteRegister(0x6F,0x06);
  4416  0020A2  0E06               	movlw	6
  4417  0020A4  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  4418  0020A6  0E6F               	movlw	111
  4419  0020A8  EC7E  F00F         	call	_I2C_Read1ByteRegister
  4420  0020AC  C01D  FFD9         	movff	MCP79410_get_date@year,fsr2l
  4421  0020B0  C01E  FFDA         	movff	MCP79410_get_date@year+1,fsr2h
  4422  0020B4  6EDF               	movwf	indf2,c
  4423  0020B6  0012               	return		;funcret
  4424  0020B8                     __end_of_MCP79410_get_date:
  4425                           	callstack 0
  4426                           
  4427 ;; *************** function _I2C_Read1ByteRegister *****************
  4428 ;; Defined at:
  4429 ;;		line 63 in file "mcc_generated_files/examples/i2c_master_example.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;  address         1    wreg     unsigned char 
  4432 ;;  reg             1   21[COMRAM] unsigned char 
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;  address         1   22[COMRAM] unsigned char 
  4435 ;;  returnValue     1   23[COMRAM] unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      unsigned char 
  4438 ;; Registers used:
  4439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4445 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4448 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4449 ;;Total ram usage:        3 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:   12
  4452 ;; This function calls:
  4453 ;;		_I2C_Close
  4454 ;;		_I2C_MasterWrite
  4455 ;;		_I2C_Open
  4456 ;;		_I2C_SetAddressNackCallback
  4457 ;;		_I2C_SetBuffer
  4458 ;;		_I2C_SetDataCompleteCallback
  4459 ;; This function is called by:
  4460 ;;		_MCP79410_get_date
  4461 ;;		_MCP79410_get_time
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           	psect	text34
  4466  001EFC                     __ptext34:
  4467                           	callstack 0
  4468  001EFC                     _I2C_Read1ByteRegister:
  4469                           	callstack 17
  4470                           
  4471                           ;incstack = 0
  4472                           ;I2C_Read1ByteRegister@address stored from wreg
  4473  001EFC  6E17               	movwf	I2C_Read1ByteRegister@address^0,c
  4474  001EFE                     
  4475                           ;mcc_generated_files/examples/i2c_master_example.c: 63: uint8_t I2C_Read1ByteRegister(i2
      +                          c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 64:
      +                           {;mcc_generated_files/examples/i2c_master_example.c: 65:     uint8_t returnValue = 0x00
      +                          ;
  4476  001EFE  0E00               	movlw	0
  4477  001F00  6E18               	movwf	I2C_Read1ByteRegister@returnValue^0,c
  4478  001F02                     l3516:
  4479  001F02  5017               	movf	I2C_Read1ByteRegister@address^0,w,c
  4480  001F04  EC41  F00E         	call	_I2C_Open
  4481  001F08  0900               	iorlw	0
  4482  001F0A  B4D8               	btfsc	status,2,c
  4483  001F0C  EF8A  F00F         	goto	u1991
  4484  001F10  EF8C  F00F         	goto	u1990
  4485  001F14                     u1991:
  4486  001F14  EF81  F00F         	goto	l3516
  4487  001F18                     u1990:
  4488  001F18                     
  4489                           ;mcc_generated_files/examples/i2c_master_example.c: 68:     I2C_SetDataCompleteCallback(
      +                          rd1RegCompleteHandler,&returnValue);
  4490  001F18  0E86               	movlw	low _rd1RegCompleteHandler
  4491  001F1A  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  4492  001F1C  0E25               	movlw	high _rd1RegCompleteHandler
  4493  001F1E  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  4494  001F20  0E18               	movlw	low I2C_Read1ByteRegister@returnValue
  4495  001F22  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  4496  001F24  0E00               	movlw	high I2C_Read1ByteRegister@returnValue
  4497  001F26  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  4498  001F28  EC90  F013         	call	_I2C_SetDataCompleteCallback	;wreg free
  4499  001F2C                     
  4500                           ;mcc_generated_files/examples/i2c_master_example.c: 69:     I2C_SetBuffer(&reg,1);
  4501  001F2C  0E16               	movlw	low I2C_Read1ByteRegister@reg
  4502  001F2E  6E05               	movwf	I2C_SetBuffer@buffer^0,c
  4503  001F30  0E00               	movlw	high I2C_Read1ByteRegister@reg
  4504  001F32  6E06               	movwf	(I2C_SetBuffer@buffer+1)^0,c
  4505  001F34  0E00               	movlw	0
  4506  001F36  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  4507  001F38  0E01               	movlw	1
  4508  001F3A  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  4509  001F3C  EC43  F013         	call	_I2C_SetBuffer	;wreg free
  4510  001F40                     
  4511                           ;mcc_generated_files/examples/i2c_master_example.c: 70:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  4512  001F40  0E00               	movlw	0
  4513  001F42  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
  4514  001F44  0E00               	movlw	0
  4515  001F46  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  4516  001F48  0E00               	movlw	0
  4517  001F4A  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  4518  001F4C  0E00               	movlw	0
  4519  001F4E  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  4520  001F50  EC84  F013         	call	_I2C_SetAddressNackCallback	;wreg free
  4521  001F54                     
  4522                           ;mcc_generated_files/examples/i2c_master_example.c: 71:     I2C_MasterWrite();
  4523  001F54  EC08  F014         	call	_I2C_MasterWrite	;wreg free
  4524  001F58                     l3526:
  4525  001F58  ECEF  F012         	call	_I2C_Close	;wreg free
  4526  001F5C  06E8               	decf	wreg,f,c
  4527  001F5E  B4D8               	btfsc	status,2,c
  4528  001F60  EFB4  F00F         	goto	u2001
  4529  001F64  EFB6  F00F         	goto	u2000
  4530  001F68                     u2001:
  4531  001F68  EFAC  F00F         	goto	l3526
  4532  001F6C                     u2000:
  4533  001F6C                     
  4534                           ;mcc_generated_files/examples/i2c_master_example.c: 74:     return returnValue;
  4535  001F6C  5018               	movf	I2C_Read1ByteRegister@returnValue^0,w,c
  4536  001F6E  0012               	return		;funcret
  4537  001F70                     __end_of_I2C_Read1ByteRegister:
  4538                           	callstack 0
  4539                           
  4540 ;; *************** function _I2C_SetAddressNackCallback *****************
  4541 ;; Defined at:
  4542 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
  4545 ;;		 -> Absolute function(1), 
  4546 ;;  ptr             2   11[COMRAM] PTR void 
  4547 ;;		 -> NULL(0), 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;		None
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      void 
  4552 ;; Registers used:
  4553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4559 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4563 ;;Total ram usage:        4 bytes
  4564 ;; Hardware stack levels used:    1
  4565 ;; Hardware stack levels required when called:    5
  4566 ;; This function calls:
  4567 ;;		_I2C_SetCallback
  4568 ;; This function is called by:
  4569 ;;		_I2C_Read1ByteRegister
  4570 ;;		_I2C_Write1ByteRegister
  4571 ;;		_I2C_Read2ByteRegister
  4572 ;;		_I2C_Write2ByteRegister
  4573 ;;		_I2C_WriteNBytes
  4574 ;;		_I2C_ReadDataBlock
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           	psect	text35
  4579  002708                     __ptext35:
  4580                           	callstack 0
  4581  002708                     _I2C_SetAddressNackCallback:
  4582                           	callstack 23
  4583  002708                     
  4584                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  4585  002708  C00A  F005         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  4586  00270C  C00B  F006         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  4587  002710  C00C  F007         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  4588  002714  C00D  F008         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  4589  002718  0E02               	movlw	2
  4590  00271A  EC06  F00F         	call	_I2C_SetCallback
  4591  00271E  0012               	return		;funcret
  4592  002720                     __end_of_I2C_SetAddressNackCallback:
  4593                           	callstack 0
  4594                           
  4595 ;; *************** function _I2C_Open *****************
  4596 ;; Defined at:
  4597 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;  address         1    wreg     unsigned char 
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;  address         1    4[COMRAM] unsigned char 
  4602 ;;  returnValue     1    5[COMRAM] enum E353
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1    wreg      enum E353
  4605 ;; Registers used:
  4606 ;;		wreg, status,2, status,0, cstack
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;Total ram usage:        2 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; Hardware stack levels required when called:    5
  4619 ;; This function calls:
  4620 ;;		_I2C_MasterClearIrq
  4621 ;;		_I2C_MasterOpen
  4622 ;; This function is called by:
  4623 ;;		_I2C_Read1ByteRegister
  4624 ;;		_I2C_Write1ByteRegister
  4625 ;;		_I2C_Read2ByteRegister
  4626 ;;		_I2C_Write2ByteRegister
  4627 ;;		_I2C_WriteNBytes
  4628 ;;		_I2C_ReadNBytes
  4629 ;;		_I2C_ReadDataBlock
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text36
  4634  001C82                     __ptext36:
  4635                           	callstack 0
  4636  001C82                     _I2C_Open:
  4637                           	callstack 23
  4638                           
  4639                           ;incstack = 0
  4640                           ;I2C_Open@address stored from wreg
  4641  001C82  6E05               	movwf	I2C_Open@address^0,c
  4642  001C84                     
  4643                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  4644  001C84  0E01               	movlw	1
  4645  001C86  6E06               	movwf	I2C_Open@returnValue^0,c
  4646  001C88                     
  4647                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  4648  001C88  0100               	movlb	0	; () banked
  4649  001C8A  B583               	btfsc	(_I2C_Status+35)& (0+255),2,b
  4650  001C8C  EF4A  F00E         	goto	u1851
  4651  001C90  EF4C  F00E         	goto	u1850
  4652  001C94                     u1851:
  4653  001C94  EF86  F00E         	goto	l3368
  4654  001C98                     u1850:
  4655  001C98                     
  4656                           ; BSR set to: 0
  4657                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  4658  001C98  C005  F07C         	movff	I2C_Open@address,_I2C_Status+28
  4659  001C9C                     
  4660                           ; BSR set to: 0
  4661                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  4662  001C9C  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  4663  001C9E                     
  4664                           ; BSR set to: 0
  4665                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  4666  001C9E  8583               	bsf	(_I2C_Status+35)& (0+255),2,b
  4667  001CA0                     
  4668                           ; BSR set to: 0
  4669                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  4670  001CA0  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  4671  001CA2                     
  4672                           ; BSR set to: 0
  4673                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  4674  001CA2  0E0E               	movlw	14
  4675  001CA4  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4676  001CA6                     
  4677                           ; BSR set to: 0
  4678                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  4679  001CA6  0E01               	movlw	1
  4680  001CA8  6F7B               	movwf	(_I2C_Status+27)& (0+255),b
  4681  001CAA  0EF4               	movlw	244
  4682  001CAC  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
  4683  001CAE                     
  4684                           ; BSR set to: 0
  4685                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  4686  001CAE  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  4687  001CB0                     
  4688                           ; BSR set to: 0
  4689                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  4690  001CB0  0E84               	movlw	low _I2C_CallbackReturnStop
  4691  001CB2  6F60               	movwf	_I2C_Status& (0+255),b
  4692  001CB4  0E28               	movlw	high _I2C_CallbackReturnStop
  4693  001CB6  6F61               	movwf	(_I2C_Status+1)& (0+255),b
  4694  001CB8                     
  4695                           ; BSR set to: 0
  4696                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  4697  001CB8  0E00               	movlw	0
  4698  001CBA  6F6C               	movwf	(_I2C_Status+12)& (0+255),b
  4699  001CBC  0E00               	movlw	0
  4700  001CBE  6F6D               	movwf	(_I2C_Status+13)& (0+255),b
  4701  001CC0                     
  4702                           ; BSR set to: 0
  4703                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  4704  001CC0  0E84               	movlw	low _I2C_CallbackReturnStop
  4705  001CC2  6F62               	movwf	(_I2C_Status+2)& (0+255),b
  4706  001CC4  0E28               	movlw	high _I2C_CallbackReturnStop
  4707  001CC6  6F63               	movwf	(_I2C_Status+3)& (0+255),b
  4708  001CC8                     
  4709                           ; BSR set to: 0
  4710                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  4711  001CC8  0E00               	movlw	0
  4712  001CCA  6F6E               	movwf	(_I2C_Status+14)& (0+255),b
  4713  001CCC  0E00               	movlw	0
  4714  001CCE  6F6F               	movwf	(_I2C_Status+15)& (0+255),b
  4715  001CD0                     
  4716                           ; BSR set to: 0
  4717                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  4718  001CD0  0E84               	movlw	low _I2C_CallbackReturnStop
  4719  001CD2  6F64               	movwf	(_I2C_Status+4)& (0+255),b
  4720  001CD4  0E28               	movlw	high _I2C_CallbackReturnStop
  4721  001CD6  6F65               	movwf	(_I2C_Status+5)& (0+255),b
  4722  001CD8                     
  4723                           ; BSR set to: 0
  4724                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  4725  001CD8  0E00               	movlw	0
  4726  001CDA  6F70               	movwf	(_I2C_Status+16)& (0+255),b
  4727  001CDC  0E00               	movlw	0
  4728  001CDE  6F71               	movwf	(_I2C_Status+17)& (0+255),b
  4729  001CE0                     
  4730                           ; BSR set to: 0
  4731                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  4732  001CE0  0E84               	movlw	low _I2C_CallbackReturnStop
  4733  001CE2  6F66               	movwf	(_I2C_Status+6)& (0+255),b
  4734  001CE4  0E28               	movlw	high _I2C_CallbackReturnStop
  4735  001CE6  6F67               	movwf	(_I2C_Status+7)& (0+255),b
  4736  001CE8                     
  4737                           ; BSR set to: 0
  4738                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  4739  001CE8  0E00               	movlw	0
  4740  001CEA  6F72               	movwf	(_I2C_Status+18)& (0+255),b
  4741  001CEC  0E00               	movlw	0
  4742  001CEE  6F73               	movwf	(_I2C_Status+19)& (0+255),b
  4743  001CF0                     
  4744                           ; BSR set to: 0
  4745                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  4746  001CF0  0E80               	movlw	low _I2C_CallbackReturnReset
  4747  001CF2  6F68               	movwf	(_I2C_Status+8)& (0+255),b
  4748  001CF4  0E28               	movlw	high _I2C_CallbackReturnReset
  4749  001CF6  6F69               	movwf	(_I2C_Status+9)& (0+255),b
  4750  001CF8                     
  4751                           ; BSR set to: 0
  4752                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  4753  001CF8  0E00               	movlw	0
  4754  001CFA  6F74               	movwf	(_I2C_Status+20)& (0+255),b
  4755  001CFC  0E00               	movlw	0
  4756  001CFE  6F75               	movwf	(_I2C_Status+21)& (0+255),b
  4757  001D00                     
  4758                           ; BSR set to: 0
  4759                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
  4760  001D00  EC4E  F014         	call	_I2C_MasterClearIrq	;wreg free
  4761  001D04                     
  4762                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
  4763  001D04  EC55  F013         	call	_I2C_MasterOpen	;wreg free
  4764  001D08                     
  4765                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
  4766  001D08  0E00               	movlw	0
  4767  001D0A  6E06               	movwf	I2C_Open@returnValue^0,c
  4768  001D0C                     l3368:
  4769                           
  4770                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
  4771  001D0C  5006               	movf	I2C_Open@returnValue^0,w,c
  4772  001D0E  0012               	return		;funcret
  4773  001D10                     __end_of_I2C_Open:
  4774                           	callstack 0
  4775                           
  4776 ;; *************** function _I2C_MasterOpen *****************
  4777 ;; Defined at:
  4778 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;		None
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;		None
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  1    wreg      _Bool 
  4785 ;; Registers used:
  4786 ;;		wreg, status,2
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4796 ;;Total ram usage:        0 bytes
  4797 ;; Hardware stack levels used:    1
  4798 ;; Hardware stack levels required when called:    4
  4799 ;; This function calls:
  4800 ;;		Nothing
  4801 ;; This function is called by:
  4802 ;;		_I2C_Open
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text37
  4807  0026AA                     __ptext37:
  4808                           	callstack 0
  4809  0026AA                     _I2C_MasterOpen:
  4810                           	callstack 23
  4811  0026AA                     
  4812                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
  4813  0026AA  BAC6               	btfsc	198,5,c	;volatile
  4814  0026AC  EF5A  F013         	goto	u1581
  4815  0026B0  EF5C  F013         	goto	u1580
  4816  0026B4                     u1581:
  4817  0026B4  EF65  F013         	goto	l378
  4818  0026B8                     u1580:
  4819  0026B8                     
  4820                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x00;
  4821  0026B8  0E00               	movlw	0
  4822  0026BA  6EC7               	movwf	199,c	;volatile
  4823                           
  4824                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
  4825  0026BC  0E08               	movlw	8
  4826  0026BE  6EC6               	movwf	198,c	;volatile
  4827                           
  4828                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
  4829  0026C0  0E00               	movlw	0
  4830  0026C2  6EC5               	movwf	197,c	;volatile
  4831                           
  4832                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x13;
  4833  0026C4  0E13               	movlw	19
  4834  0026C6  6EC8               	movwf	200,c	;volatile
  4835  0026C8                     
  4836                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
  4837  0026C8  8AC6               	bsf	198,5,c	;volatile
  4838  0026CA                     l378:
  4839  0026CA  0012               	return		;funcret
  4840  0026CC                     __end_of_I2C_MasterOpen:
  4841                           	callstack 0
  4842                           
  4843 ;; *************** function _I2C_MasterWrite *****************
  4844 ;; Defined at:
  4845 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;		None
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;		None
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      enum E353
  4852 ;; Registers used:
  4853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4863 ;;Total ram usage:        0 bytes
  4864 ;; Hardware stack levels used:    1
  4865 ;; Hardware stack levels required when called:   11
  4866 ;; This function calls:
  4867 ;;		_I2C_MasterOperation
  4868 ;; This function is called by:
  4869 ;;		_I2C_Read1ByteRegister
  4870 ;;		_I2C_Write1ByteRegister
  4871 ;;		_I2C_Read2ByteRegister
  4872 ;;		_I2C_Write2ByteRegister
  4873 ;;		_I2C_WriteNBytes
  4874 ;;		_I2C_ReadDataBlock
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           	psect	text38
  4879  002810                     __ptext38:
  4880                           	callstack 0
  4881  002810                     _I2C_MasterWrite:
  4882                           	callstack 17
  4883  002810                     
  4884                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  4885  002810  0E00               	movlw	0
  4886  002812  EC8F  F011         	call	_I2C_MasterOperation
  4887  002816  0012               	return		;funcret
  4888  002818                     __end_of_I2C_MasterWrite:
  4889                           	callstack 0
  4890                           
  4891 ;; *************** function _I2C_MasterOperation *****************
  4892 ;; Defined at:
  4893 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;  read            1    wreg     _Bool 
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;  read            1   19[COMRAM] _Bool 
  4898 ;;  returnValue     1   20[COMRAM] enum E353
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      enum E353
  4901 ;; Registers used:
  4902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4909 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4911 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4912 ;;Total ram usage:        2 bytes
  4913 ;; Hardware stack levels used:    1
  4914 ;; Hardware stack levels required when called:   10
  4915 ;; This function calls:
  4916 ;;		_I2C_MasterStart
  4917 ;;		_I2C_Poller
  4918 ;; This function is called by:
  4919 ;;		_I2C_MasterWrite
  4920 ;;		_I2C_MasterRead
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           	psect	text39
  4925  00231E                     __ptext39:
  4926                           	callstack 0
  4927  00231E                     _I2C_MasterOperation:
  4928                           	callstack 17
  4929                           
  4930                           ;incstack = 0
  4931                           ;I2C_MasterOperation@read stored from wreg
  4932  00231E  6E14               	movwf	I2C_MasterOperation@read^0,c
  4933  002320                     
  4934                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  4935  002320  0E01               	movlw	1
  4936  002322  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
  4937  002324                     
  4938                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
  4939  002324  0100               	movlb	0	; () banked
  4940  002326  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  4941  002328  EF98  F011         	goto	u1591
  4942  00232C  EF9A  F011         	goto	u1590
  4943  002330                     u1591:
  4944  002330  EFAF  F011         	goto	l3212
  4945  002334                     u1590:
  4946  002334                     
  4947                           ; BSR set to: 0
  4948                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
  4949  002334  8383               	bsf	(_I2C_Status+35)& (0+255),1,b
  4950  002336                     
  4951                           ; BSR set to: 0
  4952                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
  4953  002336  0E00               	movlw	0
  4954  002338  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
  4955  00233A                     
  4956                           ; BSR set to: 0
  4957                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
  4958  00233A  5014               	movf	I2C_MasterOperation@read^0,w,c
  4959  00233C  B4D8               	btfsc	status,2,c
  4960  00233E  EFA3  F011         	goto	u1601
  4961  002342  EFA5  F011         	goto	u1600
  4962  002346                     u1601:
  4963  002346  EFA9  F011         	goto	l3206
  4964  00234A                     u1600:
  4965  00234A                     
  4966                           ; BSR set to: 0
  4967                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  4968  00234A  0E01               	movlw	1
  4969  00234C  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4970                           
  4971                           ;mcc_generated_files/i2c_master.c: 235:         }
  4972  00234E  EFAB  F011         	goto	l3208
  4973  002352                     l3206:
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  4977  002352  0E02               	movlw	2
  4978  002354  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4979  002356                     l3208:
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
  4983  002356  EC48  F014         	call	_I2C_MasterStart	;wreg free
  4984  00235A                     
  4985                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
  4986  00235A  EC75  F013         	call	_I2C_Poller	;wreg free
  4987  00235E                     l3212:
  4988                           
  4989                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
  4990  00235E  5015               	movf	I2C_MasterOperation@returnValue^0,w,c
  4991  002360  0012               	return		;funcret
  4992  002362                     __end_of_I2C_MasterOperation:
  4993                           	callstack 0
  4994                           
  4995 ;; *************** function _I2C_Poller *****************
  4996 ;; Defined at:
  4997 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;		None
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;		None
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      void 
  5004 ;; Registers used:
  5005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5015 ;;Total ram usage:        0 bytes
  5016 ;; Hardware stack levels used:    1
  5017 ;; Hardware stack levels required when called:    9
  5018 ;; This function calls:
  5019 ;;		_I2C_MasterFsm
  5020 ;;		_I2C_MasterWaitForEvent
  5021 ;; This function is called by:
  5022 ;;		_I2C_MasterOperation
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text40
  5027  0026EA                     __ptext40:
  5028                           	callstack 0
  5029  0026EA                     _I2C_Poller:
  5030                           	callstack 17
  5031  0026EA                     
  5032                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  5033  0026EA  EF7B  F013         	goto	l3118
  5034  0026EE                     l3114:
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
  5038  0026EE  ECBB  F013         	call	_I2C_MasterWaitForEvent	;wreg free
  5039  0026F2                     
  5040                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
  5041  0026F2  ECB8  F00F         	call	_I2C_MasterFsm	;wreg free
  5042  0026F6                     l3118:
  5043                           
  5044                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  5045  0026F6  0100               	movlb	0	; () banked
  5046  0026F8  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  5047  0026FA  EF81  F013         	goto	u1421
  5048  0026FE  EF83  F013         	goto	u1420
  5049  002702                     u1421:
  5050  002702  EF77  F013         	goto	l3114
  5051  002706                     u1420:
  5052  002706                     
  5053                           ; BSR set to: 0
  5054  002706  0012               	return		;funcret
  5055  002708                     __end_of_I2C_Poller:
  5056                           	callstack 0
  5057                           
  5058 ;; *************** function _I2C_MasterWaitForEvent *****************
  5059 ;; Defined at:
  5060 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;		None
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;		None
  5065 ;; Return value:  Size  Location     Type
  5066 ;;                  1    wreg      void 
  5067 ;; Registers used:
  5068 ;;		None
  5069 ;; Tracked objects:
  5070 ;;		On entry : 0/0
  5071 ;;		On exit  : 0/0
  5072 ;;		Unchanged: 0/0
  5073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5078 ;;Total ram usage:        0 bytes
  5079 ;; Hardware stack levels used:    1
  5080 ;; Hardware stack levels required when called:    4
  5081 ;; This function calls:
  5082 ;;		Nothing
  5083 ;; This function is called by:
  5084 ;;		_I2C_Poller
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088                           	psect	text41
  5089  002776                     __ptext41:
  5090                           	callstack 0
  5091  002776                     _I2C_MasterWaitForEvent:
  5092                           	callstack 21
  5093  002776                     l435:
  5094                           
  5095                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
  5096  002776  A69E               	btfss	158,3,c	;volatile
  5097  002778  EFC0  F013         	goto	u1341
  5098  00277C  EFC2  F013         	goto	u1340
  5099  002780                     u1341:
  5100  002780  EFBB  F013         	goto	l435
  5101  002784                     u1340:
  5102  002784  0012               	return		;funcret
  5103  002786                     __end_of_I2C_MasterWaitForEvent:
  5104                           	callstack 0
  5105                           
  5106 ;; *************** function _I2C_MasterFsm *****************
  5107 ;; Defined at:
  5108 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;		None
  5111 ;; Auto vars:     Size  Location     Type
  5112 ;;		None
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  1    wreg      void 
  5115 ;; Registers used:
  5116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5117 ;; Tracked objects:
  5118 ;;		On entry : 0/0
  5119 ;;		On exit  : 0/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5124 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5125 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5126 ;;Total ram usage:        2 bytes
  5127 ;; Hardware stack levels used:    1
  5128 ;; Hardware stack levels required when called:    8
  5129 ;; This function calls:
  5130 ;;		_I2C_DO_ADDRESS_NACK
  5131 ;;		_I2C_DO_IDLE
  5132 ;;		_I2C_DO_RCEN
  5133 ;;		_I2C_DO_RESET
  5134 ;;		_I2C_DO_RX
  5135 ;;		_I2C_DO_RX_ACK
  5136 ;;		_I2C_DO_RX_NACK_RESTART
  5137 ;;		_I2C_DO_RX_NACK_STOP
  5138 ;;		_I2C_DO_SEND_ADR_READ
  5139 ;;		_I2C_DO_SEND_ADR_WRITE
  5140 ;;		_I2C_DO_SEND_RESTART
  5141 ;;		_I2C_DO_SEND_RESTART_READ
  5142 ;;		_I2C_DO_SEND_RESTART_WRITE
  5143 ;;		_I2C_DO_SEND_STOP
  5144 ;;		_I2C_DO_TX
  5145 ;;		_I2C_DO_TX_EMPTY
  5146 ;;		_I2C_MasterClearIrq
  5147 ;;		_I2C_MasterIsNack
  5148 ;; This function is called by:
  5149 ;;		_I2C_Poller
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text42
  5154  001F70                     __ptext42:
  5155                           	callstack 0
  5156  001F70                     _I2C_MasterFsm:
  5157                           	callstack 17
  5158  001F70                     
  5159                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
  5160  001F70  EC4E  F014         	call	_I2C_MasterClearIrq	;wreg free
  5161  001F74                     
  5162                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  5163  001F74  0100               	movlb	0	; () banked
  5164  001F76  A183               	btfss	(_I2C_Status+35)& (0+255),0,b
  5165  001F78  EFC0  F00F         	goto	u1351
  5166  001F7C  EFC2  F00F         	goto	u1350
  5167  001F80                     u1351:
  5168  001F80  EFCF  F00F         	goto	l3086
  5169  001F84                     u1350:
  5170  001F84                     
  5171                           ; BSR set to: 0
  5172  001F84  ECB1  F013         	call	_I2C_MasterIsNack	;wreg free
  5173  001F88  0900               	iorlw	0
  5174  001F8A  B4D8               	btfsc	status,2,c
  5175  001F8C  EFCA  F00F         	goto	u1361
  5176  001F90  EFCC  F00F         	goto	u1360
  5177  001F94                     u1361:
  5178  001F94  EFCF  F00F         	goto	l3086
  5179  001F98                     u1360:
  5180  001F98                     
  5181                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  5182  001F98  0E0F               	movlw	15
  5183  001F9A  0100               	movlb	0	; () banked
  5184  001F9C  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  5185  001F9E                     l3086:
  5186                           
  5187                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = fsmStateTable[I2C_Status.
      +                          state]();
  5188  001F9E  0100               	movlb	0	; () banked
  5189  001FA0  5181               	movf	(_I2C_Status+33)& (0+255),w,b
  5190  001FA2  0D02               	mullw	2
  5191  001FA4  0E01               	movlw	low _fsmStateTable
  5192  001FA6  24F3               	addwf	243,w,c
  5193  001FA8  6EF6               	movwf	tblptrl,c
  5194  001FAA  0E10               	movlw	high _fsmStateTable
  5195  001FAC  20F4               	addwfc	244,w,c
  5196  001FAE  6EF7               	movwf	tblptrh,c
  5197  001FB0                     	if	1	;There are 3 active tblptr bytes
  5198  001FB0  6AF8               	clrf	tblptru,c
  5199  001FB2  0E00               	movlw	low (__mediumconst shr (0+16))
  5200  001FB4  22F8               	addwfc	tblptru,f,c
  5201  001FB6                     	endif
  5202  001FB6  0009               	tblrd		*+
  5203  001FB8  CFF5 F012          	movff	tablat,??_I2C_MasterFsm
  5204  001FBC  0009               	tblrd		*+
  5205  001FBE  CFF5 F013          	movff	tablat,??_I2C_MasterFsm+1
  5206  001FC2  D802               	call	u1378
  5207  001FC4  EFED  F00F         	goto	u1379
  5208  001FC8                     u1378:
  5209  001FC8  0005               	push	
  5210  001FCA  6EFA               	movwf	pclath,c
  5211  001FCC  5012               	movf	??_I2C_MasterFsm^0,w,c
  5212  001FCE  6EFD               	movwf	tosl,c
  5213  001FD0  5013               	movf	(??_I2C_MasterFsm+1)^0,w,c
  5214  001FD2  6EFE               	movwf	tosh,c
  5215  001FD4  6AFF               	clrf	tosu,c
  5216  001FD6  50FA               	movf	pclath,w,c
  5217  001FD8  0012               	return		;indir
  5218  001FDA                     u1379:
  5219  001FDA  0100               	movlb	0	; () banked
  5220  001FDC  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  5221  001FDE                     
  5222                           ; BSR set to: 0
  5223  001FDE  0012               	return		;funcret
  5224  001FE0                     __end_of_I2C_MasterFsm:
  5225                           	callstack 0
  5226                           
  5227 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  5228 ;; Defined at:
  5229 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;		None
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;		None
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  1    wreg      enum E3101
  5236 ;; Registers used:
  5237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/0
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5245 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5246 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5247 ;;Total ram usage:        2 bytes
  5248 ;; Hardware stack levels used:    1
  5249 ;; Hardware stack levels required when called:    7
  5250 ;; This function calls:
  5251 ;;		Absolute function
  5252 ;;		_I2C_CallbackReturnReset
  5253 ;;		_I2C_CallbackReturnStop
  5254 ;;		_I2C_DO_SEND_RESTART
  5255 ;;		_I2C_DO_SEND_STOP
  5256 ;;		_rd1RegCompleteHandler
  5257 ;;		_rd2RegCompleteHandler
  5258 ;;		_rdBlkRegCompleteHandler
  5259 ;;		_wr1RegCompleteHandler
  5260 ;;		_wr2RegCompleteHandler
  5261 ;; This function is called by:
  5262 ;;		_I2C_MasterFsm
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266                           	psect	text43
  5267  0020B8                     __ptext43:
  5268                           	callstack 0
  5269  0020B8                     _I2C_DO_ADDRESS_NACK:
  5270                           	callstack 17
  5271  0020B8                     
  5272                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
  5273  0020B8  0100               	movlb	0	; () banked
  5274  0020BA  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  5275  0020BC                     
  5276                           ; BSR set to: 0
  5277                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
  5278  0020BC  0E02               	movlw	2
  5279  0020BE  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  5280                           
  5281                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  5282  0020C0  EF6A  F010         	goto	l3056
  5283  0020C4                     l3046:
  5284                           
  5285                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
  5286  0020C4  EC1C  F014         	call	_I2C_DO_SEND_RESTART	;wreg free
  5287  0020C8  EF8E  F010         	goto	l357
  5288  0020CC                     l3050:
  5289                           
  5290                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
  5291  0020CC  EC18  F014         	call	_I2C_DO_SEND_STOP	;wreg free
  5292  0020D0  EF8E  F010         	goto	l357
  5293  0020D4                     l3056:
  5294                           
  5295                           ; BSR set to: 0
  5296  0020D4  C070  F00E         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
  5297  0020D8  C071  F00F         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
  5298  0020DC  D802               	call	u1298
  5299  0020DE  EF7A  F010         	goto	u1299
  5300  0020E2                     u1298:
  5301  0020E2  0005               	push	
  5302  0020E4  6EFA               	movwf	pclath,c
  5303  0020E6  5164               	movf	(_I2C_Status+4)& (0+255),w,b
  5304  0020E8  6EFD               	movwf	tosl,c
  5305  0020EA  5165               	movf	(_I2C_Status+5)& (0+255),w,b
  5306  0020EC  6EFE               	movwf	tosh,c
  5307  0020EE  6AFF               	clrf	tosu,c
  5308  0020F0  50FA               	movf	pclath,w,c
  5309  0020F2  0012               	return		;indir
  5310  0020F4                     u1299:
  5311  0020F4  6E10               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
  5312  0020F6  6A11               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
  5313                           
  5314                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5315                           ; Switch size 1, requested type "simple"
  5316                           ; Number of cases is 1, Range of values is 0 to 0
  5317                           ; switch strategies available:
  5318                           ; Name         Instructions Cycles
  5319                           ; simple_byte            4     3 (average)
  5320                           ;	Chosen strategy is simple_byte
  5321  0020F8  5011               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
  5322  0020FA  0A00               	xorlw	0	; case 0
  5323  0020FC  B4D8               	btfsc	status,2,c
  5324  0020FE  EF83  F010         	goto	l4494
  5325  002102  EF66  F010         	goto	l3050
  5326  002106                     l4494:
  5327                           
  5328                           ; Switch size 1, requested type "simple"
  5329                           ; Number of cases is 2, Range of values is 2 to 3
  5330                           ; switch strategies available:
  5331                           ; Name         Instructions Cycles
  5332                           ; simple_byte            7     4 (average)
  5333                           ;	Chosen strategy is simple_byte
  5334  002106  5010               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
  5335  002108  0A02               	xorlw	2	; case 2
  5336  00210A  B4D8               	btfsc	status,2,c
  5337  00210C  EF62  F010         	goto	l3046
  5338  002110  0A01               	xorlw	1	; case 3
  5339  002112  B4D8               	btfsc	status,2,c
  5340  002114  EF62  F010         	goto	l3046
  5341  002118  EF66  F010         	goto	l3050
  5342  00211C                     l357:
  5343  00211C  0012               	return		;funcret
  5344  00211E                     __end_of_I2C_DO_ADDRESS_NACK:
  5345                           	callstack 0
  5346                           
  5347 ;; *************** function _I2C_DO_RESET *****************
  5348 ;; Defined at:
  5349 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;		None
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;		None
  5354 ;; Return value:  Size  Location     Type
  5355 ;;                  1    wreg      enum E3101
  5356 ;; Registers used:
  5357 ;;		wreg, status,2
  5358 ;; Tracked objects:
  5359 ;;		On entry : 0/0
  5360 ;;		On exit  : 0/0
  5361 ;;		Unchanged: 0/0
  5362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5367 ;;Total ram usage:        0 bytes
  5368 ;; Hardware stack levels used:    1
  5369 ;; Hardware stack levels required when called:    4
  5370 ;; This function calls:
  5371 ;;		Nothing
  5372 ;; This function is called by:
  5373 ;;		_I2C_MasterFsm
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           	psect	text44
  5378  0027A6                     __ptext44:
  5379                           	callstack 0
  5380  0027A6                     _I2C_DO_RESET:
  5381                           	callstack 20
  5382  0027A6                     
  5383                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
  5384  0027A6  0100               	movlb	0	; () banked
  5385  0027A8  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  5386  0027AA                     
  5387                           ; BSR set to: 0
  5388                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
  5389  0027AA  0E00               	movlw	0
  5390  0027AC  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  5391  0027AE                     
  5392                           ; BSR set to: 0
  5393                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
  5394  0027AE  0E0E               	movlw	14
  5395  0027B0                     
  5396                           ; BSR set to: 0
  5397  0027B0  0012               	return		;funcret
  5398  0027B2                     __end_of_I2C_DO_RESET:
  5399                           	callstack 0
  5400                           
  5401 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  5402 ;; Defined at:
  5403 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;		None
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;		None
  5408 ;; Return value:  Size  Location     Type
  5409 ;;                  1    wreg      enum E3101
  5410 ;; Registers used:
  5411 ;;		wreg, cstack
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;Total ram usage:        0 bytes
  5422 ;; Hardware stack levels used:    1
  5423 ;; Hardware stack levels required when called:    5
  5424 ;; This function calls:
  5425 ;;		_I2C_MasterSendNack
  5426 ;; This function is called by:
  5427 ;;		_I2C_DO_RX
  5428 ;;		_I2C_MasterFsm
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           	psect	text45
  5433  002818                     __ptext45:
  5434                           	callstack 0
  5435  002818                     _I2C_DO_RX_NACK_RESTART:
  5436                           	callstack 19
  5437  002818                     
  5438                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
  5439  002818  EC2F  F014         	call	_I2C_MasterSendNack	;wreg free
  5440  00281C                     
  5441                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
  5442  00281C  0E09               	movlw	9
  5443  00281E  0012               	return		;funcret
  5444  002820                     __end_of_I2C_DO_RX_NACK_RESTART:
  5445                           	callstack 0
  5446                           
  5447 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  5448 ;; Defined at:
  5449 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
  5450 ;; Parameters:    Size  Location     Type
  5451 ;;		None
  5452 ;; Auto vars:     Size  Location     Type
  5453 ;;		None
  5454 ;; Return value:  Size  Location     Type
  5455 ;;                  1    wreg      enum E3101
  5456 ;; Registers used:
  5457 ;;		wreg, cstack
  5458 ;; Tracked objects:
  5459 ;;		On entry : 0/0
  5460 ;;		On exit  : 0/0
  5461 ;;		Unchanged: 0/0
  5462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5467 ;;Total ram usage:        0 bytes
  5468 ;; Hardware stack levels used:    1
  5469 ;; Hardware stack levels required when called:    5
  5470 ;; This function calls:
  5471 ;;		_I2C_MasterSendNack
  5472 ;; This function is called by:
  5473 ;;		_I2C_DO_RX
  5474 ;;		_I2C_MasterFsm
  5475 ;; This function uses a non-reentrant model
  5476 ;;
  5477                           
  5478                           	psect	text46
  5479  002820                     __ptext46:
  5480                           	callstack 0
  5481  002820                     _I2C_DO_RX_NACK_STOP:
  5482                           	callstack 19
  5483  002820                     
  5484                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
  5485  002820  EC2F  F014         	call	_I2C_MasterSendNack	;wreg free
  5486  002824                     
  5487                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
  5488  002824  0E0A               	movlw	10
  5489  002826  0012               	return		;funcret
  5490  002828                     __end_of_I2C_DO_RX_NACK_STOP:
  5491                           	callstack 0
  5492                           
  5493 ;; *************** function _I2C_DO_RX_ACK *****************
  5494 ;; Defined at:
  5495 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;		None
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;		None
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  1    wreg      enum E3101
  5502 ;; Registers used:
  5503 ;;		wreg, cstack
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5513 ;;Total ram usage:        0 bytes
  5514 ;; Hardware stack levels used:    1
  5515 ;; Hardware stack levels required when called:    5
  5516 ;; This function calls:
  5517 ;;		_I2C_MasterSendAck
  5518 ;; This function is called by:
  5519 ;;		_I2C_MasterFsm
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           	psect	text47
  5524  002828                     __ptext47:
  5525                           	callstack 0
  5526  002828                     _I2C_DO_RX_ACK:
  5527                           	callstack 19
  5528  002828                     
  5529                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
  5530  002828  EC2C  F014         	call	_I2C_MasterSendAck	;wreg free
  5531  00282C                     
  5532                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
  5533  00282C  0E05               	movlw	5
  5534  00282E  0012               	return		;funcret
  5535  002830                     __end_of_I2C_DO_RX_ACK:
  5536                           	callstack 0
  5537                           
  5538 ;; *************** function _I2C_DO_SEND_STOP *****************
  5539 ;; Defined at:
  5540 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;		None
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;		None
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  1    wreg      enum E3101
  5547 ;; Registers used:
  5548 ;;		wreg, cstack
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5558 ;;Total ram usage:        0 bytes
  5559 ;; Hardware stack levels used:    1
  5560 ;; Hardware stack levels required when called:    5
  5561 ;; This function calls:
  5562 ;;		_I2C_MasterStop
  5563 ;; This function is called by:
  5564 ;;		_I2C_DO_TX
  5565 ;;		_I2C_DO_TX_EMPTY
  5566 ;;		_I2C_DO_ADDRESS_NACK
  5567 ;;		_I2C_MasterFsm
  5568 ;; This function uses a non-reentrant model
  5569 ;;
  5570                           
  5571                           	psect	text48
  5572  002830                     __ptext48:
  5573                           	callstack 0
  5574  002830                     _I2C_DO_SEND_STOP:
  5575                           	callstack 18
  5576  002830                     
  5577                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
  5578  002830  EC44  F014         	call	_I2C_MasterStop	;wreg free
  5579  002834                     
  5580                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
  5581  002834  0E00               	movlw	0
  5582  002836  0012               	return		;funcret
  5583  002838                     __end_of_I2C_DO_SEND_STOP:
  5584                           	callstack 0
  5585                           
  5586 ;; *************** function _I2C_DO_SEND_RESTART *****************
  5587 ;; Defined at:
  5588 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
  5589 ;; Parameters:    Size  Location     Type
  5590 ;;		None
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;		None
  5593 ;; Return value:  Size  Location     Type
  5594 ;;                  1    wreg      enum E3101
  5595 ;; Registers used:
  5596 ;;		wreg, cstack
  5597 ;; Tracked objects:
  5598 ;;		On entry : 0/0
  5599 ;;		On exit  : 0/0
  5600 ;;		Unchanged: 0/0
  5601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5606 ;;Total ram usage:        0 bytes
  5607 ;; Hardware stack levels used:    1
  5608 ;; Hardware stack levels required when called:    5
  5609 ;; This function calls:
  5610 ;;		_I2C_MasterEnableRestart
  5611 ;; This function is called by:
  5612 ;;		_I2C_DO_TX_EMPTY
  5613 ;;		_I2C_DO_ADDRESS_NACK
  5614 ;;		_I2C_MasterFsm
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           	psect	text49
  5619  002838                     __ptext49:
  5620                           	callstack 0
  5621  002838                     _I2C_DO_SEND_RESTART:
  5622                           	callstack 18
  5623  002838                     
  5624                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
  5625  002838  EC46  F014         	call	_I2C_MasterEnableRestart	;wreg free
  5626  00283C                     
  5627                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
  5628  00283C  0E01               	movlw	1
  5629  00283E  0012               	return		;funcret
  5630  002840                     __end_of_I2C_DO_SEND_RESTART:
  5631                           	callstack 0
  5632                           
  5633 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  5634 ;; Defined at:
  5635 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;		None
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;		None
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  1    wreg      enum E3101
  5642 ;; Registers used:
  5643 ;;		wreg, cstack
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5653 ;;Total ram usage:        0 bytes
  5654 ;; Hardware stack levels used:    1
  5655 ;; Hardware stack levels required when called:    5
  5656 ;; This function calls:
  5657 ;;		_I2C_MasterEnableRestart
  5658 ;; This function is called by:
  5659 ;;		_I2C_DO_TX
  5660 ;;		_I2C_MasterFsm
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           
  5664                           	psect	text50
  5665  002840                     __ptext50:
  5666                           	callstack 0
  5667  002840                     _I2C_DO_SEND_RESTART_WRITE:
  5668                           	callstack 18
  5669  002840                     
  5670                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
  5671  002840  EC46  F014         	call	_I2C_MasterEnableRestart	;wreg free
  5672  002844                     
  5673                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
  5674  002844  0E02               	movlw	2
  5675  002846  0012               	return		;funcret
  5676  002848                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  5677                           	callstack 0
  5678                           
  5679 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  5680 ;; Defined at:
  5681 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;		None
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;		None
  5686 ;; Return value:  Size  Location     Type
  5687 ;;                  1    wreg      enum E3101
  5688 ;; Registers used:
  5689 ;;		wreg, cstack
  5690 ;; Tracked objects:
  5691 ;;		On entry : 0/0
  5692 ;;		On exit  : 0/0
  5693 ;;		Unchanged: 0/0
  5694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5699 ;;Total ram usage:        0 bytes
  5700 ;; Hardware stack levels used:    1
  5701 ;; Hardware stack levels required when called:    5
  5702 ;; This function calls:
  5703 ;;		_I2C_MasterEnableRestart
  5704 ;; This function is called by:
  5705 ;;		_I2C_DO_TX
  5706 ;;		_I2C_MasterFsm
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           	psect	text51
  5711  002848                     __ptext51:
  5712                           	callstack 0
  5713  002848                     _I2C_DO_SEND_RESTART_READ:
  5714                           	callstack 18
  5715  002848                     
  5716                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
  5717  002848  EC46  F014         	call	_I2C_MasterEnableRestart	;wreg free
  5718  00284C                     
  5719                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
  5720  00284C  0E01               	movlw	1
  5721  00284E  0012               	return		;funcret
  5722  002850                     __end_of_I2C_DO_SEND_RESTART_READ:
  5723                           	callstack 0
  5724                           
  5725 ;; *************** function _I2C_DO_RCEN *****************
  5726 ;; Defined at:
  5727 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
  5728 ;; Parameters:    Size  Location     Type
  5729 ;;		None
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;		None
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  1    wreg      enum E3101
  5734 ;; Registers used:
  5735 ;;		wreg, cstack
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5745 ;;Total ram usage:        0 bytes
  5746 ;; Hardware stack levels used:    1
  5747 ;; Hardware stack levels required when called:    5
  5748 ;; This function calls:
  5749 ;;		_I2C_MasterStartRx
  5750 ;; This function is called by:
  5751 ;;		_I2C_MasterFsm
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           	psect	text52
  5756  0027B2                     __ptext52:
  5757                           	callstack 0
  5758  0027B2                     _I2C_DO_RCEN:
  5759                           	callstack 19
  5760  0027B2                     
  5761                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
  5762  0027B2  0100               	movlb	0	; () banked
  5763  0027B4  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  5764  0027B6                     
  5765                           ; BSR set to: 0
  5766                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
  5767  0027B6  EC3E  F014         	call	_I2C_MasterStartRx	;wreg free
  5768  0027BA                     
  5769                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
  5770  0027BA  0E04               	movlw	4
  5771  0027BC  0012               	return		;funcret
  5772  0027BE                     __end_of_I2C_DO_RCEN:
  5773                           	callstack 0
  5774                           
  5775 ;; *************** function _I2C_DO_RX *****************
  5776 ;; Defined at:
  5777 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;		None
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;		None
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  1    wreg      enum E3101
  5784 ;; Registers used:
  5785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5793 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5794 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5795 ;;Total ram usage:        2 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; Hardware stack levels required when called:    7
  5798 ;; This function calls:
  5799 ;;		Absolute function
  5800 ;;		_I2C_CallbackReturnReset
  5801 ;;		_I2C_CallbackReturnStop
  5802 ;;		_I2C_DO_RX_NACK_RESTART
  5803 ;;		_I2C_DO_RX_NACK_STOP
  5804 ;;		_I2C_MasterGetRxData
  5805 ;;		_I2C_MasterSendAck
  5806 ;;		_rd1RegCompleteHandler
  5807 ;;		_rd2RegCompleteHandler
  5808 ;;		_rdBlkRegCompleteHandler
  5809 ;;		_wr1RegCompleteHandler
  5810 ;;		_wr2RegCompleteHandler
  5811 ;; This function is called by:
  5812 ;;		_I2C_MasterFsm
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           	psect	text53
  5817  001B46                     __ptext53:
  5818                           	callstack 0
  5819  001B46                     _I2C_DO_RX:
  5820                           	callstack 17
  5821  001B46                     
  5822                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  5823  001B46  EC3C  F014         	call	_I2C_MasterGetRxData	;wreg free
  5824  001B4A  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  5825  001B4E  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  5826  001B52  6EDF               	movwf	indf2,c
  5827  001B54  0100               	movlb	0	; () banked
  5828  001B56  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  5829  001B58  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  5830  001B5A                     
  5831                           ; BSR set to: 0
  5832                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
  5833  001B5A  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  5834  001B5C  A0D8               	btfss	status,0,c
  5835  001B5E  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  5836  001B60  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  5837  001B62  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  5838  001B64  B4D8               	btfsc	status,2,c
  5839  001B66  EFB7  F00D         	goto	u1261
  5840  001B6A  EFB9  F00D         	goto	u1260
  5841  001B6E                     u1261:
  5842  001B6E  EFBE  F00D         	goto	l294
  5843  001B72                     u1260:
  5844  001B72                     
  5845                           ; BSR set to: 0
  5846                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
  5847  001B72  EC2C  F014         	call	_I2C_MasterSendAck	;wreg free
  5848  001B76                     
  5849                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
  5850  001B76  0E05               	movlw	5
  5851  001B78  EFF5  F00D         	goto	l295
  5852  001B7C                     l294:
  5853                           
  5854                           ; BSR set to: 0
  5855                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
  5856  001B7C  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  5857                           
  5858                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  5859  001B7E  EFC9  F00D         	goto	l2990
  5860  001B82                     l2980:
  5861                           
  5862                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
  5863  001B82  EC0C  F014         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
  5864  001B86  EFF5  F00D         	goto	l295
  5865  001B8A                     l2984:
  5866                           
  5867                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
  5868  001B8A  EC10  F014         	call	_I2C_DO_RX_NACK_STOP	;wreg free
  5869  001B8E  EFF5  F00D         	goto	l295
  5870  001B92                     l2990:
  5871                           
  5872                           ; BSR set to: 0
  5873  001B92  C06C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  5874  001B96  C06D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  5875  001B9A  D802               	call	u1278
  5876  001B9C  EFD9  F00D         	goto	u1279
  5877  001BA0                     u1278:
  5878  001BA0  0005               	push	
  5879  001BA2  6EFA               	movwf	pclath,c
  5880  001BA4  5160               	movf	_I2C_Status& (0+255),w,b
  5881  001BA6  6EFD               	movwf	tosl,c
  5882  001BA8  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  5883  001BAA  6EFE               	movwf	tosh,c
  5884  001BAC  6AFF               	clrf	tosu,c
  5885  001BAE  50FA               	movf	pclath,w,c
  5886  001BB0  0012               	return		;indir
  5887  001BB2                     u1279:
  5888  001BB2  6E10               	movwf	??_I2C_DO_RX^0,c
  5889  001BB4  6A11               	clrf	(??_I2C_DO_RX+1)^0,c
  5890                           
  5891                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5892                           ; Switch size 1, requested type "simple"
  5893                           ; Number of cases is 1, Range of values is 0 to 0
  5894                           ; switch strategies available:
  5895                           ; Name         Instructions Cycles
  5896                           ; simple_byte            4     3 (average)
  5897                           ;	Chosen strategy is simple_byte
  5898  001BB6  5011               	movf	(??_I2C_DO_RX+1)^0,w,c
  5899  001BB8  0A00               	xorlw	0	; case 0
  5900  001BBA  B4D8               	btfsc	status,2,c
  5901  001BBC  EFE2  F00D         	goto	l4496
  5902  001BC0  EFC5  F00D         	goto	l2984
  5903  001BC4                     l4496:
  5904                           
  5905                           ; Switch size 1, requested type "simple"
  5906                           ; Number of cases is 4, Range of values is 1 to 4
  5907                           ; switch strategies available:
  5908                           ; Name         Instructions Cycles
  5909                           ; simple_byte           13     7 (average)
  5910                           ;	Chosen strategy is simple_byte
  5911  001BC4  5010               	movf	??_I2C_DO_RX^0,w,c
  5912  001BC6  0A01               	xorlw	1	; case 1
  5913  001BC8  B4D8               	btfsc	status,2,c
  5914  001BCA  EFC5  F00D         	goto	l2984
  5915  001BCE  0A03               	xorlw	3	; case 2
  5916  001BD0  B4D8               	btfsc	status,2,c
  5917  001BD2  EFC1  F00D         	goto	l2980
  5918  001BD6  0A01               	xorlw	1	; case 3
  5919  001BD8  B4D8               	btfsc	status,2,c
  5920  001BDA  EFC1  F00D         	goto	l2980
  5921  001BDE  0A07               	xorlw	7	; case 4
  5922  001BE0  B4D8               	btfsc	status,2,c
  5923  001BE2  EFC5  F00D         	goto	l2984
  5924  001BE6  EFC5  F00D         	goto	l2984
  5925  001BEA                     l295:
  5926  001BEA  0012               	return		;funcret
  5927  001BEC                     __end_of_I2C_DO_RX:
  5928                           	callstack 0
  5929                           
  5930 ;; *************** function _I2C_DO_TX *****************
  5931 ;; Defined at:
  5932 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;		None
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;		None
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  1    wreg      enum E3101
  5939 ;; Registers used:
  5940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5948 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5949 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5950 ;;Total ram usage:        2 bytes
  5951 ;; Hardware stack levels used:    1
  5952 ;; Hardware stack levels required when called:    7
  5953 ;; This function calls:
  5954 ;;		Absolute function
  5955 ;;		_I2C_CallbackReturnReset
  5956 ;;		_I2C_CallbackReturnStop
  5957 ;;		_I2C_DO_SEND_RESTART_READ
  5958 ;;		_I2C_DO_SEND_RESTART_WRITE
  5959 ;;		_I2C_DO_SEND_STOP
  5960 ;;		_I2C_MasterIsNack
  5961 ;;		_I2C_MasterSendTxData
  5962 ;;		_rd1RegCompleteHandler
  5963 ;;		_rd2RegCompleteHandler
  5964 ;;		_rdBlkRegCompleteHandler
  5965 ;;		_wr1RegCompleteHandler
  5966 ;;		_wr2RegCompleteHandler
  5967 ;; This function is called by:
  5968 ;;		_I2C_MasterFsm
  5969 ;; This function uses a non-reentrant model
  5970 ;;
  5971                           
  5972                           	psect	text54
  5973  00191C                     __ptext54:
  5974                           	callstack 0
  5975  00191C                     _I2C_DO_TX:
  5976                           	callstack 17
  5977  00191C                     
  5978                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
  5979  00191C  ECB1  F013         	call	_I2C_MasterIsNack	;wreg free
  5980  001920  0900               	iorlw	0
  5981  001922  B4D8               	btfsc	status,2,c
  5982  001924  EF96  F00C         	goto	u1231
  5983  001928  EF98  F00C         	goto	u1230
  5984  00192C                     u1231:
  5985  00192C  EFD3  F00C         	goto	l278
  5986  001930                     u1230:
  5987  001930  EFA6  F00C         	goto	l2950
  5988  001934                     l2936:
  5989                           
  5990                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  5991  001934  EC24  F014         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
  5992  001938  EFEF  F00C         	goto	l281
  5993  00193C                     l2940:
  5994                           
  5995                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  5996  00193C  EC20  F014         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
  5997  001940  EFEF  F00C         	goto	l281
  5998  001944                     l2944:
  5999                           
  6000                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
  6001  001944  EC18  F014         	call	_I2C_DO_SEND_STOP	;wreg free
  6002  001948  EFEF  F00C         	goto	l281
  6003  00194C                     l2950:
  6004  00194C  C072  F00E         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
  6005  001950  C073  F00F         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
  6006  001954  D802               	call	u1248
  6007  001956  EFB7  F00C         	goto	u1249
  6008  00195A                     u1248:
  6009  00195A  0005               	push	
  6010  00195C  6EFA               	movwf	pclath,c
  6011  00195E  0100               	movlb	0	; () banked
  6012  001960  5166               	movf	(_I2C_Status+6)& (0+255),w,b
  6013  001962  6EFD               	movwf	tosl,c
  6014  001964  5167               	movf	(_I2C_Status+7)& (0+255),w,b
  6015  001966  6EFE               	movwf	tosh,c
  6016  001968  6AFF               	clrf	tosu,c
  6017  00196A  50FA               	movf	pclath,w,c
  6018  00196C  0012               	return		;indir
  6019  00196E                     u1249:
  6020  00196E  6E10               	movwf	??_I2C_DO_TX^0,c
  6021  001970  6A11               	clrf	(??_I2C_DO_TX+1)^0,c
  6022                           
  6023                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6024                           ; Switch size 1, requested type "simple"
  6025                           ; Number of cases is 1, Range of values is 0 to 0
  6026                           ; switch strategies available:
  6027                           ; Name         Instructions Cycles
  6028                           ; simple_byte            4     3 (average)
  6029                           ;	Chosen strategy is simple_byte
  6030  001972  5011               	movf	(??_I2C_DO_TX+1)^0,w,c
  6031  001974  0A00               	xorlw	0	; case 0
  6032  001976  B4D8               	btfsc	status,2,c
  6033  001978  EFC0  F00C         	goto	l4498
  6034  00197C  EFA2  F00C         	goto	l2944
  6035  001980                     l4498:
  6036                           
  6037                           ; Switch size 1, requested type "simple"
  6038                           ; Number of cases is 4, Range of values is 1 to 4
  6039                           ; switch strategies available:
  6040                           ; Name         Instructions Cycles
  6041                           ; simple_byte           13     7 (average)
  6042                           ;	Chosen strategy is simple_byte
  6043  001980  5010               	movf	??_I2C_DO_TX^0,w,c
  6044  001982  0A01               	xorlw	1	; case 1
  6045  001984  B4D8               	btfsc	status,2,c
  6046  001986  EFA2  F00C         	goto	l2944
  6047  00198A  0A03               	xorlw	3	; case 2
  6048  00198C  B4D8               	btfsc	status,2,c
  6049  00198E  EF9A  F00C         	goto	l2936
  6050  001992  0A01               	xorlw	1	; case 3
  6051  001994  B4D8               	btfsc	status,2,c
  6052  001996  EF9E  F00C         	goto	l2940
  6053  00199A  0A07               	xorlw	7	; case 4
  6054  00199C  B4D8               	btfsc	status,2,c
  6055  00199E  EFA2  F00C         	goto	l2944
  6056  0019A2  EFA2  F00C         	goto	l2944
  6057  0019A6                     l278:
  6058                           
  6059                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
  6060  0019A6  0100               	movlb	0	; () banked
  6061  0019A8  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  6062  0019AA                     
  6063                           ; BSR set to: 0
  6064                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  6065  0019AA  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  6066  0019AE  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  6067  0019B2  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  6068  0019B4  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  6069  0019B6  50DF               	movf	indf2,w,c
  6070  0019B8  EC28  F014         	call	_I2C_MasterSendTxData
  6071  0019BC                     
  6072                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  6073  0019BC  0100               	movlb	0	; () banked
  6074  0019BE  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  6075  0019C0  A0D8               	btfss	status,0,c
  6076  0019C2  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  6077  0019C4  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  6078  0019C6  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  6079  0019C8  A4D8               	btfss	status,2,c
  6080  0019CA  EFE9  F00C         	goto	u1251
  6081  0019CE  EFEB  F00C         	goto	u1250
  6082  0019D2                     u1251:
  6083  0019D2  EFEE  F00C         	goto	l2958
  6084  0019D6                     u1250:
  6085  0019D6                     
  6086                           ; BSR set to: 0
  6087  0019D6  0E06               	movlw	6
  6088  0019D8  EFEF  F00C         	goto	l281
  6089  0019DC                     l2958:
  6090                           
  6091                           ; BSR set to: 0
  6092  0019DC  0E03               	movlw	3
  6093  0019DE                     l281:
  6094  0019DE  0012               	return		;funcret
  6095  0019E0                     __end_of_I2C_DO_TX:
  6096                           	callstack 0
  6097                           
  6098 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  6099 ;; Defined at:
  6100 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;		None
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;		None
  6105 ;; Return value:  Size  Location     Type
  6106 ;;                  1    wreg      enum E3101
  6107 ;; Registers used:
  6108 ;;		wreg, status,2, status,0, cstack
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;Total ram usage:        0 bytes
  6119 ;; Hardware stack levels used:    1
  6120 ;; Hardware stack levels required when called:    5
  6121 ;; This function calls:
  6122 ;;		_I2C_MasterSendTxData
  6123 ;; This function is called by:
  6124 ;;		_I2C_MasterFsm
  6125 ;; This function uses a non-reentrant model
  6126 ;;
  6127                           
  6128                           	psect	text55
  6129  002786                     __ptext55:
  6130                           	callstack 0
  6131  002786                     _I2C_DO_SEND_ADR_WRITE:
  6132                           	callstack 19
  6133  002786                     
  6134                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
  6135  002786  0100               	movlb	0	; () banked
  6136  002788  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  6137  00278A                     
  6138                           ; BSR set to: 0
  6139                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                          );
  6140  00278A  517C               	movf	(_I2C_Status+28)& (0+255),w,b
  6141  00278C  257C               	addwf	(_I2C_Status+28)& (0+255),w,b
  6142  00278E  EC28  F014         	call	_I2C_MasterSendTxData
  6143  002792                     
  6144                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
  6145  002792  0E03               	movlw	3
  6146  002794  0012               	return		;funcret
  6147  002796                     __end_of_I2C_DO_SEND_ADR_WRITE:
  6148                           	callstack 0
  6149                           
  6150 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  6151 ;; Defined at:
  6152 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
  6153 ;; Parameters:    Size  Location     Type
  6154 ;;		None
  6155 ;; Auto vars:     Size  Location     Type
  6156 ;;		None
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  1    wreg      enum E3101
  6159 ;; Registers used:
  6160 ;;		wreg, status,0, cstack
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6170 ;;Total ram usage:        0 bytes
  6171 ;; Hardware stack levels used:    1
  6172 ;; Hardware stack levels required when called:    5
  6173 ;; This function calls:
  6174 ;;		_I2C_MasterSendTxData
  6175 ;; This function is called by:
  6176 ;;		_I2C_MasterFsm
  6177 ;; This function uses a non-reentrant model
  6178 ;;
  6179                           
  6180                           	psect	text56
  6181  002796                     __ptext56:
  6182                           	callstack 0
  6183  002796                     _I2C_DO_SEND_ADR_READ:
  6184                           	callstack 19
  6185  002796                     
  6186                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
  6187  002796  0100               	movlb	0	; () banked
  6188  002798  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  6189  00279A                     
  6190                           ; BSR set to: 0
  6191                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                           | 1);
  6192  00279A  80D8               	bsf	status,0,c
  6193  00279C  357C               	rlcf	(_I2C_Status+28)& (0+255),w,b
  6194  00279E  EC28  F014         	call	_I2C_MasterSendTxData
  6195  0027A2                     
  6196                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
  6197  0027A2  0E05               	movlw	5
  6198  0027A4  0012               	return		;funcret
  6199  0027A6                     __end_of_I2C_DO_SEND_ADR_READ:
  6200                           	callstack 0
  6201                           
  6202 ;; *************** function _I2C_DO_IDLE *****************
  6203 ;; Defined at:
  6204 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;		None
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;		None
  6209 ;; Return value:  Size  Location     Type
  6210 ;;                  1    wreg      enum E3101
  6211 ;; Registers used:
  6212 ;;		wreg, status,2
  6213 ;; Tracked objects:
  6214 ;;		On entry : 0/0
  6215 ;;		On exit  : 0/0
  6216 ;;		Unchanged: 0/0
  6217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;Total ram usage:        0 bytes
  6223 ;; Hardware stack levels used:    1
  6224 ;; Hardware stack levels required when called:    4
  6225 ;; This function calls:
  6226 ;;		Nothing
  6227 ;; This function is called by:
  6228 ;;		_I2C_MasterFsm
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           
  6232                           	psect	text57
  6233  0027BE                     __ptext57:
  6234                           	callstack 0
  6235  0027BE                     _I2C_DO_IDLE:
  6236                           	callstack 20
  6237  0027BE                     
  6238                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
  6239  0027BE  0100               	movlb	0	; () banked
  6240  0027C0  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  6241  0027C2                     
  6242                           ; BSR set to: 0
  6243                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
  6244  0027C2  0E00               	movlw	0
  6245  0027C4  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  6246  0027C6                     
  6247                           ; BSR set to: 0
  6248                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
  6249  0027C6  0E0E               	movlw	14
  6250  0027C8                     
  6251                           ; BSR set to: 0
  6252  0027C8  0012               	return		;funcret
  6253  0027CA                     __end_of_I2C_DO_IDLE:
  6254                           	callstack 0
  6255                           
  6256 ;; *************** function _I2C_DO_TX_EMPTY *****************
  6257 ;; Defined at:
  6258 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;		None
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;		None
  6263 ;; Return value:  Size  Location     Type
  6264 ;;                  1    wreg      enum E3101
  6265 ;; Registers used:
  6266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6274 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6275 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6276 ;;Total ram usage:        2 bytes
  6277 ;; Hardware stack levels used:    1
  6278 ;; Hardware stack levels required when called:    7
  6279 ;; This function calls:
  6280 ;;		Absolute function
  6281 ;;		_I2C_CallbackReturnReset
  6282 ;;		_I2C_CallbackReturnStop
  6283 ;;		_I2C_DO_SEND_RESTART
  6284 ;;		_I2C_DO_SEND_STOP
  6285 ;;		_I2C_MasterSetIrq
  6286 ;;		_rd1RegCompleteHandler
  6287 ;;		_rd2RegCompleteHandler
  6288 ;;		_rdBlkRegCompleteHandler
  6289 ;;		_wr1RegCompleteHandler
  6290 ;;		_wr2RegCompleteHandler
  6291 ;; This function is called by:
  6292 ;;		_I2C_MasterFsm
  6293 ;; This function uses a non-reentrant model
  6294 ;;
  6295                           
  6296                           	psect	text58
  6297  001D90                     __ptext58:
  6298                           	callstack 0
  6299  001D90                     _I2C_DO_TX_EMPTY:
  6300                           	callstack 17
  6301  001D90                     
  6302                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
  6303  001D90  0100               	movlb	0	; () banked
  6304  001D92  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  6305                           
  6306                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  6307  001D94  EFD9  F00E         	goto	l3022
  6308  001D98                     l3006:
  6309                           
  6310                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
  6311  001D98  EC1C  F014         	call	_I2C_DO_SEND_RESTART	;wreg free
  6312  001D9C  EF05  F00F         	goto	l312
  6313  001DA0                     l3010:
  6314                           
  6315                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
  6316  001DA0  EC3A  F014         	call	_I2C_MasterSetIrq	;wreg free
  6317  001DA4                     
  6318                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
  6319  001DA4  0E03               	movlw	3
  6320  001DA6  EF05  F00F         	goto	l312
  6321  001DAA                     l3016:
  6322                           
  6323                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
  6324  001DAA  EC18  F014         	call	_I2C_DO_SEND_STOP	;wreg free
  6325  001DAE  EF05  F00F         	goto	l312
  6326  001DB2                     l3022:
  6327                           
  6328                           ; BSR set to: 0
  6329  001DB2  C06C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  6330  001DB6  C06D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  6331  001DBA  D802               	call	u1288
  6332  001DBC  EFE9  F00E         	goto	u1289
  6333  001DC0                     u1288:
  6334  001DC0  0005               	push	
  6335  001DC2  6EFA               	movwf	pclath,c
  6336  001DC4  5160               	movf	_I2C_Status& (0+255),w,b
  6337  001DC6  6EFD               	movwf	tosl,c
  6338  001DC8  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  6339  001DCA  6EFE               	movwf	tosh,c
  6340  001DCC  6AFF               	clrf	tosu,c
  6341  001DCE  50FA               	movf	pclath,w,c
  6342  001DD0  0012               	return		;indir
  6343  001DD2                     u1289:
  6344  001DD2  6E10               	movwf	??_I2C_DO_TX_EMPTY^0,c
  6345  001DD4  6A11               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
  6346                           
  6347                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6348                           ; Switch size 1, requested type "simple"
  6349                           ; Number of cases is 1, Range of values is 0 to 0
  6350                           ; switch strategies available:
  6351                           ; Name         Instructions Cycles
  6352                           ; simple_byte            4     3 (average)
  6353                           ;	Chosen strategy is simple_byte
  6354  001DD6  5011               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
  6355  001DD8  0A00               	xorlw	0	; case 0
  6356  001DDA  B4D8               	btfsc	status,2,c
  6357  001DDC  EFF2  F00E         	goto	l4500
  6358  001DE0  EFD5  F00E         	goto	l3016
  6359  001DE4                     l4500:
  6360                           
  6361                           ; Switch size 1, requested type "simple"
  6362                           ; Number of cases is 4, Range of values is 1 to 4
  6363                           ; switch strategies available:
  6364                           ; Name         Instructions Cycles
  6365                           ; simple_byte           13     7 (average)
  6366                           ;	Chosen strategy is simple_byte
  6367  001DE4  5010               	movf	??_I2C_DO_TX_EMPTY^0,w,c
  6368  001DE6  0A01               	xorlw	1	; case 1
  6369  001DE8  B4D8               	btfsc	status,2,c
  6370  001DEA  EFD5  F00E         	goto	l3016
  6371  001DEE  0A03               	xorlw	3	; case 2
  6372  001DF0  B4D8               	btfsc	status,2,c
  6373  001DF2  EFCC  F00E         	goto	l3006
  6374  001DF6  0A01               	xorlw	1	; case 3
  6375  001DF8  B4D8               	btfsc	status,2,c
  6376  001DFA  EFCC  F00E         	goto	l3006
  6377  001DFE  0A07               	xorlw	7	; case 4
  6378  001E00  B4D8               	btfsc	status,2,c
  6379  001E02  EFD0  F00E         	goto	l3010
  6380  001E06  EFD5  F00E         	goto	l3016
  6381  001E0A                     l312:
  6382  001E0A  0012               	return		;funcret
  6383  001E0C                     __end_of_I2C_DO_TX_EMPTY:
  6384                           	callstack 0
  6385                           
  6386 ;; *************** function _I2C_MasterSetIrq *****************
  6387 ;; Defined at:
  6388 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;		None
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;		None
  6393 ;; Return value:  Size  Location     Type
  6394 ;;                  1    wreg      void 
  6395 ;; Registers used:
  6396 ;;		None
  6397 ;; Tracked objects:
  6398 ;;		On entry : 0/0
  6399 ;;		On exit  : 0/0
  6400 ;;		Unchanged: 0/0
  6401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6406 ;;Total ram usage:        0 bytes
  6407 ;; Hardware stack levels used:    1
  6408 ;; Hardware stack levels required when called:    4
  6409 ;; This function calls:
  6410 ;;		Nothing
  6411 ;; This function is called by:
  6412 ;;		_I2C_DO_TX_EMPTY
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416                           	psect	text59
  6417  002874                     __ptext59:
  6418                           	callstack 0
  6419  002874                     _I2C_MasterSetIrq:
  6420                           	callstack 19
  6421  002874                     
  6422                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
  6423  002874  869E               	bsf	158,3,c	;volatile
  6424  002876  0012               	return		;funcret
  6425  002878                     __end_of_I2C_MasterSetIrq:
  6426                           	callstack 0
  6427                           
  6428 ;; *************** function _I2C_MasterIsNack *****************
  6429 ;; Defined at:
  6430 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;		None
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;		None
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  1    wreg      _Bool 
  6437 ;; Registers used:
  6438 ;;		wreg
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6448 ;;Total ram usage:        0 bytes
  6449 ;; Hardware stack levels used:    1
  6450 ;; Hardware stack levels required when called:    4
  6451 ;; This function calls:
  6452 ;;		Nothing
  6453 ;; This function is called by:
  6454 ;;		_I2C_MasterFsm
  6455 ;;		_I2C_DO_TX
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           	psect	text60
  6460  002762                     __ptext60:
  6461                           	callstack 0
  6462  002762                     _I2C_MasterIsNack:
  6463                           	callstack 20
  6464  002762                     
  6465                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
  6466  002762  BCC5               	btfsc	197,6,c	;volatile
  6467  002764  EFB6  F013         	goto	u1221
  6468  002768  EFB9  F013         	goto	u1220
  6469  00276C                     u1221:
  6470  00276C  0E01               	movlw	1
  6471  00276E  EFBA  F013         	goto	u1226
  6472  002772                     u1220:
  6473  002772  0E00               	movlw	0
  6474  002774                     u1226:
  6475  002774  0012               	return		;funcret
  6476  002776                     __end_of_I2C_MasterIsNack:
  6477                           	callstack 0
  6478                           
  6479 ;; *************** function _I2C_MasterSendTxData *****************
  6480 ;; Defined at:
  6481 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
  6482 ;; Parameters:    Size  Location     Type
  6483 ;;  data            1    wreg     unsigned char 
  6484 ;; Auto vars:     Size  Location     Type
  6485 ;;  data            1    4[COMRAM] unsigned char 
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  1    wreg      void 
  6488 ;; Registers used:
  6489 ;;		wreg
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6498 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6499 ;;Total ram usage:        1 bytes
  6500 ;; Hardware stack levels used:    1
  6501 ;; Hardware stack levels required when called:    4
  6502 ;; This function calls:
  6503 ;;		Nothing
  6504 ;; This function is called by:
  6505 ;;		_I2C_DO_SEND_ADR_READ
  6506 ;;		_I2C_DO_SEND_ADR_WRITE
  6507 ;;		_I2C_DO_TX
  6508 ;; This function uses a non-reentrant model
  6509 ;;
  6510                           
  6511                           	psect	text61
  6512  002850                     __ptext61:
  6513                           	callstack 0
  6514  002850                     _I2C_MasterSendTxData:
  6515                           	callstack 19
  6516                           
  6517                           ;incstack = 0
  6518                           ;I2C_MasterSendTxData@data stored from wreg
  6519  002850  6E05               	movwf	I2C_MasterSendTxData@data^0,c
  6520  002852                     
  6521                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
  6522  002852  C005  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
  6523  002856  0012               	return		;funcret
  6524  002858                     __end_of_I2C_MasterSendTxData:
  6525                           	callstack 0
  6526                           
  6527 ;; *************** function _I2C_MasterSendAck *****************
  6528 ;; Defined at:
  6529 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;		None
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;		None
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  1    wreg      void 
  6536 ;; Registers used:
  6537 ;;		None
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6547 ;;Total ram usage:        0 bytes
  6548 ;; Hardware stack levels used:    1
  6549 ;; Hardware stack levels required when called:    4
  6550 ;; This function calls:
  6551 ;;		Nothing
  6552 ;; This function is called by:
  6553 ;;		_I2C_DO_RX
  6554 ;;		_I2C_DO_RX_ACK
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558                           	psect	text62
  6559  002858                     __ptext62:
  6560                           	callstack 0
  6561  002858                     _I2C_MasterSendAck:
  6562                           	callstack 19
  6563  002858                     
  6564                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
  6565  002858  9AC5               	bcf	197,5,c	;volatile
  6566                           
  6567                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
  6568  00285A  88C5               	bsf	197,4,c	;volatile
  6569  00285C  0012               	return		;funcret
  6570  00285E                     __end_of_I2C_MasterSendAck:
  6571                           	callstack 0
  6572                           
  6573 ;; *************** function _I2C_MasterGetRxData *****************
  6574 ;; Defined at:
  6575 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;		None
  6578 ;; Auto vars:     Size  Location     Type
  6579 ;;		None
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  1    wreg      unsigned char 
  6582 ;; Registers used:
  6583 ;;		wreg, status,2
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6593 ;;Total ram usage:        0 bytes
  6594 ;; Hardware stack levels used:    1
  6595 ;; Hardware stack levels required when called:    4
  6596 ;; This function calls:
  6597 ;;		Nothing
  6598 ;; This function is called by:
  6599 ;;		_I2C_DO_RX
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           	psect	text63
  6604  002878                     __ptext63:
  6605                           	callstack 0
  6606  002878                     _I2C_MasterGetRxData:
  6607                           	callstack 19
  6608  002878                     
  6609                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
  6610  002878  50C9               	movf	201,w,c	;volatile
  6611  00287A  0012               	return		;funcret
  6612  00287C                     __end_of_I2C_MasterGetRxData:
  6613                           	callstack 0
  6614                           
  6615 ;; *************** function _I2C_MasterSendNack *****************
  6616 ;; Defined at:
  6617 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;		None
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;		None
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  1    wreg      void 
  6624 ;; Registers used:
  6625 ;;		None
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6635 ;;Total ram usage:        0 bytes
  6636 ;; Hardware stack levels used:    1
  6637 ;; Hardware stack levels required when called:    4
  6638 ;; This function calls:
  6639 ;;		Nothing
  6640 ;; This function is called by:
  6641 ;;		_I2C_DO_RX_NACK_STOP
  6642 ;;		_I2C_DO_RX_NACK_RESTART
  6643 ;; This function uses a non-reentrant model
  6644 ;;
  6645                           
  6646                           	psect	text64
  6647  00285E                     __ptext64:
  6648                           	callstack 0
  6649  00285E                     _I2C_MasterSendNack:
  6650                           	callstack 19
  6651  00285E                     
  6652                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
  6653  00285E  8AC5               	bsf	197,5,c	;volatile
  6654                           
  6655                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
  6656  002860  88C5               	bsf	197,4,c	;volatile
  6657  002862  0012               	return		;funcret
  6658  002864                     __end_of_I2C_MasterSendNack:
  6659                           	callstack 0
  6660                           
  6661 ;; *************** function _I2C_MasterStartRx *****************
  6662 ;; Defined at:
  6663 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;		None
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;		None
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  1    wreg      void 
  6670 ;; Registers used:
  6671 ;;		None
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6681 ;;Total ram usage:        0 bytes
  6682 ;; Hardware stack levels used:    1
  6683 ;; Hardware stack levels required when called:    4
  6684 ;; This function calls:
  6685 ;;		Nothing
  6686 ;; This function is called by:
  6687 ;;		_I2C_DO_RCEN
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691                           	psect	text65
  6692  00287C                     __ptext65:
  6693                           	callstack 0
  6694  00287C                     _I2C_MasterStartRx:
  6695                           	callstack 19
  6696  00287C                     
  6697                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
  6698  00287C  86C5               	bsf	197,3,c	;volatile
  6699  00287E  0012               	return		;funcret
  6700  002880                     __end_of_I2C_MasterStartRx:
  6701                           	callstack 0
  6702                           
  6703 ;; *************** function _I2C_CallbackReturnReset *****************
  6704 ;; Defined at:
  6705 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;  funPtr          2   13[COMRAM] PTR void 
  6708 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6709 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;		None
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  1    wreg      enum E358
  6714 ;; Registers used:
  6715 ;;		wreg
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6724 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6725 ;;Total ram usage:        2 bytes
  6726 ;; Hardware stack levels used:    1
  6727 ;; Hardware stack levels required when called:    4
  6728 ;; This function calls:
  6729 ;;		Nothing
  6730 ;; This function is called by:
  6731 ;;		_I2C_Open
  6732 ;;		_I2C_DO_TX
  6733 ;;		_I2C_DO_RX
  6734 ;;		_I2C_DO_TX_EMPTY
  6735 ;;		_I2C_DO_ADDRESS_NACK
  6736 ;;		_I2C_DO_RX_EMPTY
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           	psect	text66
  6741  002880                     __ptext66:
  6742                           	callstack 0
  6743  002880                     _I2C_CallbackReturnReset:
  6744                           	callstack 19
  6745  002880                     
  6746                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
  6747  002880  0E05               	movlw	5
  6748  002882  0012               	return		;funcret
  6749  002884                     __end_of_I2C_CallbackReturnReset:
  6750                           	callstack 0
  6751                           
  6752 ;; *************** function _I2C_CallbackReturnStop *****************
  6753 ;; Defined at:
  6754 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;  funPtr          2   13[COMRAM] PTR void 
  6757 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6758 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;		None
  6761 ;; Return value:  Size  Location     Type
  6762 ;;                  1    wreg      enum E358
  6763 ;; Registers used:
  6764 ;;		wreg
  6765 ;; Tracked objects:
  6766 ;;		On entry : 0/0
  6767 ;;		On exit  : 0/0
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6770 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6773 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6774 ;;Total ram usage:        2 bytes
  6775 ;; Hardware stack levels used:    1
  6776 ;; Hardware stack levels required when called:    4
  6777 ;; This function calls:
  6778 ;;		Nothing
  6779 ;; This function is called by:
  6780 ;;		_I2C_Open
  6781 ;;		_I2C_SetCallback
  6782 ;;		_I2C_DO_TX
  6783 ;;		_I2C_DO_RX
  6784 ;;		_I2C_DO_TX_EMPTY
  6785 ;;		_I2C_DO_ADDRESS_NACK
  6786 ;;		_I2C_DO_RX_EMPTY
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790                           	psect	text67
  6791  002884                     __ptext67:
  6792                           	callstack 0
  6793  002884                     _I2C_CallbackReturnStop:
  6794                           	callstack 19
  6795  002884                     
  6796                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
  6797  002884  0E01               	movlw	1
  6798  002886  0012               	return		;funcret
  6799  002888                     __end_of_I2C_CallbackReturnStop:
  6800                           	callstack 0
  6801                           
  6802 ;; *************** function _rdBlkRegCompleteHandler *****************
  6803 ;; Defined at:
  6804 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  6805 ;; Parameters:    Size  Location     Type
  6806 ;;  ptr             2   13[COMRAM] PTR void 
  6807 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6808 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6809 ;; Auto vars:     Size  Location     Type
  6810 ;;		None
  6811 ;; Return value:  Size  Location     Type
  6812 ;;                  1    wreg      enum E358
  6813 ;; Registers used:
  6814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6815 ;; Tracked objects:
  6816 ;;		On entry : 0/0
  6817 ;;		On exit  : 0/0
  6818 ;;		Unchanged: 0/0
  6819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6823 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6824 ;;Total ram usage:        2 bytes
  6825 ;; Hardware stack levels used:    1
  6826 ;; Hardware stack levels required when called:    6
  6827 ;; This function calls:
  6828 ;;		_I2C_SetBuffer
  6829 ;;		_I2C_SetDataCompleteCallback
  6830 ;; This function is called by:
  6831 ;;		_I2C_ReadDataBlock
  6832 ;;		_I2C_DO_TX
  6833 ;;		_I2C_DO_RX
  6834 ;;		_I2C_DO_TX_EMPTY
  6835 ;;		_I2C_DO_ADDRESS_NACK
  6836 ;;		_I2C_DO_RX_EMPTY
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           	psect	text68
  6841  0023A4                     __ptext68:
  6842                           	callstack 0
  6843  0023A4                     _rdBlkRegCompleteHandler:
  6844                           	callstack 17
  6845  0023A4                     
  6846                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  6847  0023A4  EE20 F002          	lfsr	2,2
  6848  0023A8  500E               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
  6849  0023AA  26D9               	addwf	fsr2l,f,c
  6850  0023AC  500F               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
  6851  0023AE  22DA               	addwfc	fsr2h,f,c
  6852  0023B0  CFDE F005          	movff	postinc2,I2C_SetBuffer@buffer
  6853  0023B4  CFDD F006          	movff	postdec2,I2C_SetBuffer@buffer+1
  6854  0023B8  C00E  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
  6855  0023BC  C00F  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
  6856  0023C0  CFDE F007          	movff	postinc2,I2C_SetBuffer@bufferSize
  6857  0023C4  CFDD F008          	movff	postdec2,I2C_SetBuffer@bufferSize+1
  6858  0023C8  EC43  F013         	call	_I2C_SetBuffer	;wreg free
  6859  0023CC                     
  6860                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6861  0023CC  0E00               	movlw	0
  6862  0023CE  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6863  0023D0  0E00               	movlw	0
  6864  0023D2  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6865  0023D4  0E00               	movlw	0
  6866  0023D6  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6867  0023D8  0E00               	movlw	0
  6868  0023DA  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6869  0023DC  EC90  F013         	call	_I2C_SetDataCompleteCallback	;wreg free
  6870  0023E0                     
  6871                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  6872  0023E0  0E02               	movlw	2
  6873  0023E2  0012               	return		;funcret
  6874  0023E4                     __end_of_rdBlkRegCompleteHandler:
  6875                           	callstack 0
  6876                           
  6877 ;; *************** function _wr1RegCompleteHandler *****************
  6878 ;; Defined at:
  6879 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;  ptr             2   13[COMRAM] PTR void 
  6882 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6883 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6884 ;; Auto vars:     Size  Location     Type
  6885 ;;		None
  6886 ;; Return value:  Size  Location     Type
  6887 ;;                  1    wreg      enum E358
  6888 ;; Registers used:
  6889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6890 ;; Tracked objects:
  6891 ;;		On entry : 0/0
  6892 ;;		On exit  : 0/0
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6895 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6898 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6899 ;;Total ram usage:        2 bytes
  6900 ;; Hardware stack levels used:    1
  6901 ;; Hardware stack levels required when called:    6
  6902 ;; This function calls:
  6903 ;;		_I2C_SetBuffer
  6904 ;;		_I2C_SetDataCompleteCallback
  6905 ;; This function is called by:
  6906 ;;		_I2C_Write1ByteRegister
  6907 ;;		_I2C_DO_TX
  6908 ;;		_I2C_DO_RX
  6909 ;;		_I2C_DO_TX_EMPTY
  6910 ;;		_I2C_DO_ADDRESS_NACK
  6911 ;;		_I2C_DO_RX_EMPTY
  6912 ;; This function uses a non-reentrant model
  6913 ;;
  6914                           
  6915                           	psect	text69
  6916  00252E                     __ptext69:
  6917                           	callstack 0
  6918  00252E                     _wr1RegCompleteHandler:
  6919                           	callstack 17
  6920  00252E                     
  6921                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  6922  00252E  C00E  F005         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6923  002532  C00F  F006         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6924  002536  0E00               	movlw	0
  6925  002538  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6926  00253A  0E01               	movlw	1
  6927  00253C  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  6928  00253E  EC43  F013         	call	_I2C_SetBuffer	;wreg free
  6929  002542                     
  6930                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6931  002542  0E00               	movlw	0
  6932  002544  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6933  002546  0E00               	movlw	0
  6934  002548  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6935  00254A  0E00               	movlw	0
  6936  00254C  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6937  00254E  0E00               	movlw	0
  6938  002550  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6939  002552  EC90  F013         	call	_I2C_SetDataCompleteCallback	;wreg free
  6940  002556                     
  6941                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  6942  002556  0E04               	movlw	4
  6943  002558  0012               	return		;funcret
  6944  00255A                     __end_of_wr1RegCompleteHandler:
  6945                           	callstack 0
  6946                           
  6947 ;; *************** function _rd2RegCompleteHandler *****************
  6948 ;; Defined at:
  6949 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  6950 ;; Parameters:    Size  Location     Type
  6951 ;;  ptr             2   13[COMRAM] PTR void 
  6952 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6953 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;		None
  6956 ;; Return value:  Size  Location     Type
  6957 ;;                  1    wreg      enum E358
  6958 ;; Registers used:
  6959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6960 ;; Tracked objects:
  6961 ;;		On entry : 0/0
  6962 ;;		On exit  : 0/0
  6963 ;;		Unchanged: 0/0
  6964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6965 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6968 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6969 ;;Total ram usage:        2 bytes
  6970 ;; Hardware stack levels used:    1
  6971 ;; Hardware stack levels required when called:    6
  6972 ;; This function calls:
  6973 ;;		_I2C_SetBuffer
  6974 ;;		_I2C_SetDataCompleteCallback
  6975 ;; This function is called by:
  6976 ;;		_I2C_Read2ByteRegister
  6977 ;;		_I2C_DO_TX
  6978 ;;		_I2C_DO_RX
  6979 ;;		_I2C_DO_TX_EMPTY
  6980 ;;		_I2C_DO_ADDRESS_NACK
  6981 ;;		_I2C_DO_RX_EMPTY
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           	psect	text70
  6986  00255A                     __ptext70:
  6987                           	callstack 0
  6988  00255A                     _rd2RegCompleteHandler:
  6989                           	callstack 17
  6990  00255A                     
  6991                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  6992  00255A  C00E  F005         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6993  00255E  C00F  F006         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6994  002562  0E00               	movlw	0
  6995  002564  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6996  002566  0E02               	movlw	2
  6997  002568  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  6998  00256A  EC43  F013         	call	_I2C_SetBuffer	;wreg free
  6999  00256E                     
  7000                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7001  00256E  0E00               	movlw	0
  7002  002570  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  7003  002572  0E00               	movlw	0
  7004  002574  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  7005  002576  0E00               	movlw	0
  7006  002578  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  7007  00257A  0E00               	movlw	0
  7008  00257C  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  7009  00257E  EC90  F013         	call	_I2C_SetDataCompleteCallback	;wreg free
  7010  002582                     
  7011                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  7012  002582  0E02               	movlw	2
  7013  002584  0012               	return		;funcret
  7014  002586                     __end_of_rd2RegCompleteHandler:
  7015                           	callstack 0
  7016                           
  7017 ;; *************** function _rd1RegCompleteHandler *****************
  7018 ;; Defined at:
  7019 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;  ptr             2   13[COMRAM] PTR void 
  7022 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7023 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7024 ;; Auto vars:     Size  Location     Type
  7025 ;;		None
  7026 ;; Return value:  Size  Location     Type
  7027 ;;                  1    wreg      enum E358
  7028 ;; Registers used:
  7029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7030 ;; Tracked objects:
  7031 ;;		On entry : 0/0
  7032 ;;		On exit  : 0/0
  7033 ;;		Unchanged: 0/0
  7034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7038 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7039 ;;Total ram usage:        2 bytes
  7040 ;; Hardware stack levels used:    1
  7041 ;; Hardware stack levels required when called:    6
  7042 ;; This function calls:
  7043 ;;		_I2C_SetBuffer
  7044 ;;		_I2C_SetDataCompleteCallback
  7045 ;; This function is called by:
  7046 ;;		_I2C_Read1ByteRegister
  7047 ;;		_I2C_DO_TX
  7048 ;;		_I2C_DO_RX
  7049 ;;		_I2C_DO_TX_EMPTY
  7050 ;;		_I2C_DO_ADDRESS_NACK
  7051 ;;		_I2C_DO_RX_EMPTY
  7052 ;; This function uses a non-reentrant model
  7053 ;;
  7054                           
  7055                           	psect	text71
  7056  002586                     __ptext71:
  7057                           	callstack 0
  7058  002586                     _rd1RegCompleteHandler:
  7059                           	callstack 17
  7060  002586                     
  7061                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  7062  002586  C00E  F005         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  7063  00258A  C00F  F006         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  7064  00258E  0E00               	movlw	0
  7065  002590  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  7066  002592  0E01               	movlw	1
  7067  002594  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  7068  002596  EC43  F013         	call	_I2C_SetBuffer	;wreg free
  7069  00259A                     
  7070                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7071  00259A  0E00               	movlw	0
  7072  00259C  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  7073  00259E  0E00               	movlw	0
  7074  0025A0  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  7075  0025A2  0E00               	movlw	0
  7076  0025A4  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  7077  0025A6  0E00               	movlw	0
  7078  0025A8  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  7079  0025AA  EC90  F013         	call	_I2C_SetDataCompleteCallback	;wreg free
  7080  0025AE                     
  7081                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  7082  0025AE  0E02               	movlw	2
  7083  0025B0  0012               	return		;funcret
  7084  0025B2                     __end_of_rd1RegCompleteHandler:
  7085                           	callstack 0
  7086                           
  7087 ;; *************** function _wr2RegCompleteHandler *****************
  7088 ;; Defined at:
  7089 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  7090 ;; Parameters:    Size  Location     Type
  7091 ;;  ptr             2   13[COMRAM] PTR void 
  7092 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7093 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7094 ;; Auto vars:     Size  Location     Type
  7095 ;;		None
  7096 ;; Return value:  Size  Location     Type
  7097 ;;                  1    wreg      enum E358
  7098 ;; Registers used:
  7099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7100 ;; Tracked objects:
  7101 ;;		On entry : 0/0
  7102 ;;		On exit  : 0/0
  7103 ;;		Unchanged: 0/0
  7104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7108 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7109 ;;Total ram usage:        2 bytes
  7110 ;; Hardware stack levels used:    1
  7111 ;; Hardware stack levels required when called:    6
  7112 ;; This function calls:
  7113 ;;		_I2C_SetBuffer
  7114 ;;		_I2C_SetDataCompleteCallback
  7115 ;; This function is called by:
  7116 ;;		_I2C_Write2ByteRegister
  7117 ;;		_I2C_DO_TX
  7118 ;;		_I2C_DO_RX
  7119 ;;		_I2C_DO_TX_EMPTY
  7120 ;;		_I2C_DO_ADDRESS_NACK
  7121 ;;		_I2C_DO_RX_EMPTY
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text72
  7126  0025B2                     __ptext72:
  7127                           	callstack 0
  7128  0025B2                     _wr2RegCompleteHandler:
  7129                           	callstack 17
  7130  0025B2                     
  7131                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  7132  0025B2  C00E  F005         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  7133  0025B6  C00F  F006         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  7134  0025BA  0E00               	movlw	0
  7135  0025BC  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  7136  0025BE  0E02               	movlw	2
  7137  0025C0  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  7138  0025C2  EC43  F013         	call	_I2C_SetBuffer	;wreg free
  7139  0025C6                     
  7140                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7141  0025C6  0E00               	movlw	0
  7142  0025C8  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  7143  0025CA  0E00               	movlw	0
  7144  0025CC  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  7145  0025CE  0E00               	movlw	0
  7146  0025D0  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  7147  0025D2  0E00               	movlw	0
  7148  0025D4  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  7149  0025D6  EC90  F013         	call	_I2C_SetDataCompleteCallback	;wreg free
  7150  0025DA                     
  7151                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  7152  0025DA  0E04               	movlw	4
  7153  0025DC  0012               	return		;funcret
  7154  0025DE                     __end_of_wr2RegCompleteHandler:
  7155                           	callstack 0
  7156                           
  7157 ;; *************** function _I2C_SetDataCompleteCallback *****************
  7158 ;; Defined at:
  7159 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
  7160 ;; Parameters:    Size  Location     Type
  7161 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
  7162 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7163 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7164 ;;  ptr             2   11[COMRAM] PTR void 
  7165 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7166 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;		None
  7169 ;; Return value:  Size  Location     Type
  7170 ;;                  1    wreg      void 
  7171 ;; Registers used:
  7172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7173 ;; Tracked objects:
  7174 ;;		On entry : 0/0
  7175 ;;		On exit  : 0/0
  7176 ;;		Unchanged: 0/0
  7177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7178 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7181 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7182 ;;Total ram usage:        4 bytes
  7183 ;; Hardware stack levels used:    1
  7184 ;; Hardware stack levels required when called:    5
  7185 ;; This function calls:
  7186 ;;		_I2C_SetCallback
  7187 ;; This function is called by:
  7188 ;;		_I2C_Read1ByteRegister
  7189 ;;		_I2C_Write1ByteRegister
  7190 ;;		_rd1RegCompleteHandler
  7191 ;;		_rd2RegCompleteHandler
  7192 ;;		_wr1RegCompleteHandler
  7193 ;;		_wr2RegCompleteHandler
  7194 ;;		_rdBlkRegCompleteHandler
  7195 ;;		_I2C_Read2ByteRegister
  7196 ;;		_I2C_Write2ByteRegister
  7197 ;;		_I2C_ReadDataBlock
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           	psect	text73
  7202  002720                     __ptext73:
  7203                           	callstack 0
  7204  002720                     _I2C_SetDataCompleteCallback:
  7205                           	callstack 23
  7206  002720                     
  7207                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  7208  002720  C00A  F005         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
  7209  002724  C00B  F006         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
  7210  002728  C00C  F007         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
  7211  00272C  C00D  F008         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
  7212  002730  0E00               	movlw	0
  7213  002732  EC06  F00F         	call	_I2C_SetCallback
  7214  002736  0012               	return		;funcret
  7215  002738                     __end_of_I2C_SetDataCompleteCallback:
  7216                           	callstack 0
  7217                           
  7218 ;; *************** function _I2C_SetCallback *****************
  7219 ;; Defined at:
  7220 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
  7221 ;; Parameters:    Size  Location     Type
  7222 ;;  idx             1    wreg     enum E3119
  7223 ;;  cb              2    4[COMRAM] PTR FTN(PTR void ,)enum 
  7224 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7225 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7226 ;;  ptr             2    6[COMRAM] PTR void 
  7227 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7228 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7229 ;; Auto vars:     Size  Location     Type
  7230 ;;  idx             1    8[COMRAM] enum E3119
  7231 ;; Return value:  Size  Location     Type
  7232 ;;                  1    wreg      void 
  7233 ;; Registers used:
  7234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7235 ;; Tracked objects:
  7236 ;;		On entry : 0/0
  7237 ;;		On exit  : 0/0
  7238 ;;		Unchanged: 0/0
  7239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7240 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7243 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7244 ;;Total ram usage:        5 bytes
  7245 ;; Hardware stack levels used:    1
  7246 ;; Hardware stack levels required when called:    4
  7247 ;; This function calls:
  7248 ;;		Nothing
  7249 ;; This function is called by:
  7250 ;;		_I2C_SetDataCompleteCallback
  7251 ;;		_I2C_SetAddressNackCallback
  7252 ;;		_I2C_SetWriteCollisionCallback
  7253 ;;		_I2C_SetDataNackCallback
  7254 ;;		_I2C_SetTimeoutCallback
  7255 ;; This function uses a non-reentrant model
  7256 ;;
  7257                           
  7258                           	psect	text74
  7259  001E0C                     __ptext74:
  7260                           	callstack 0
  7261  001E0C                     _I2C_SetCallback:
  7262                           	callstack 23
  7263                           
  7264                           ;incstack = 0
  7265                           ;I2C_SetCallback@idx stored from wreg
  7266  001E0C  6E09               	movwf	I2C_SetCallback@idx^0,c
  7267  001E0E                     
  7268                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
  7269  001E0E  5005               	movf	I2C_SetCallback@cb^0,w,c
  7270  001E10  1006               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
  7271  001E12  B4D8               	btfsc	status,2,c
  7272  001E14  EF0E  F00F         	goto	u1171
  7273  001E18  EF10  F00F         	goto	u1170
  7274  001E1C                     u1171:
  7275  001E1C  EF2A  F00F         	goto	l2768
  7276  001E20                     u1170:
  7277  001E20                     
  7278                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
  7279  001E20  5009               	movf	I2C_SetCallback@idx^0,w,c
  7280  001E22  0D02               	mullw	2
  7281  001E24  0E60               	movlw	low _I2C_Status
  7282  001E26  24F3               	addwf	243,w,c
  7283  001E28  6ED9               	movwf	fsr2l,c
  7284  001E2A  0E00               	movlw	high _I2C_Status
  7285  001E2C  20F4               	addwfc	prodh,w,c
  7286  001E2E  6EDA               	movwf	fsr2h,c
  7287  001E30  C005  FFDE         	movff	I2C_SetCallback@cb,postinc2
  7288  001E34  C006  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
  7289                           
  7290                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
  7291  001E38  5009               	movf	I2C_SetCallback@idx^0,w,c
  7292  001E3A  0D02               	mullw	2
  7293  001E3C  0E6C               	movlw	low (_I2C_Status+12)
  7294  001E3E  24F3               	addwf	243,w,c
  7295  001E40  6ED9               	movwf	fsr2l,c
  7296  001E42  0E00               	movlw	high (_I2C_Status+12)
  7297  001E44  20F4               	addwfc	prodh,w,c
  7298  001E46  6EDA               	movwf	fsr2h,c
  7299  001E48  C007  FFDE         	movff	I2C_SetCallback@ptr,postinc2
  7300  001E4C  C008  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
  7301                           
  7302                           ;mcc_generated_files/i2c_master.c: 304:     }
  7303  001E50  EF42  F00F         	goto	l256
  7304  001E54                     l2768:
  7305                           
  7306                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  7307  001E54  5009               	movf	I2C_SetCallback@idx^0,w,c
  7308  001E56  0D02               	mullw	2
  7309  001E58  0E60               	movlw	low _I2C_Status
  7310  001E5A  24F3               	addwf	243,w,c
  7311  001E5C  6ED9               	movwf	fsr2l,c
  7312  001E5E  0E00               	movlw	high _I2C_Status
  7313  001E60  20F4               	addwfc	prodh,w,c
  7314  001E62  6EDA               	movwf	fsr2h,c
  7315  001E64  0E84               	movlw	low _I2C_CallbackReturnStop
  7316  001E66  6EDE               	movwf	postinc2,c
  7317  001E68  0E28               	movlw	high _I2C_CallbackReturnStop
  7318  001E6A  6EDD               	movwf	postdec2,c
  7319                           
  7320                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  7321  001E6C  5009               	movf	I2C_SetCallback@idx^0,w,c
  7322  001E6E  0D02               	mullw	2
  7323  001E70  0E6C               	movlw	low (_I2C_Status+12)
  7324  001E72  24F3               	addwf	243,w,c
  7325  001E74  6ED9               	movwf	fsr2l,c
  7326  001E76  0E00               	movlw	high (_I2C_Status+12)
  7327  001E78  20F4               	addwfc	prodh,w,c
  7328  001E7A  6EDA               	movwf	fsr2h,c
  7329  001E7C  0E00               	movlw	0
  7330  001E7E  6EDE               	movwf	postinc2,c
  7331  001E80  0E00               	movlw	0
  7332  001E82  6EDD               	movwf	postdec2,c
  7333  001E84                     l256:
  7334  001E84  0012               	return		;funcret
  7335  001E86                     __end_of_I2C_SetCallback:
  7336                           	callstack 0
  7337                           
  7338 ;; *************** function _I2C_SetBuffer *****************
  7339 ;; Defined at:
  7340 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;  buffer          2    4[COMRAM] PTR void 
  7343 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  7344 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  7345 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  7346 ;;  bufferSize      2    6[COMRAM] unsigned int 
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;		None
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  1    wreg      void 
  7351 ;; Registers used:
  7352 ;;		wreg, status,2, status,0
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7358 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7361 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7362 ;;Total ram usage:        4 bytes
  7363 ;; Hardware stack levels used:    1
  7364 ;; Hardware stack levels required when called:    4
  7365 ;; This function calls:
  7366 ;;		Nothing
  7367 ;; This function is called by:
  7368 ;;		_I2C_Read1ByteRegister
  7369 ;;		_I2C_Write1ByteRegister
  7370 ;;		_rd1RegCompleteHandler
  7371 ;;		_rd2RegCompleteHandler
  7372 ;;		_wr1RegCompleteHandler
  7373 ;;		_wr2RegCompleteHandler
  7374 ;;		_rdBlkRegCompleteHandler
  7375 ;;		_I2C_Read2ByteRegister
  7376 ;;		_I2C_Write2ByteRegister
  7377 ;;		_I2C_WriteNBytes
  7378 ;;		_I2C_ReadNBytes
  7379 ;;		_I2C_ReadDataBlock
  7380 ;; This function uses a non-reentrant model
  7381 ;;
  7382                           
  7383                           	psect	text75
  7384  002686                     __ptext75:
  7385                           	callstack 0
  7386  002686                     _I2C_SetBuffer:
  7387                           	callstack 24
  7388  002686                     
  7389                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
  7390  002686  0100               	movlb	0	; () banked
  7391  002688  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
  7392  00268A  EF49  F013         	goto	u1181
  7393  00268E  EF4B  F013         	goto	u1180
  7394  002692                     u1181:
  7395  002692  EF54  F013         	goto	l236
  7396  002696                     u1180:
  7397  002696                     
  7398                           ; BSR set to: 0
  7399                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
  7400  002696  C005  F07D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
  7401  00269A  C006  F07E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
  7402  00269E                     
  7403                           ; BSR set to: 0
  7404                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
  7405  00269E  C007  F07F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
  7406  0026A2  C008  F080         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
  7407  0026A6                     
  7408                           ; BSR set to: 0
  7409                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
  7410  0026A6  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
  7411  0026A8                     l236:
  7412                           
  7413                           ; BSR set to: 0
  7414  0026A8  0012               	return		;funcret
  7415  0026AA                     __end_of_I2C_SetBuffer:
  7416                           	callstack 0
  7417                           
  7418 ;; *************** function _I2C_MasterStop *****************
  7419 ;; Defined at:
  7420 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
  7421 ;; Parameters:    Size  Location     Type
  7422 ;;		None
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;		None
  7425 ;; Return value:  Size  Location     Type
  7426 ;;                  1    wreg      void 
  7427 ;; Registers used:
  7428 ;;		None
  7429 ;; Tracked objects:
  7430 ;;		On entry : 0/0
  7431 ;;		On exit  : 0/0
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7438 ;;Total ram usage:        0 bytes
  7439 ;; Hardware stack levels used:    1
  7440 ;; Hardware stack levels required when called:    4
  7441 ;; This function calls:
  7442 ;;		Nothing
  7443 ;; This function is called by:
  7444 ;;		_I2C_DO_SEND_STOP
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           	psect	text76
  7449  002888                     __ptext76:
  7450                           	callstack 0
  7451  002888                     _I2C_MasterStop:
  7452                           	callstack 18
  7453  002888                     
  7454                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
  7455  002888  84C5               	bsf	197,2,c	;volatile
  7456  00288A  0012               	return		;funcret
  7457  00288C                     __end_of_I2C_MasterStop:
  7458                           	callstack 0
  7459                           
  7460 ;; *************** function _I2C_MasterEnableRestart *****************
  7461 ;; Defined at:
  7462 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
  7463 ;; Parameters:    Size  Location     Type
  7464 ;;		None
  7465 ;; Auto vars:     Size  Location     Type
  7466 ;;		None
  7467 ;; Return value:  Size  Location     Type
  7468 ;;                  1    wreg      void 
  7469 ;; Registers used:
  7470 ;;		None
  7471 ;; Tracked objects:
  7472 ;;		On entry : 0/0
  7473 ;;		On exit  : 0/0
  7474 ;;		Unchanged: 0/0
  7475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7480 ;;Total ram usage:        0 bytes
  7481 ;; Hardware stack levels used:    1
  7482 ;; Hardware stack levels required when called:    4
  7483 ;; This function calls:
  7484 ;;		Nothing
  7485 ;; This function is called by:
  7486 ;;		_I2C_DO_SEND_RESTART_READ
  7487 ;;		_I2C_DO_SEND_RESTART_WRITE
  7488 ;;		_I2C_DO_SEND_RESTART
  7489 ;;		_I2C_DO_RX_EMPTY
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           	psect	text77
  7494  00288C                     __ptext77:
  7495                           	callstack 0
  7496  00288C                     _I2C_MasterEnableRestart:
  7497                           	callstack 18
  7498  00288C                     
  7499                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
  7500  00288C  82C5               	bsf	197,1,c	;volatile
  7501  00288E  0012               	return		;funcret
  7502  002890                     __end_of_I2C_MasterEnableRestart:
  7503                           	callstack 0
  7504                           
  7505 ;; *************** function _I2C_MasterStart *****************
  7506 ;; Defined at:
  7507 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
  7508 ;; Parameters:    Size  Location     Type
  7509 ;;		None
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;		None
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  1    wreg      void 
  7514 ;; Registers used:
  7515 ;;		None
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7525 ;;Total ram usage:        0 bytes
  7526 ;; Hardware stack levels used:    1
  7527 ;; Hardware stack levels required when called:    4
  7528 ;; This function calls:
  7529 ;;		Nothing
  7530 ;; This function is called by:
  7531 ;;		_I2C_MasterOperation
  7532 ;; This function uses a non-reentrant model
  7533 ;;
  7534                           
  7535                           	psect	text78
  7536  002890                     __ptext78:
  7537                           	callstack 0
  7538  002890                     _I2C_MasterStart:
  7539                           	callstack 22
  7540  002890                     
  7541                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
  7542  002890  80C5               	bsf	197,0,c	;volatile
  7543  002892  0012               	return		;funcret
  7544  002894                     __end_of_I2C_MasterStart:
  7545                           	callstack 0
  7546                           
  7547 ;; *************** function _I2C_Close *****************
  7548 ;; Defined at:
  7549 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
  7550 ;; Parameters:    Size  Location     Type
  7551 ;;		None
  7552 ;; Auto vars:     Size  Location     Type
  7553 ;;  returnValue     1    4[COMRAM] enum E353
  7554 ;; Return value:  Size  Location     Type
  7555 ;;                  1    wreg      enum E353
  7556 ;; Registers used:
  7557 ;;		wreg, status,2, cstack
  7558 ;; Tracked objects:
  7559 ;;		On entry : 0/0
  7560 ;;		On exit  : 0/0
  7561 ;;		Unchanged: 0/0
  7562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7566 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7567 ;;Total ram usage:        1 bytes
  7568 ;; Hardware stack levels used:    1
  7569 ;; Hardware stack levels required when called:    5
  7570 ;; This function calls:
  7571 ;;		_I2C_MasterClearIrq
  7572 ;;		_I2C_MasterClose
  7573 ;;		_I2C_MasterDisableIrq
  7574 ;; This function is called by:
  7575 ;;		_I2C_Read1ByteRegister
  7576 ;;		_I2C_Write1ByteRegister
  7577 ;;		_I2C_Read2ByteRegister
  7578 ;;		_I2C_Write2ByteRegister
  7579 ;;		_I2C_WriteNBytes
  7580 ;;		_I2C_ReadNBytes
  7581 ;;		_I2C_ReadDataBlock
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           
  7585                           	psect	text79
  7586  0025DE                     __ptext79:
  7587                           	callstack 0
  7588  0025DE                     _I2C_Close:
  7589                           	callstack 23
  7590  0025DE                     
  7591                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
  7592  0025DE  0E01               	movlw	1
  7593  0025E0  6E05               	movwf	I2C_Close@returnValue^0,c
  7594  0025E2                     
  7595                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
  7596  0025E2  0100               	movlb	0	; () banked
  7597  0025E4  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  7598  0025E6  EFF7  F012         	goto	u1861
  7599  0025EA  EFF9  F012         	goto	u1860
  7600  0025EE                     u1861:
  7601  0025EE  EF03  F013         	goto	l3388
  7602  0025F2                     u1860:
  7603  0025F2                     
  7604                           ; BSR set to: 0
  7605                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
  7606  0025F2  9583               	bcf	(_I2C_Status+35)& (0+255),2,b
  7607                           
  7608                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
  7609  0025F4  697C               	setf	(_I2C_Status+28)& (0+255),b
  7610  0025F6                     
  7611                           ; BSR set to: 0
  7612                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
  7613  0025F6  EC4E  F014         	call	_I2C_MasterClearIrq	;wreg free
  7614                           
  7615                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
  7616  0025FA  EC4A  F014         	call	_I2C_MasterDisableIrq	;wreg free
  7617                           
  7618                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
  7619  0025FE  EC4C  F014         	call	_I2C_MasterClose	;wreg free
  7620  002602                     
  7621                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
  7622  002602  C082  F005         	movff	_I2C_Status+34,I2C_Close@returnValue
  7623  002606                     l3388:
  7624                           
  7625                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
  7626  002606  5005               	movf	I2C_Close@returnValue^0,w,c
  7627  002608  0012               	return		;funcret
  7628  00260A                     __end_of_I2C_Close:
  7629                           	callstack 0
  7630                           
  7631 ;; *************** function _I2C_MasterDisableIrq *****************
  7632 ;; Defined at:
  7633 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
  7634 ;; Parameters:    Size  Location     Type
  7635 ;;		None
  7636 ;; Auto vars:     Size  Location     Type
  7637 ;;		None
  7638 ;; Return value:  Size  Location     Type
  7639 ;;                  1    wreg      void 
  7640 ;; Registers used:
  7641 ;;		None
  7642 ;; Tracked objects:
  7643 ;;		On entry : 0/0
  7644 ;;		On exit  : 0/0
  7645 ;;		Unchanged: 0/0
  7646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7651 ;;Total ram usage:        0 bytes
  7652 ;; Hardware stack levels used:    1
  7653 ;; Hardware stack levels required when called:    4
  7654 ;; This function calls:
  7655 ;;		Nothing
  7656 ;; This function is called by:
  7657 ;;		_I2C_Close
  7658 ;;		_I2C_SetTimeOut
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662                           	psect	text80
  7663  002894                     __ptext80:
  7664                           	callstack 0
  7665  002894                     _I2C_MasterDisableIrq:
  7666                           	callstack 23
  7667  002894                     
  7668                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
  7669  002894  969D               	bcf	157,3,c	;volatile
  7670  002896  0012               	return		;funcret
  7671  002898                     __end_of_I2C_MasterDisableIrq:
  7672                           	callstack 0
  7673                           
  7674 ;; *************** function _I2C_MasterClose *****************
  7675 ;; Defined at:
  7676 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;		None
  7679 ;; Auto vars:     Size  Location     Type
  7680 ;;		None
  7681 ;; Return value:  Size  Location     Type
  7682 ;;                  1    wreg      void 
  7683 ;; Registers used:
  7684 ;;		None
  7685 ;; Tracked objects:
  7686 ;;		On entry : 0/0
  7687 ;;		On exit  : 0/0
  7688 ;;		Unchanged: 0/0
  7689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7694 ;;Total ram usage:        0 bytes
  7695 ;; Hardware stack levels used:    1
  7696 ;; Hardware stack levels required when called:    4
  7697 ;; This function calls:
  7698 ;;		Nothing
  7699 ;; This function is called by:
  7700 ;;		_I2C_Close
  7701 ;; This function uses a non-reentrant model
  7702 ;;
  7703                           
  7704                           	psect	text81
  7705  002898                     __ptext81:
  7706                           	callstack 0
  7707  002898                     _I2C_MasterClose:
  7708                           	callstack 23
  7709  002898                     
  7710                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
  7711  002898  9AC6               	bcf	198,5,c	;volatile
  7712  00289A  0012               	return		;funcret
  7713  00289C                     __end_of_I2C_MasterClose:
  7714                           	callstack 0
  7715                           
  7716 ;; *************** function _I2C_MasterClearIrq *****************
  7717 ;; Defined at:
  7718 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;		None
  7721 ;; Auto vars:     Size  Location     Type
  7722 ;;		None
  7723 ;; Return value:  Size  Location     Type
  7724 ;;                  1    wreg      void 
  7725 ;; Registers used:
  7726 ;;		None
  7727 ;; Tracked objects:
  7728 ;;		On entry : 0/0
  7729 ;;		On exit  : 0/0
  7730 ;;		Unchanged: 0/0
  7731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7736 ;;Total ram usage:        0 bytes
  7737 ;; Hardware stack levels used:    1
  7738 ;; Hardware stack levels required when called:    4
  7739 ;; This function calls:
  7740 ;;		Nothing
  7741 ;; This function is called by:
  7742 ;;		_I2C_Open
  7743 ;;		_I2C_Close
  7744 ;;		_I2C_MasterFsm
  7745 ;; This function uses a non-reentrant model
  7746 ;;
  7747                           
  7748                           	psect	text82
  7749  00289C                     __ptext82:
  7750                           	callstack 0
  7751  00289C                     _I2C_MasterClearIrq:
  7752                           	callstack 23
  7753  00289C                     
  7754                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
  7755  00289C  969E               	bcf	158,3,c	;volatile
  7756  00289E  0012               	return		;funcret
  7757  0028A0                     __end_of_I2C_MasterClearIrq:
  7758                           	callstack 0
  7759                           
  7760 ;; *************** function _INTERRUPT_InterruptManager *****************
  7761 ;; Defined at:
  7762 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;		None
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;		None
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  1    wreg      void 
  7769 ;; Registers used:
  7770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7778 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7779 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7780 ;;Total ram usage:        4 bytes
  7781 ;; Hardware stack levels used:    1
  7782 ;; Hardware stack levels required when called:    3
  7783 ;; This function calls:
  7784 ;;		Absolute function
  7785 ;;		_EUSART_Receive_ISR
  7786 ;;		_EUSART_Transmit_ISR
  7787 ;; This function is called by:
  7788 ;;		Interrupt level 2
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           	psect	intcode
  7793  000008                     __pintcode:
  7794                           	callstack 0
  7795  000008                     _INTERRUPT_InterruptManager:
  7796                           	callstack 17
  7797                           
  7798                           ;incstack = 0
  7799  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7800  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  7801  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  7802  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  7803  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  7804  00001A                     
  7805                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  7806  00001A  ACF2               	btfss	242,6,c	;volatile
  7807  00001C  EF12  F000         	goto	i2u226_41
  7808  000020  EF14  F000         	goto	i2u226_40
  7809  000024                     i2u226_41:
  7810  000024  EF4E  F000         	goto	i2l671
  7811  000028                     i2u226_40:
  7812  000028                     
  7813                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  7814  000028  A89D               	btfss	157,4,c	;volatile
  7815  00002A  EF19  F000         	goto	i2u227_41
  7816  00002E  EF1B  F000         	goto	i2u227_40
  7817  000032                     i2u227_41:
  7818  000032  EF31  F000         	goto	i2l666
  7819  000036                     i2u227_40:
  7820  000036  A89E               	btfss	158,4,c	;volatile
  7821  000038  EF20  F000         	goto	i2u228_41
  7822  00003C  EF22  F000         	goto	i2u228_40
  7823  000040                     i2u228_41:
  7824  000040  EF31  F000         	goto	i2l666
  7825  000044                     i2u228_40:
  7826  000044                     
  7827                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART_TxDefaultInterruptHandler();
  7828  000044  D802               	call	i2u229_48
  7829  000046  EF2F  F000         	goto	i2u229_49
  7830  00004A                     i2u229_48:
  7831  00004A  0005               	push	
  7832  00004C  6EFA               	movwf	pclath,c
  7833  00004E  0100               	movlb	0	; () banked
  7834  000050  51FA               	movf	_EUSART_TxDefaultInterruptHandler& (0+255),w,b
  7835  000052  6EFD               	movwf	tosl,c
  7836  000054  51FB               	movf	(_EUSART_TxDefaultInterruptHandler+1)& (0+255),w,b
  7837  000056  6EFE               	movwf	tosh,c
  7838  000058  6AFF               	clrf	tosu,c
  7839  00005A  50FA               	movf	pclath,w,c
  7840  00005C  0012               	return		;indir
  7841  00005E                     i2u229_49:
  7842                           
  7843                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  7844  00005E  EF4E  F000         	goto	i2l671
  7845  000062                     i2l666:
  7846  000062  AA9D               	btfss	157,5,c	;volatile
  7847  000064  EF36  F000         	goto	i2u230_41
  7848  000068  EF38  F000         	goto	i2u230_40
  7849  00006C                     i2u230_41:
  7850  00006C  EF4E  F000         	goto	i2l667
  7851  000070                     i2u230_40:
  7852  000070  AA9E               	btfss	158,5,c	;volatile
  7853  000072  EF3D  F000         	goto	i2u231_41
  7854  000076  EF3F  F000         	goto	i2u231_40
  7855  00007A                     i2u231_41:
  7856  00007A  EF4E  F000         	goto	i2l667
  7857  00007E                     i2u231_40:
  7858  00007E                     
  7859                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART_RxDefaultInterruptHandler();
  7860  00007E  D802               	call	i2u232_48
  7861  000080  EF4C  F000         	goto	i2u232_49
  7862  000084                     i2u232_48:
  7863  000084  0005               	push	
  7864  000086  6EFA               	movwf	pclath,c
  7865  000088  0100               	movlb	0	; () banked
  7866  00008A  51F8               	movf	_EUSART_RxDefaultInterruptHandler& (0+255),w,b
  7867  00008C  6EFD               	movwf	tosl,c
  7868  00008E  51F9               	movf	(_EUSART_RxDefaultInterruptHandler+1)& (0+255),w,b
  7869  000090  6EFE               	movwf	tosh,c
  7870  000092  6AFF               	clrf	tosu,c
  7871  000094  50FA               	movf	pclath,w,c
  7872  000096  0012               	return		;indir
  7873  000098                     i2u232_49:
  7874                           
  7875                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  7876  000098  EF4E  F000         	goto	i2l671
  7877  00009C                     i2l667:
  7878  00009C                     i2l671:
  7879  00009C  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  7880  0000A0  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  7881  0000A4  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  7882  0000A8  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  7883  0000AC  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7884  0000AE  0011               	retfie		f
  7885  0000B0                     __end_of_INTERRUPT_InterruptManager:
  7886                           	callstack 0
  7887                           
  7888 ;; *************** function _EUSART_Transmit_ISR *****************
  7889 ;; Defined at:
  7890 ;;		line 206 in file "mcc_generated_files/eusart.c"
  7891 ;; Parameters:    Size  Location     Type
  7892 ;;		None
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;		None
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  1    wreg      void 
  7897 ;; Registers used:
  7898 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7908 ;;Total ram usage:        0 bytes
  7909 ;; Hardware stack levels used:    1
  7910 ;; This function calls:
  7911 ;;		Nothing
  7912 ;; This function is called by:
  7913 ;;		_EUSART_Initialize
  7914 ;;		_INTERRUPT_InterruptManager
  7915 ;; This function uses a non-reentrant model
  7916 ;;
  7917                           
  7918                           	psect	text84
  7919  002362                     __ptext84:
  7920                           	callstack 0
  7921  002362                     _EUSART_Transmit_ISR:
  7922                           	callstack 19
  7923  002362                     
  7924                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  7925  002362  0E08               	movlw	8
  7926  002364  0100               	movlb	0	; () banked
  7927  002366  61FC               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
  7928  002368  EFB8  F011         	goto	i2u206_41
  7929  00236C  EFBA  F011         	goto	i2u206_40
  7930  002370                     i2u206_41:
  7931  002370  EFD0  F011         	goto	i2l607
  7932  002374                     i2u206_40:
  7933  002374                     
  7934                           ; BSR set to: 0
  7935                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  7936  002374  0E94               	movlw	low _eusartTxBuffer
  7937  002376  2459               	addwf	_eusartTxTail^0,w,c	;volatile
  7938  002378  6ED9               	movwf	fsr2l,c
  7939  00237A  6ADA               	clrf	fsr2h,c
  7940  00237C  0E00               	movlw	high _eusartTxBuffer
  7941  00237E  22DA               	addwfc	fsr2h,f,c
  7942  002380  50DF               	movf	indf2,w,c
  7943  002382  6EAD               	movwf	173,c	;volatile
  7944  002384                     
  7945                           ; BSR set to: 0
  7946  002384  2A59               	incf	_eusartTxTail^0,f,c	;volatile
  7947  002386                     
  7948                           ; BSR set to: 0
  7949                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  7950  002386  0E07               	movlw	7
  7951  002388  6459               	cpfsgt	_eusartTxTail^0,c	;volatile
  7952  00238A  EFC9  F011         	goto	i2u207_41
  7953  00238E  EFCB  F011         	goto	i2u207_40
  7954  002392                     i2u207_41:
  7955  002392  EFCD  F011         	goto	i2l3644
  7956  002396                     i2u207_40:
  7957  002396                     
  7958                           ; BSR set to: 0
  7959                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
  7960  002396  0E00               	movlw	0
  7961  002398  6E59               	movwf	_eusartTxTail^0,c	;volatile
  7962  00239A                     i2l3644:
  7963                           
  7964                           ; BSR set to: 0
  7965                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
  7966  00239A  2BFC               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
  7967                           
  7968                           ;mcc_generated_files/eusart.c: 218:     }
  7969  00239C  EFD1  F011         	goto	i2l610
  7970  0023A0                     i2l607:
  7971                           
  7972                           ; BSR set to: 0
  7973                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TX1IE = 0;
  7974  0023A0  989D               	bcf	157,4,c	;volatile
  7975  0023A2                     i2l610:
  7976                           
  7977                           ; BSR set to: 0
  7978  0023A2  0012               	return		;funcret
  7979  0023A4                     __end_of_EUSART_Transmit_ISR:
  7980                           	callstack 0
  7981                           
  7982 ;; *************** function _EUSART_Receive_ISR *****************
  7983 ;; Defined at:
  7984 ;;		line 225 in file "mcc_generated_files/eusart.c"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;		None
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;		None
  7989 ;; Return value:  Size  Location     Type
  7990 ;;                  1    wreg      void 
  7991 ;; Registers used:
  7992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7993 ;; Tracked objects:
  7994 ;;		On entry : 0/0
  7995 ;;		On exit  : 0/0
  7996 ;;		Unchanged: 0/0
  7997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8002 ;;Total ram usage:        0 bytes
  8003 ;; Hardware stack levels used:    1
  8004 ;; Hardware stack levels required when called:    2
  8005 ;; This function calls:
  8006 ;;		Absolute function
  8007 ;;		_EUSART_DefaultErrorHandler
  8008 ;;		_EUSART_DefaultFramingErrorHandler
  8009 ;;		_EUSART_DefaultOverrunErrorHandler
  8010 ;;		_EUSART_RxDataHandler
  8011 ;; This function is called by:
  8012 ;;		_EUSART_Initialize
  8013 ;;		_INTERRUPT_InterruptManager
  8014 ;; This function uses a non-reentrant model
  8015 ;;
  8016                           
  8017                           	psect	text85
  8018  0019E0                     __ptext85:
  8019                           	callstack 0
  8020  0019E0                     _EUSART_Receive_ISR:
  8021                           	callstack 17
  8022  0019E0                     
  8023                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  8024  0019E0  0E84               	movlw	low _eusartRxStatusBuffer
  8025  0019E2  2458               	addwf	_eusartRxHead^0,w,c	;volatile
  8026  0019E4  6ED9               	movwf	fsr2l,c
  8027  0019E6  6ADA               	clrf	fsr2h,c
  8028  0019E8  0E00               	movlw	high _eusartRxStatusBuffer
  8029  0019EA  22DA               	addwfc	fsr2h,f,c
  8030  0019EC  0E00               	movlw	0
  8031  0019EE  6EDF               	movwf	indf2,c
  8032  0019F0                     
  8033                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
  8034  0019F0  A4AB               	btfss	171,2,c	;volatile
  8035  0019F2  EFFD  F00C         	goto	i2u208_41
  8036  0019F6  EFFF  F00C         	goto	i2u208_40
  8037  0019FA                     i2u208_41:
  8038  0019FA  EF13  F00D         	goto	i2l3654
  8039  0019FE                     i2u208_40:
  8040  0019FE                     
  8041                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  8042  0019FE  0E84               	movlw	low _eusartRxStatusBuffer
  8043  001A00  2458               	addwf	_eusartRxHead^0,w,c	;volatile
  8044  001A02  6ED9               	movwf	fsr2l,c
  8045  001A04  6ADA               	clrf	fsr2h,c
  8046  001A06  0E00               	movlw	high _eusartRxStatusBuffer
  8047  001A08  22DA               	addwfc	fsr2h,f,c
  8048  001A0A  0100               	movlb	0	; () banked
  8049  001A0C  82DF               	bsf	indf2,1,c
  8050  001A0E                     
  8051                           ; BSR set to: 0
  8052                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
  8053  001A0E  D802               	call	i2u209_48
  8054  001A10  EF13  F00D         	goto	i2u209_49
  8055  001A14                     i2u209_48:
  8056  001A14  0005               	push	
  8057  001A16  6EFA               	movwf	pclath,c
  8058  001A18  51F6               	movf	_EUSART_FramingErrorHandler& (0+255),w,b
  8059  001A1A  6EFD               	movwf	tosl,c
  8060  001A1C  51F7               	movf	(_EUSART_FramingErrorHandler+1)& (0+255),w,b
  8061  001A1E  6EFE               	movwf	tosh,c
  8062  001A20  6AFF               	clrf	tosu,c
  8063  001A22  50FA               	movf	pclath,w,c
  8064  001A24  0012               	return		;indir
  8065  001A26                     i2u209_49:
  8066  001A26                     i2l3654:
  8067                           
  8068                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
  8069  001A26  A2AB               	btfss	171,1,c	;volatile
  8070  001A28  EF18  F00D         	goto	i2u210_41
  8071  001A2C  EF1A  F00D         	goto	i2u210_40
  8072  001A30                     i2u210_41:
  8073  001A30  EF2E  F00D         	goto	i2l3660
  8074  001A34                     i2u210_40:
  8075  001A34                     
  8076                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  8077  001A34  0E84               	movlw	low _eusartRxStatusBuffer
  8078  001A36  2458               	addwf	_eusartRxHead^0,w,c	;volatile
  8079  001A38  6ED9               	movwf	fsr2l,c
  8080  001A3A  6ADA               	clrf	fsr2h,c
  8081  001A3C  0E00               	movlw	high _eusartRxStatusBuffer
  8082  001A3E  22DA               	addwfc	fsr2h,f,c
  8083  001A40  0100               	movlb	0	; () banked
  8084  001A42  84DF               	bsf	indf2,2,c
  8085  001A44                     
  8086                           ; BSR set to: 0
  8087                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
  8088  001A44  D802               	call	i2u211_48
  8089  001A46  EF2E  F00D         	goto	i2u211_49
  8090  001A4A                     i2u211_48:
  8091  001A4A  0005               	push	
  8092  001A4C  6EFA               	movwf	pclath,c
  8093  001A4E  51F4               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
  8094  001A50  6EFD               	movwf	tosl,c
  8095  001A52  51F5               	movf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
  8096  001A54  6EFE               	movwf	tosh,c
  8097  001A56  6AFF               	clrf	tosu,c
  8098  001A58  50FA               	movf	pclath,w,c
  8099  001A5A  0012               	return		;indir
  8100  001A5C                     i2u211_49:
  8101  001A5C                     i2l3660:
  8102                           
  8103                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
  8104  001A5C  0E84               	movlw	low _eusartRxStatusBuffer
  8105  001A5E  2458               	addwf	_eusartRxHead^0,w,c	;volatile
  8106  001A60  6ED9               	movwf	fsr2l,c
  8107  001A62  6ADA               	clrf	fsr2h,c
  8108  001A64  0E00               	movlw	high _eusartRxStatusBuffer
  8109  001A66  22DA               	addwfc	fsr2h,f,c
  8110  001A68  50DF               	movf	indf2,w,c
  8111  001A6A  B4D8               	btfsc	status,2,c
  8112  001A6C  EF3A  F00D         	goto	i2u212_41
  8113  001A70  EF3C  F00D         	goto	i2u212_40
  8114  001A74                     i2u212_41:
  8115  001A74  EF4B  F00D         	goto	i2l3664
  8116  001A78                     i2u212_40:
  8117  001A78                     
  8118                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
  8119  001A78  D802               	call	i2u213_48
  8120  001A7A  EF49  F00D         	goto	i2u213_49
  8121  001A7E                     i2u213_48:
  8122  001A7E  0005               	push	
  8123  001A80  6EFA               	movwf	pclath,c
  8124  001A82  0100               	movlb	0	; () banked
  8125  001A84  51F2               	movf	_EUSART_ErrorHandler& (0+255),w,b
  8126  001A86  6EFD               	movwf	tosl,c
  8127  001A88  51F3               	movf	(_EUSART_ErrorHandler+1)& (0+255),w,b
  8128  001A8A  6EFE               	movwf	tosh,c
  8129  001A8C  6AFF               	clrf	tosu,c
  8130  001A8E  50FA               	movf	pclath,w,c
  8131  001A90  0012               	return		;indir
  8132  001A92                     i2u213_49:
  8133                           
  8134                           ;mcc_generated_files/eusart.c: 242:     } else {
  8135  001A92  EF4D  F00D         	goto	i2l617
  8136  001A96                     i2l3664:
  8137                           
  8138                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
  8139  001A96  EC05  F013         	call	_EUSART_RxDataHandler	;wreg free
  8140  001A9A                     i2l617:
  8141  001A9A  0012               	return		;funcret
  8142  001A9C                     __end_of_EUSART_Receive_ISR:
  8143                           	callstack 0
  8144                           
  8145 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  8146 ;; Defined at:
  8147 ;;		line 261 in file "mcc_generated_files/eusart.c"
  8148 ;; Parameters:    Size  Location     Type
  8149 ;;		None
  8150 ;; Auto vars:     Size  Location     Type
  8151 ;;		None
  8152 ;; Return value:  Size  Location     Type
  8153 ;;                  1    wreg      void 
  8154 ;; Registers used:
  8155 ;;		None
  8156 ;; Tracked objects:
  8157 ;;		On entry : 0/0
  8158 ;;		On exit  : 0/0
  8159 ;;		Unchanged: 0/0
  8160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8165 ;;Total ram usage:        0 bytes
  8166 ;; Hardware stack levels used:    1
  8167 ;; This function calls:
  8168 ;;		Nothing
  8169 ;; This function is called by:
  8170 ;;		_EUSART_Initialize
  8171 ;;		_EUSART_Receive_ISR
  8172 ;; This function uses a non-reentrant model
  8173 ;;
  8174                           
  8175                           	psect	text86
  8176  002864                     __ptext86:
  8177                           	callstack 0
  8178  002864                     _EUSART_DefaultOverrunErrorHandler:
  8179                           	callstack 18
  8180  002864                     
  8181                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
  8182  002864  98AB               	bcf	171,4,c	;volatile
  8183                           
  8184                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
  8185  002866  88AB               	bsf	171,4,c	;volatile
  8186  002868  0012               	return		;funcret
  8187  00286A                     __end_of_EUSART_DefaultOverrunErrorHandler:
  8188                           	callstack 0
  8189                           
  8190 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  8191 ;; Defined at:
  8192 ;;		line 259 in file "mcc_generated_files/eusart.c"
  8193 ;; Parameters:    Size  Location     Type
  8194 ;;		None
  8195 ;; Auto vars:     Size  Location     Type
  8196 ;;		None
  8197 ;; Return value:  Size  Location     Type
  8198 ;;                  1    wreg      void 
  8199 ;; Registers used:
  8200 ;;		None
  8201 ;; Tracked objects:
  8202 ;;		On entry : 0/0
  8203 ;;		On exit  : 0/0
  8204 ;;		Unchanged: 0/0
  8205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8210 ;;Total ram usage:        0 bytes
  8211 ;; Hardware stack levels used:    1
  8212 ;; This function calls:
  8213 ;;		Nothing
  8214 ;; This function is called by:
  8215 ;;		_EUSART_Initialize
  8216 ;;		_EUSART_Receive_ISR
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           	psect	text87
  8221  0028A0                     __ptext87:
  8222                           	callstack 0
  8223  0028A0                     _EUSART_DefaultFramingErrorHandler:
  8224                           	callstack 18
  8225  0028A0  0012               	return		;funcret
  8226  0028A2                     __end_of_EUSART_DefaultFramingErrorHandler:
  8227                           	callstack 0
  8228                           
  8229 ;; *************** function _EUSART_DefaultErrorHandler *****************
  8230 ;; Defined at:
  8231 ;;		line 269 in file "mcc_generated_files/eusart.c"
  8232 ;; Parameters:    Size  Location     Type
  8233 ;;		None
  8234 ;; Auto vars:     Size  Location     Type
  8235 ;;		None
  8236 ;; Return value:  Size  Location     Type
  8237 ;;                  1    wreg      void 
  8238 ;; Registers used:
  8239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8240 ;; Tracked objects:
  8241 ;;		On entry : 0/0
  8242 ;;		On exit  : 0/0
  8243 ;;		Unchanged: 0/0
  8244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8249 ;;Total ram usage:        0 bytes
  8250 ;; Hardware stack levels used:    1
  8251 ;; Hardware stack levels required when called:    1
  8252 ;; This function calls:
  8253 ;;		_EUSART_RxDataHandler
  8254 ;; This function is called by:
  8255 ;;		_EUSART_Initialize
  8256 ;;		_EUSART_Receive_ISR
  8257 ;; This function uses a non-reentrant model
  8258 ;;
  8259                           
  8260                           	psect	text88
  8261  00286A                     __ptext88:
  8262                           	callstack 0
  8263  00286A                     _EUSART_DefaultErrorHandler:
  8264                           	callstack 17
  8265  00286A                     
  8266                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
  8267  00286A  EC05  F013         	call	_EUSART_RxDataHandler	;wreg free
  8268  00286E  0012               	return		;funcret
  8269  002870                     __end_of_EUSART_DefaultErrorHandler:
  8270                           	callstack 0
  8271                           
  8272 ;; *************** function _EUSART_RxDataHandler *****************
  8273 ;; Defined at:
  8274 ;;		line 249 in file "mcc_generated_files/eusart.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;		None
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;		None
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  1    wreg      void 
  8281 ;; Registers used:
  8282 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/0
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8292 ;;Total ram usage:        0 bytes
  8293 ;; Hardware stack levels used:    1
  8294 ;; This function calls:
  8295 ;;		Nothing
  8296 ;; This function is called by:
  8297 ;;		_EUSART_Receive_ISR
  8298 ;;		_EUSART_DefaultErrorHandler
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           	psect	text89
  8303  00260A                     __ptext89:
  8304                           	callstack 0
  8305  00260A                     _EUSART_RxDataHandler:
  8306                           	callstack 18
  8307  00260A                     
  8308                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
  8309  00260A  0E8C               	movlw	low _eusartRxBuffer
  8310  00260C  2458               	addwf	_eusartRxHead^0,w,c	;volatile
  8311  00260E  6ED9               	movwf	fsr2l,c
  8312  002610  6ADA               	clrf	fsr2h,c
  8313  002612  0E00               	movlw	high _eusartRxBuffer
  8314  002614  22DA               	addwfc	fsr2h,f,c
  8315  002616  CFAE FFDF          	movff	4014,indf2	;volatile
  8316  00261A  2A58               	incf	_eusartRxHead^0,f,c	;volatile
  8317  00261C                     
  8318                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  8319  00261C  0E07               	movlw	7
  8320  00261E  6458               	cpfsgt	_eusartRxHead^0,c	;volatile
  8321  002620  EF14  F013         	goto	i2u187_41
  8322  002624  EF16  F013         	goto	i2u187_40
  8323  002628                     i2u187_41:
  8324  002628  EF18  F013         	goto	i2l3410
  8325  00262C                     i2u187_40:
  8326  00262C                     
  8327                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
  8328  00262C  0E00               	movlw	0
  8329  00262E  6E58               	movwf	_eusartRxHead^0,c	;volatile
  8330  002630                     i2l3410:
  8331                           
  8332                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
  8333  002630  0100               	movlb	0	; () banked
  8334  002632  2BAA               	incf	_eusartRxCount& (0+255),f,b	;volatile
  8335  002634                     
  8336                           ; BSR set to: 0
  8337  002634  0012               	return		;funcret
  8338  002636                     __end_of_EUSART_RxDataHandler:
  8339                           	callstack 0
  8340                           
  8341                           	psect	text90
  8342  000000                     __ptext90:
  8343                           	callstack 0
  8344  000000                     
  8345                           	psect	rparam
  8346  0000                     
  8347                           	psect	temp
  8348  00005B                     btemp:
  8349                           	callstack 0
  8350  00005B                     	ds	1
  8351  0000                     int$flags	set	btemp
  8352  0000                     wtemp8	set	btemp+1
  8353  0000                     ttemp5	set	btemp+1
  8354  0000                     ttemp6	set	btemp+4
  8355  0000                     ttemp7	set	btemp+8
  8356                           
  8357                           	psect	idloc
  8358                           
  8359                           ;Config register IDLOC0 @ 0x200000
  8360                           ;	unspecified, using default values
  8361  200000                     	org	2097152
  8362  200000  FF                 	db	255
  8363                           
  8364                           ;Config register IDLOC1 @ 0x200001
  8365                           ;	unspecified, using default values
  8366  200001                     	org	2097153
  8367  200001  FF                 	db	255
  8368                           
  8369                           ;Config register IDLOC2 @ 0x200002
  8370                           ;	unspecified, using default values
  8371  200002                     	org	2097154
  8372  200002  FF                 	db	255
  8373                           
  8374                           ;Config register IDLOC3 @ 0x200003
  8375                           ;	unspecified, using default values
  8376  200003                     	org	2097155
  8377  200003  FF                 	db	255
  8378                           
  8379                           ;Config register IDLOC4 @ 0x200004
  8380                           ;	unspecified, using default values
  8381  200004                     	org	2097156
  8382  200004  FF                 	db	255
  8383                           
  8384                           ;Config register IDLOC5 @ 0x200005
  8385                           ;	unspecified, using default values
  8386  200005                     	org	2097157
  8387  200005  FF                 	db	255
  8388                           
  8389                           ;Config register IDLOC6 @ 0x200006
  8390                           ;	unspecified, using default values
  8391  200006                     	org	2097158
  8392  200006  FF                 	db	255
  8393                           
  8394                           ;Config register IDLOC7 @ 0x200007
  8395                           ;	unspecified, using default values
  8396  200007                     	org	2097159
  8397  200007  FF                 	db	255
  8398                           
  8399                           	psect	config
  8400                           
  8401                           ; Padding undefined space
  8402  300000                     	org	3145728
  8403  300000  FF                 	db	255
  8404                           
  8405                           ;Config register CONFIG1H @ 0x300001
  8406                           ;	Oscillator Selection bits
  8407                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  8408                           ;	Fail-Safe Clock Monitor Enable bit
  8409                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8410                           ;	Internal/External Oscillator Switchover bit
  8411                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8412  300001                     	org	3145729
  8413  300001  08                 	db	8
  8414                           
  8415                           ;Config register CONFIG2L @ 0x300002
  8416                           ;	Power-up Timer Enable bit
  8417                           ;	PWRT = OFF, PWRT disabled
  8418                           ;	Brown-out Reset Enable bits
  8419                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8420                           ;	Brown Out Reset Voltage bits
  8421                           ;	BORV = 18, VBOR set to 1.8 V nominal
  8422  300002                     	org	3145730
  8423  300002  1F                 	db	31
  8424                           
  8425                           ;Config register CONFIG2H @ 0x300003
  8426                           ;	Watchdog Timer Enable bit
  8427                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  8428                           ;	Watchdog Timer Postscale Select bits
  8429                           ;	WDTPS = 32768, 1:32768
  8430  300003                     	org	3145731
  8431  300003  1E                 	db	30
  8432                           
  8433                           ; Padding undefined space
  8434  300004                     	org	3145732
  8435  300004  FF                 	db	255
  8436                           
  8437                           ;Config register CONFIG3H @ 0x300005
  8438                           ;	CCP2 MUX bit
  8439                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8440                           ;	PORTB A/D Enable bit
  8441                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  8442                           ;	Low-Power Timer1 Oscillator Enable bit
  8443                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8444                           ;	HFINTOSC Fast Start-up
  8445                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  8446                           ;	MCLR Pin Enable bit
  8447                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  8448  300005                     	org	3145733
  8449  300005  0B                 	db	11
  8450                           
  8451                           ;Config register CONFIG4L @ 0x300006
  8452                           ;	Stack Full/Underflow Reset Enable bit
  8453                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8454                           ;	Single-Supply ICSP Enable bit
  8455                           ;	LVP = OFF, Single-Supply ICSP disabled
  8456                           ;	Extended Instruction Set Enable bit
  8457                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8458                           ;	Background Debugger Enable bit
  8459                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  8460  300006                     	org	3145734
  8461  300006  81                 	db	129
  8462                           
  8463                           ; Padding undefined space
  8464  300007                     	org	3145735
  8465  300007  FF                 	db	255
  8466                           
  8467                           ;Config register CONFIG5L @ 0x300008
  8468                           ;	Code Protection Block 0
  8469                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  8470                           ;	Code Protection Block 1
  8471                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  8472                           ;	Code Protection Block 2
  8473                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  8474                           ;	Code Protection Block 3
  8475                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  8476  300008                     	org	3145736
  8477  300008  0F                 	db	15
  8478                           
  8479                           ;Config register CONFIG5H @ 0x300009
  8480                           ;	Boot Block Code Protection bit
  8481                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8482                           ;	Data EEPROM Code Protection bit
  8483                           ;	CPD = OFF, Data EEPROM not code-protected
  8484  300009                     	org	3145737
  8485  300009  C0                 	db	192
  8486                           
  8487                           ;Config register CONFIG6L @ 0x30000A
  8488                           ;	Write Protection Block 0
  8489                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  8490                           ;	Write Protection Block 1
  8491                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  8492                           ;	Write Protection Block 2
  8493                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  8494                           ;	Write Protection Block 3
  8495                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  8496  30000A                     	org	3145738
  8497  30000A  0F                 	db	15
  8498                           
  8499                           ;Config register CONFIG6H @ 0x30000B
  8500                           ;	Configuration Register Write Protection bit
  8501                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8502                           ;	Boot Block Write Protection bit
  8503                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  8504                           ;	Data EEPROM Write Protection bit
  8505                           ;	WRTD = OFF, Data EEPROM not write-protected
  8506  30000B                     	org	3145739
  8507  30000B  E0                 	db	224
  8508                           
  8509                           ;Config register CONFIG7L @ 0x30000C
  8510                           ;	Table Read Protection Block 0
  8511                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  8512                           ;	Table Read Protection Block 1
  8513                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8514                           ;	Table Read Protection Block 2
  8515                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  8516                           ;	Table Read Protection Block 3
  8517                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  8518  30000C                     	org	3145740
  8519  30000C  0F                 	db	15
  8520                           
  8521                           ;Config register CONFIG7H @ 0x30000D
  8522                           ;	Boot Block Table Read Protection bit
  8523                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8524  30000D                     	org	3145741
  8525  30000D  40                 	db	64
  8526                           tosu	equ	0xFFF
  8527                           tosh	equ	0xFFE
  8528                           tosl	equ	0xFFD
  8529                           stkptr	equ	0xFFC
  8530                           pclatu	equ	0xFFB
  8531                           pclath	equ	0xFFA
  8532                           pcl	equ	0xFF9
  8533                           tblptru	equ	0xFF8
  8534                           tblptrh	equ	0xFF7
  8535                           tblptrl	equ	0xFF6
  8536                           tablat	equ	0xFF5
  8537                           prodh	equ	0xFF4
  8538                           prodl	equ	0xFF3
  8539                           indf0	equ	0xFEF
  8540                           postinc0	equ	0xFEE
  8541                           postdec0	equ	0xFED
  8542                           preinc0	equ	0xFEC
  8543                           plusw0	equ	0xFEB
  8544                           fsr0h	equ	0xFEA
  8545                           fsr0l	equ	0xFE9
  8546                           wreg	equ	0xFE8
  8547                           indf1	equ	0xFE7
  8548                           postinc1	equ	0xFE6
  8549                           postdec1	equ	0xFE5
  8550                           preinc1	equ	0xFE4
  8551                           plusw1	equ	0xFE3
  8552                           fsr1h	equ	0xFE2
  8553                           fsr1l	equ	0xFE1
  8554                           bsr	equ	0xFE0
  8555                           indf2	equ	0xFDF
  8556                           postinc2	equ	0xFDE
  8557                           postdec2	equ	0xFDD
  8558                           preinc2	equ	0xFDC
  8559                           plusw2	equ	0xFDB
  8560                           fsr2h	equ	0xFDA
  8561                           fsr2l	equ	0xFD9
  8562                           status	equ	0xFD8

Data Sizes:
    Strings     39
    Constant    32
    Data        0
    BSS         117
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     33     157
    BANK1           256      4       4
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2488$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2494$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2500$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$2506$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2505	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2500	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$2499	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2494	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$2493	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX$2488	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2487	const PTR FTN()enum E3101 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2002_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_1(CODE[39]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_1(CODE[39]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 39
		 -> STR_1(CODE[39]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_1(CODE[39]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    MCP79410_get_time@hour	PTR unsigned char  size(2) Largest target is 1
		 -> hour(BANK0[1]), 

    MCP79410_get_time@min	PTR unsigned char  size(2) Largest target is 1
		 -> min(BANK0[1]), 

    MCP79410_get_time@sec	PTR unsigned char  size(2) Largest target is 1
		 -> sec(BANK0[1]), 

    MCP79410_get_date@year	PTR unsigned char  size(2) Largest target is 1
		 -> year(BANK0[1]), 

    MCP79410_get_date@mouth	PTR unsigned char  size(2) Largest target is 1
		 -> month(BANK0[1]), 

    MCP79410_get_date@day	PTR unsigned char  size(2) Largest target is 1
		 -> day(BANK0[1]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E3101[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S96$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _atoi->_isspace
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _MCP79410_init->_I2C_Write1ByteRegister
    _MCP79410_get_time->_I2C_Read1ByteRegister
    _MCP79410_get_date->_I2C_Read1ByteRegister
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  300804
                                             84 COMRAM     2     2      0
                  _MCP79410_get_date
                  _MCP79410_get_time
                      _MCP79410_init
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18     4     14   12240
                                             19 BANK0     14     0     14
                                              0 BANK1      4     4      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   12063
                                             82 COMRAM     2     2      0
                                             13 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   11530
                                             72 COMRAM    10     4      6
                                              0 BANK0     13    13      0
                               _atoi
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5447
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1037
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    3485
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2382
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MCP79410_init                                        2     2      0   96348
                                             24 COMRAM     2     2      0
             _I2C_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_Write1ByteRegister                               3     1      2   96348
                                             21 COMRAM     3     1      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _MCP79410_get_time                                    6     0      6   95885
                                             24 COMRAM     6     0      6
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _MCP79410_get_date                                    6     0      6   95841
                                             24 COMRAM     6     0      6
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_Read1ByteRegister                                3     2      1   95459
                                             21 COMRAM     3     2      1
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetAddressNackCallback                           4     0      4    1870
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             2     2      0      46
                                              4 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0   88620
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOperation                                  2     2      0   88620
                                             19 COMRAM     2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (5) _I2C_Poller                                           0     0      0   88574
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        2     2      0   88574
                                             17 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            2     2      0   22149
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              2     0      2    4390
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetDataCompleteCallback                          4     0      4    2478
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetCallback                                      5     1      4     914
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _I2C_SetBuffer                                        4     0      4    1868
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               2     0      2       0
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              2     0      2     265
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Close                                            1     1      0      24
                                              4 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MCP79410_get_date
     _I2C_Read1ByteRegister
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
           _I2C_Poller
             _I2C_MasterFsm
               _I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_IDLE *
               _I2C_DO_RCEN *
                 _I2C_MasterStartRx
               _I2C_DO_RESET *
               _I2C_DO_RX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_MasterGetRxData *
                 _I2C_MasterSendAck *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_RX_ACK *
                 _I2C_MasterSendAck
               _I2C_DO_RX_NACK_RESTART *
                 _I2C_MasterSendNack
               _I2C_DO_RX_NACK_STOP *
                 _I2C_MasterSendNack
               _I2C_DO_SEND_ADR_READ *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_ADR_WRITE *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_DO_TX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterIsNack *
                 _I2C_MasterSendTxData *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterSetIrq *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_MasterClearIrq *
               _I2C_MasterIsNack *
             _I2C_MasterWaitForEvent
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterOpen
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
         _I2C_SetCallback
   _MCP79410_get_time
     _I2C_Read1ByteRegister
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
           _I2C_Poller
             _I2C_MasterFsm
               _I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_IDLE *
               _I2C_DO_RCEN *
                 _I2C_MasterStartRx
               _I2C_DO_RESET *
               _I2C_DO_RX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_MasterGetRxData *
                 _I2C_MasterSendAck *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_RX_ACK *
                 _I2C_MasterSendAck
               _I2C_DO_RX_NACK_RESTART *
                 _I2C_MasterSendNack
               _I2C_DO_RX_NACK_STOP *
                 _I2C_MasterSendNack
               _I2C_DO_SEND_ADR_READ *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_ADR_WRITE *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_DO_TX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterIsNack *
                 _I2C_MasterSendTxData *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterSetIrq *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_MasterClearIrq *
               _I2C_MasterIsNack *
             _I2C_MasterWaitForEvent
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterOpen
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
         _I2C_SetCallback
   _MCP79410_init
     _I2C_Write1ByteRegister
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
           _I2C_Poller
             _I2C_MasterFsm
               _I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_IDLE *
               _I2C_DO_RCEN *
                 _I2C_MasterStartRx
               _I2C_DO_RESET *
               _I2C_DO_RX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_MasterGetRxData *
                 _I2C_MasterSendAck *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_RX_ACK *
                 _I2C_MasterSendAck
               _I2C_DO_RX_NACK_RESTART *
                 _I2C_MasterSendNack
               _I2C_DO_RX_NACK_STOP *
                 _I2C_MasterSendNack
               _I2C_DO_SEND_ADR_READ *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_ADR_WRITE *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_DO_TX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterIsNack *
                 _I2C_MasterSendTxData *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterSetIrq *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_MasterClearIrq *
               _I2C_MasterIsNack *
             _I2C_MasterWaitForEvent
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterOpen
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
         _I2C_SetCallback
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
             _EUSART_Write
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4       4       7        1.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     21      9D       5       98.1%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FB      32        0.0%
DATA                 0      0      FB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Mar 02 15:00:48 2021

                ?_EUSART_SetRxInterruptHandler 0005                         ??_I2C_DO_SEND_ADR_READ 0005  
                  __size_of_I2C_MasterSendNack 0006                             __size_of_I2C_Close 002C  
                      ??_I2C_DO_SEND_ADR_WRITE 0006                                    _SSPSTATbits 000FC7  
                                           l33 1F6E                                             l51 204C  
                                           l90 25B0                                             l93 2584  
                                           l96 2558                                             l99 25DC  
                          ___wmul@multiplicand 0007                            __size_of_I2C_Poller 001E  
                        ??_I2C_DO_SEND_RESTART 0005                   __size_of_I2C_MasterOperation 0044  
                                          l102 23E2                                            l213 1D0E  
                                          l223 2360                                            l312 1E0A  
                                          l217 2608                  __size_of_I2C_MasterSendTxData 0008  
                                          l209 2760                                            l402 288A  
                                          l306 27BC                                            l330 284E  
                                          l411 2862                                            l236 26A8  
                                          l405 2774                                            l333 2846  
                                          l229 2816                                            l245 271E  
                                          l342 282E                                            l262 2706  
                                          l239 2736                                            l351 27B0  
                                          l256 1E84                                            l408 285C  
                                          l432 2876                                            l272 27A4  
                                          l336 283E                                            l281 19DE  
                                          l345 2826                                            l426 2896  
                                          l266 1FDE                                            l275 2794  
                                          l339 2836                                            l435 2776  
                                          l348 281E                                            l604 27D2  
                                          l429 289E                                            l381 289A  
                                          l365 2886                                            l269 27C8  
                                          l357 211C                                            l390 288E  
                                          l278 19A6                                            l294 1B7C  
                                          l295 1BEA                                            l439 2784  
                                          l368 2882                                            l384 287A  
                                          l720 22D8                                            l456 274C  
                                          l633 2804                                            l378 26CA  
                                          l642 27E6                                            l570 1EFA  
                                          l387 2856                                            l459 27DC  
                                          l396 287E                                            l636 27FA  
                                          l660 2872                                            l492 252C  
                                          l732 2684                                            l645 27F0  
                                          l726 20B6                                            l399 2892  
                                          l639 280E                                            l729 1D8E  
                                          l594 21F4                                            l595 220A  
                                          l598 2236                         ??_EUSART_RxDataHandler 0001  
                                          _day 00D0                                            _pad 1856  
                                          _min 00CC                                            _sec 00CB  
                       fp__I2C_DO_RX_NACK_STOP 0000                         _I2C_MasterWaitForEvent 2776  
               ?_EUSART_SetFramingErrorHandler 0005                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                 ??_I2C_SetAddressNackCallback 000E                         _I2C_Write1ByteRegister 1FE0  
                     ??_I2C_CallbackReturnStop 0010                                   _I2C_DO_RESET 27A6  
                      ??_rd2RegCompleteHandler 0010                                           l3000 27BA  
                                         l3010 1DA0                                           l1410 265E  
                                         l3012 1DA4                                           l3004 1D90  
                                         l3110 2890                                           l3006 1D98  
                                         l3022 1DB2                                           l3030 282C  
                                         l3016 1DAA                                           l3112 26EA  
                                         l3200 2336                                           l4000 221C  
                                         l3034 27A6                                           l3050 20CC  
                                         l3042 20B8                                           l3114 26EE  
                                         l3210 235A                                           l3202 233A  
                                         l4002 221E                                           l4010 27CC  
                                         l1450 191A                                           l1515 2178  
                                         l3028 2828                                           l3036 27AA  
                                         l3044 20BC                                           l3116 26F2  
                                         l3204 234A                                           l3212 235E  
                                         l4100 223C                                           l4004 222E  
                                         l4020 1C38                                           l4012 1BEC  
                                         l1604 21D6                                           l1516 2180  
                                         l1445 189C                                           l1509 13E2  
                                         l3038 27AE                                           l3046 20C4  
                                         l3118 26F6                                           l3206 2352  
                                         l4102 2250                                           l1550 241E  
                                         l4006 2232                                           l4022 1C6E  
                                         l4014 1BFE                                           l4030 22F8  
                                         l4110 13E4                                           l1615 2456  
                                         l1455 141C                                           l3056 20D4  
                                         l3080 1F74                                           l3208 2356  
                                         l3400 2806                                           l4104 227E  
                                         l1544 184C                                           l4200 1794  
                                         l4008 2234                                           l4016 1C10  
                                         l4032 22FC                                           l4040 24F0  
                                         l1448 18DE                                           l1480 16BA  
                                         l1464 14B8                                           l4120 1442  
                                         l4112 13F4                                           l1609 21DE  
                                         l1457 1424                                           l3082 1F84  
                                         l3330 1C9C                                           l4050 267C  
                                         l4106 2282                                           l4210 181E  
                                         l1570 248E                                           l4018 1C1A  
                                         l4026 22DA                                           l4034 24C8  
                                         l4130 1480                                           l4122 1462  
                                         l4114 13F6                                           l1547 1854  
                                         l3084 1F98                                           l3340 1CAE  
                                         l3332 1C9E                                           l3324 1C84  
                                         l1556 24C6                                           l1564 2288  
                                         l4212 1830                                           l4204 17CC  
                                         l4028 22E6                                           l4036 24D4  
                                         l4060 1888                                           l4044 2420  
                                         l4140 14FE                                           l4132 149C  
                                         l4124 146A                                           l4116 1410  
                                         l4300 1390                                           l4220 1070  
                                         l3190 2894                                           l3086 1F9E  
                                         l3078 1F70                                           l3182 26AA  
                                         l3350 1CD0                                           l3342 1CB0  
                                         l3334 1CA0                                           l3326 1C88  
                                         l4038 24D8                                           l4070 18EE  
                                         l4062 1894                                           l4054 1856  
                                         l1478 1656                                           l4150 156E  
                                         l4134 14AC                                           l4126 1472  
                                         l4118 143A                                           l4302 139E  
                                         l1494 1140                                           l4230 10A2  
                                         l4222 107E                                           l3192 2898  
                                         l3184 26B8                                           l3360 1CF8  
                                         l3352 1CD8                                           l3344 1CB8  
                                         l3336 1CA2                                           l3328 1C98  
                                         l3520 1F2C                                           l4048 2660  
                                         l4208 180C                                           l4080 23E4  
                                         l4072 1902                                           l4064 18A8  
                                         l4056 1866                                           l4160 1612  
                                         l4152 1574                                           l4144 1538  
                                         l4128 1478                                           l4240 10C0  
                                         l4232 10B4                                           l4224 1090  
                                         l4320 211E                                           l1585 1C80  
                                         l1593 231C                                           l3194 2320  
                                         l3186 26C8                                           l3362 1D00  
                                         l3354 1CE0                                           l3346 1CC0  
                                         l3338 1CA6                                           l3522 1F40  
                                         l3514 1EFE                                           l3610 2748  
                                         l3602 2738                                           l4066 18BC  
                                         l4058 187A                                           l4090 21CA  
                                         l4170 167C                                           l4162 162C  
                                         l4154 157A                                           l4146 154A  
                                         l4138 14EC                                           l4226 1094  
                                         l4306 13AA                                           l4218 104A  
                                         l4322 2126                                           l4330 2640  
                                         l3380 25E2                                           l2804 2586  
                                         l2812 255A                                           l2820 252E  
                                         l2900 2880                                           l4500 1DE4  
                                         l3196 2324                                           l3364 1D04  
                                         l3356 1CE8                                           l3348 1CC8  
                                         l3372 2708                                           l3524 1F54  
                                         l3516 1F02                                           l3540 2020  
                                         l3532 1FE2                                           l3604 273C  
                                         l4180 16D4                                           l4076 2458  
                                         l4068 18C0                                           l4084 2182  
                                         l4172 1692                                           l4164 1646  
                                         l4148 155E                                           l4156 15D8  
                                         l4308 13D0                                           l4260 1176  
                                         l4252 10D8                                           l4244 10C6  
                                         l4236 10BA                                           l4228 10A0  
                                         l4324 2134                                           l4340 1AA6  
                                         l3382 25F2                                           l2830 25C6  
                                         l2806 259A                                           l2814 256E  
                                         l2822 2542                                           l2910 27C2  
                                         l3198 2334                                           l3374 2810  
                                         l3366 1D08                                           l3358 1CF0  
                                         l3526 1F58                                           l3518 1F18  
                                         l3542 2034                                           l3534 1FE2  
                                         l3550 2870                                           l3606 2740  
                                         l4094 2490                                           l4182 16D8  
                                         l4166 1666                                           l4158 15F4  
                                         l4270 11F6                                           l4262 11AC  
                                         l4254 112E                                           l4326 215A  
                                         l4350 1ABA                                           l4342 1AA8  
                                         l4334 1A9C                                           l1599 24FC  
                                         l3384 25F6                                           l2832 25DA  
                                         l2808 25AE                                           l2816 2582  
                                         l2824 2556                                           l2840 23E0  
                                         l2912 27C6                                           l2920 27A2  
                                         l3368 1D0C                                           l3528 1F6C  
                                         l3544 2038                                           l3536 1FF8  
                                         l3392 27E8                                           l3560 2520  
                                         l3552 24FE                                           l3608 2744  
                                         l4192 1738                                           l4184 16F6  
                                         l4176 16BC                                           l4088 21B8  
                                         l4168 166C                                           l4280 129E  
                                         l4264 11BA                                           l4256 114E  
                                         l4248 10CC                                           l4328 2636  
                                         l4352 1ABE                                           l4344 1AAE  
                                         l4336 1AA0                                           l2906 289C  
                                         l3386 2602                                           l3378 25DE  
                                         l2770 2720                                           l2850 2848  
                                         l3538 200C                                           l3394 27DE  
                                         l3570 1E94                                           l3546 274E  
                                         l3562 252A                                           l3554 2516  
                                         l4098 2238                                           l4194 174E  
                                         l4186 172E                                           l4178 16D0  
                                         l4282 12B6                                           l4290 133C  
                                         l4274 1240                                           l4266 11C8  
                                         l4258 1150                                           l4354 1ADA  
                                         l4346 1AB2                                           l4338 1AA4  
                                         l3388 2606                                           l2780 288C  
                                         l2772 2686                                           l2764 1E0E  
                                         l2828 25B2                                           l2836 23A4  
                                         l2844 2762                                           l2908 27BE  
                                         l2916 2796                                           l2924 2786  
                                         l2940 193C                                           l2932 191C  
                                         l2852 284C                                           l3396 27FC  
                                         l3580 1EB2                                           l3572 1EA2  
                                         l3548 275E                                           l3564 27D4  
                                         l3556 2518                                           l4196 1756  
                                         l4188 1732                                           l4292 1362  
                                         l4284 12C4                                           l4268 11E8  
                                         l4276 1252                                           l4356 1AF6  
                                         l4348 1AB6                                           l2782 2888  
                                         l2774 2696                                           l2766 1E20  
                                         l2838 23CC                                           l2918 279A  
                                         l2926 278A                                           l2950 194C  
                                         l2862 2830                                           l3670 204E  
                                         l3398 27F2                                           l3582 1EB6  
                                         l3574 1EA6                                           l3566 1E86  
                                         l3558 251E                                           l4198 175E  
                                         l4294 1370                                           l4286 1300  
                                         l4278 1278                                           l4358 1B28  
                                         ?_pad 0017                                           l2776 269E  
                                         l2768 1E54                                           l2784 285E  
                                         l2872 2858                                           l2848 2852  
                                         l2928 2792                                           l2952 19AA  
                                         l2944 1944                                           l2936 1934  
                                         l2856 2840                                           l2864 2834  
                                         l2880 2820                                           l3672 2062  
                                         l3680 1D24                                           l3584 1EC2  
                                         l3576 1EAA                                           l3568 1E88  
                                         l4296 1384                                           l2778 26A6  
                                         l2954 19BC                                           l2970 1B5A  
                                         l2858 2844                                           l2890 283C  
                                         l2882 2824                                           l2874 2818  
                                         l3674 2078                                           l3682 1D3A  
                                         l3666 228A                                           l3586 1ECE  
                                         l3578 1EAE                                           l4490 1100  
                                         l2868 2878                                           l2956 19D6  
                                         l2980 1B82                                           l2972 1B72  
                                         l2876 281C                                           l3676 20A2  
                                         l3684 1D64                                           l3668 22C2  
                                         l3588 1EF8                                           l4492 177E  
                                         l2886 287C                                           l2894 2874  
                                         l2958 19DC                                           l2990 1B92  
                                         l2974 1B76                                           l2966 1B46  
                                         l4494 2106                                           l3686 1D78  
                                         l3678 1D10                                           l2896 2884  
                                         l4496 1BC4                                           l2984 1B8A  
                                         l2968 1B54                                           l2888 2838  
                                         l4498 1980                                           l2996 27B2  
                                         l2998 27B6                                           l3992 21E2  
                                         l3994 21E2                                           l3996 2202  
                                         l3998 220C                                           STR_1 1021  
                                         u2000 1F6C                                           u2001 1F68  
                                         u2010 1FF8                                           u2011 1FF4  
                                         u1220 2772                                           u2020 204C  
                                         u1221 276C                                           u2021 2048  
                                         u1230 1930                                           u1231 192C  
                                         u1170 1E20                                           u1226 2774  
                                         u1250 19D6                                           u1171 1E1C  
                                         u1251 19D2                                           u1180 2696  
                                         u1260 1B72                                           u1340 2784  
                                         u1420 2706                                           u1181 2692  
                                         u1261 1B6E                                           u1341 2780  
                                         u1421 2702                                           _LATA 000F89  
                                         u1350 1F84                                           _LATB 000F8A  
                                         u1351 1F80                                           _LATC 000F8B  
                                         u1248 195A                                           u1360 1F98  
                                         u1600 234A                                           u2400 231C  
                                         _LATD 000F8C                                           u1249 196E  
                                         u1361 1F94                                           u1601 2346  
                                         u2401 2318                                           _LATE 000F8D  
                                         u2330 21F4                                           u2410 24F0  
                                         u2331 21F0                                           u2411 24EC  
                                         u2500 2418                                           u2340 2202  
                                         u2420 2450                                           u2501 2412  
                                         u2341 21FE                                           u2421 244A  
                                         u1278 1BA0                                           u2510 241A  
                                         u2350 222E                                           u2430 2452  
                                         u1279 1BB2                                           u2351 222A  
                                         u1288 1DC0                                           u2360 1BFE  
                                         u2440 1866                                           u2520 21B2  
                                         u2600 1410                                           u1289 1DD2  
                                         u2361 1BFA                                           u2441 1862  
                                         u2521 21AC                                           u2601 140C  
                                         u1298 20E2                                           u1378 1FC8  
                                         u2370 1C10                                           u2450 1888  
                                         u2530 21B4                                           u2610 143A  
                                         u1299 20F4                                           u1379 1FDA  
                                         u2371 1C0C                                           u2451 1884  
                                         u2611 1436                                           u1580 26B8  
                                         u2380 1C38                                           u2460 18DE  
                                         u2540 21CA                                           u2700 15F4  
                                         u2620 149C                                           u1581 26B4  
                                         u2381 1C34                                           u2461 18DA  
                                         u2541 21C6                                           u2701 15F0  
                                         u2621 1498                                           u1590 2334  
                                         u2550 24C0                                           u2390 1C6E  
                                         u2470 18EE                                           u2710 1612  
                                         u2630 14E6                                           u1591 2330  
                                         u2551 24BA                                           u2391 1C6A  
                                         u2471 18EA                                           u2711 160E  
                                         u2631 14E0                                           u2560 24C2  
                                         u2800 1808                                           u2480 2488  
                                         u2720 162C                                           u2640 14E8  
                                         u2481 2482                                           u2721 1628  
                                         u1850 1C98                                           u2570 2250  
                                         u2810 181E                                           u2490 248A  
                                         u2730 1646                                           u2650 14FE  
                                         u1851 1C94                                           u2571 224C  
                                         u2811 181A                                           u2731 1642  
                                         u2651 14FA                                           u1860 25F2  
                                         u2580 227E                                           u2820 1830  
                                         u2740 1656                                           u2660 1532  
                                         u2900 1252                                           u1861 25EE  
                                         u2581 227A                                           u2821 182C  
                                         u2741 1652                                           u2661 152C  
                                         u2901 124E                                           u2750 1666  
                                         u2670 1534                                           u2590 13F4  
                                         u2910 1278                                           u2830 1070  
                                         u2751 1662                                           u2591 13F0  
                                         u2911 1274                                           u2831 106C  
                                         u2760 16F6                                           u2680 154A  
                                         u2920 129E                                           u2840 1140  
                                         u2761 16F2                                           u2681 1546  
                                         u2921 129A                                           u2841 113C  
                                         u2770 172E                                           u2690 15B2  
                                         u2930 1362                                           u2850 114E  
                                         u2771 172A                                           u2931 135E  
                                         u2851 114A                                           u2780 174A  
                                         u2860 1176                                           u2940 2178  
                                         u2781 1746                                           u2861 1172  
                                         u2941 2174                                           u1990 1F18  
                                         u2790 1806                                           u2870 11BA  
                                         u1991 1F14                                           u2791 1800  
                                         u2695 15A0                                           u2871 11B6  
                                         u2880 1238                                           u2881 1232  
                                         u2890 123A                                           u2957 1B32  
                                         u2967 22CC                                           _WPUB 000F7C  
                      ??_wr2RegCompleteHandler 0010                                           _dbuf 00AB  
                                         _atoi 16BC                                           _main 1A9C  
                     ?_I2C_CallbackReturnReset 000E                                           _hour 00CD  
                                         _prec 00A3                                           _nout 009F  
                                         _year 00CE                                           pad@i 001E  
                                         pad@p 001B                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           indf2 000FDF  
                                         fsr1l 000FE1                                           pad@w 0020  
                                         fsr2l 000FD9                               __end_of_I2C_Open 1D10  
                                         btemp 005B                                           _xtoa 13E4  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00B0                   fp__I2C_DO_SEND_RESTART_WRITE 0000  
                                 ___param_bank 000000               __size_of_rdBlkRegCompleteHandler 0040  
                                        ??_pad 001D                               ?_I2C_MasterClose 0001  
                                ?_EUSART_Write 0001            __size_of_I2C_SetAddressNackCallback 0018  
               __size_of_OSCILLATOR_Initialize 000A                               ?_I2C_MasterStart 0001  
                                _I2C_DO_RX_ACK 2828                               ?_I2C_MasterWrite 0001  
                __end_of_OSCILLATOR_Initialize 27DE                                    _writeBuffer 009C  
                                        ?_atoi 000C                                          ?_main 0001  
                                        _ANSEL 000F7E                          _I2C_Read1ByteRegister 1EFC  
                                        ?_xtoa 0022                                          i2l610 23A2  
                                        i2l621 2634                                          i2l630 286E  
                                        i2l607 23A0                                          i2l624 28A0  
                                        i2l617 1A9A                                          i2l627 2868  
                                        i2l671 009C                                          i2l666 0062  
                                        i2l667 009C                                          _RCREG 000FAE  
                 __size_of_I2C_DO_RX_NACK_STOP 0008                                          _RCSTA 000FAB  
                                 vfpfcnvrt@fmt 004B                                   vfpfcnvrt@llu 00D1  
                                        _SPBRG 000FAF                              ??_I2C_DO_TX_EMPTY 0010  
                                        _TRISA 000F92                                          _TRISB 000F93  
                                        _TRISC 000F94                                          _TRISD 000F95  
                                        _TRISE 000F96                                          _TXREG 000FAD  
                                        _TXSTA 000FAC                              __end_of_I2C_DO_RX 1BEC  
                            __end_of_I2C_DO_TX 19E0                                          _flags 00A5  
                                        _fputc 1BEC                              __end_of_I2C_Close 260A  
                              __end_of_isalpha 2420                                          _fputs 22DA  
                              __end_of_isdigit 24C8                         __size_of_I2C_MasterFsm 0070  
                                        _month 00CF                 I2C_MasterOperation@returnValue 0015  
                                        atoi@n 0019                                          pad@fp 0017  
                                        atoi@s 000C                                          _width 00A1  
                                        _putch 27CA                        _I2C_MasterEnableRestart 288C  
                              __end_of_islower 2458                                __end_of_isspace 228A  
                              __end_of_isupper 2490                                          pclath 000FFA  
                                        tablat 000FF5                               ?_I2C_SetCallback 0005  
                 I2C_SetAddressNackCallback@cb 000A                                          ttemp5 005C  
                                        ttemp6 005F                                          ttemp7 0063  
                                        status 000FD8                                          wtemp8 005C  
                                        xtoa@c 0047                                          xtoa@d 0024  
                            ?_I2C_DO_SEND_STOP 0001                         __size_of_I2C_SetBuffer 0024  
                                        xtoa@i 0045                                          xtoa@n 003D  
                                        xtoa@p 0039                                          xtoa@w 003B  
                                        xtoa@x 002C                                __end_of_toupper 21E0  
                           ??_I2C_DO_SEND_STOP 0005                                   _toupper$2196 0011  
                                _fsmStateTable 1001                       fp__rd1RegCompleteHandler 0000  
                              __initialization 26CC                                   __end_of_atoi 1856  
                                 __end_of_main 1B46                       fp__wr1RegCompleteHandler 0000  
            __size_of_I2C_DO_SEND_RESTART_READ 0008                                   __end_of_xtoa 16BC  
                    ?_I2C_DO_SEND_RESTART_READ 0001                                 ??_EUSART_Write 0005  
                               ?_I2C_DO_RX_ACK 0001                    ?_INTERRUPT_InterruptManager 0001  
               ??_EUSART_SetRxInterruptHandler 0007                                         ??_atoi 000E  
                                       ??_main 0055                              ?_I2C_MasterIsNack 0001  
                                       ??_xtoa 002D                                  __activetblptr 000003  
                            ?_I2C_MasterSetIrq 0001                             ??_I2C_MasterIsNack 0005  
                           ??_I2C_MasterSetIrq 0005           fp__EUSART_DefaultFramingErrorHandler 0000  
    __end_of_EUSART_DefaultFramingErrorHandler 28A2     __size_of_EUSART_DefaultFramingErrorHandler 0002  
          ??_EUSART_DefaultFramingErrorHandler 0001             ?_EUSART_DefaultFramingErrorHandler 0001  
            _EUSART_DefaultFramingErrorHandler 28A0                     _EUSART_OverrunErrorHandler 00F4  
              __end_of_I2C_CallbackReturnReset 2884                                         ?_fputc 0007  
                                       ?_fputs 0010                __size_of_I2C_CallbackReturnStop 0004  
                I2C_SetDataCompleteCallback@cb 000A                                         ?_putch 0001  
                                       _ANSELH 000F7F                          __end_of_MCP79410_init 22DA  
                                 ??_I2C_Poller 0014                                         i2l3410 2630  
                                       i2l3402 260A                                         i2l3404 261A  
                                       i2l3406 261C                                         i2l3408 262C  
                                       i2l3640 2386                                         i2l3650 19FE  
                                       i2l3642 2396                                         i2l3634 2362  
                                       i2l3660 1A5C                                         i2l3652 1A0E  
                                       i2l3644 239A                                         i2l3636 2374  
                                       i2l3820 0070                                         i2l3812 001A  
                                       i2l3590 2864                                         i2l3662 1A78  
                                       i2l3654 1A26                                         i2l3646 19E0  
                                       i2l3638 2384                                         i2l3822 007E  
                                       i2l3814 0028                                         i2l3592 286A  
                                       i2l3664 1A96                                         i2l3656 1A34  
                                       i2l3648 19F0                                         i2l3816 0036  
                                       i2l3658 1A44                                         i2l3818 0044  
                                       _OSCCON 000FD3                                  vfpfcnvrt@done 00DA  
                                       _SPBRGH 000FB0                                         _SSPADD 000FC8  
                                       _SSPBUF 000FC9                            _I2C_MasterGetRxData 2878  
                                 vfprintf@cfmt 0053                                         ___wmul 2660  
                                _I2C_MasterFsm 1F70                            _EUSART_Transmit_ISR 2362  
                                       clear_0 26D2                              I2C_SetCallback@cb 0005  
                      fp__I2C_DO_SEND_ADR_READ 0000                         ?_I2C_Read1ByteRegister 0016  
                      __size_of_I2C_MasterOpen 0022                        __size_of_I2C_MasterStop 0004  
                      __size_of_I2C_Initialize 0014                                         _printf 2636  
                                       pad@buf 0019                                  _I2C_SetBuffer 2686  
                           __end_of_I2C_Poller 2708                                         _strlen 24C8  
                 __end_of_I2C_MasterDisableIrq 2898                                         fputc@c 0007  
                                       fputs@c 0014                            _I2C_DO_ADDRESS_NACK 20B8  
                                       fputs@i 0015                                         fputs@s 0010  
                                    ??_isalpha 0007                                      ??_isdigit 0007  
                         ?_I2C_MasterGetRxData 0001                                      ?_I2C_Open 0001  
           __end_of_I2C_SetAddressNackCallback 2720                     _I2C_SetAddressNackCallback 2708  
                                    ??_islower 0007                                   __mediumconst 0000  
                                    ??_isspace 0007                                         tblptrh 000FF7  
                                    ??_isupper 0007                                         tblptrl 000FF6  
                                       tblptru 000FF8                      ??_I2C_MasterEnableRestart 0005  
                             __end_of_vfprintf 2182                                         xtoa@fp 0022  
                                    ??_toupper 000D                           ?_EUSART_Transmit_ISR 0001  
                __size_of_INTERRUPT_Initialize 0004                              _SYSTEM_Initialize 2738  
                                   __accesstop 0060                        __end_of__initialization 26E0  
                          _I2C_MasterOperation 231E                             ?_SYSTEM_Initialize 0001  
                                ___rparam_used 000001                           ?_I2C_DO_ADDRESS_NACK 0001  
         __end_of_EUSART_SetTxInterruptHandler 27E8          __size_of_EUSART_SetTxInterruptHandler 000A  
                 _EUSART_SetTxInterruptHandler 27DE                        _rdBlkRegCompleteHandler 23A4  
                   fp__rdBlkRegCompleteHandler 0000                                 __pcstackCOMRAM 0001  
                               ?_I2C_MasterFsm 0001                                ??_I2C_DO_RX_ACK 0005  
                       _I2C_CallbackReturnStop 2884                            ??_SYSTEM_Initialize 0007  
                                __end_of_fputc 1C82                                  __end_of_fputs 231E  
                                __end_of_putch 27D4                                 ?_I2C_SetBuffer 0005  
                      ?_I2C_MasterWaitForEvent 0001                 __size_of_I2C_DO_SEND_ADR_WRITE 0010  
           __size_of_I2C_DO_SEND_RESTART_WRITE 0008                  __end_of_I2C_DO_SEND_ADR_WRITE 2796  
                   ?_I2C_DO_SEND_RESTART_WRITE 0001                           ?_I2C_MasterOperation 0001  
                        ??_I2C_MasterGetRxData 0005                        ?_I2C_Write1ByteRegister 0016  
                                   ??_I2C_Open 0005                           _eusartRxStatusBuffer 0084  
                   __end_of_I2C_MasterClearIrq 28A0                ??_EUSART_SetOverrunErrorHandler 0007  
                                      ??_fputc 000B                      __end_of_SYSTEM_Initialize 274E  
                                      ??_fputs 0014                          ??_EUSART_Transmit_ISR 0001  
                                      ??_putch 0006                              _I2C_MasterSendAck 2858  
                                   __pbssBANK0 0060                           __end_of_EUSART_Write 2238  
                                ??_I2C_DO_IDLE 0005                 __size_of_rd2RegCompleteHandler 002C  
                                ??_I2C_DO_RCEN 0005                  __end_of_rd2RegCompleteHandler 2586  
                 __end_of_I2C_MasterSendTxData 2858                             ?_I2C_MasterSendAck 0001  
                            _I2C_MasterStartRx 287C                 __size_of_wr2RegCompleteHandler 002C  
                        ??_I2C_DO_ADDRESS_NACK 0010                  __end_of_wr2RegCompleteHandler 25DE  
                  __size_of_EUSART_Receive_ISR 00BC                            _I2C_DO_RX_NACK_STOP 2820  
                        _rd1RegCompleteHandler 2586                             ?_I2C_MasterStartRx 0001  
                   __end_of_I2C_MasterSendNack 2864                          _wr1RegCompleteHandler 252E  
                          ??_I2C_MasterSendAck 0005                       rd1RegCompleteHandler@ptr 000E  
                ?_EUSART_SetTxInterruptHandler 0005               _EUSART_TxDefaultInterruptHandler 00FA  
                  __end_of_I2C_DO_SEND_RESTART 2840                                _I2C_DO_TX_EMPTY 1D90  
                          I2C_SetBuffer@buffer 0005                                        ?___wmul 0005  
               __end_of_I2C_MasterWaitForEvent 2786                            ??_I2C_MasterStartRx 0005  
                __size_of_I2C_DO_SEND_ADR_READ 0010                                        _BAUDCON 000FB8  
             __size_of_I2C_CallbackReturnReset 0004                   ??_EUSART_DefaultErrorHandler 0001  
                        ??_I2C_MasterOperation 0014                                        ?_printf 00E4  
               I2C_SetDataCompleteCallback@ptr 000C                 __end_of_I2C_Write1ByteRegister 204E  
                                      ?_strlen 0005                       ??_I2C_DO_RX_NACK_RESTART 0005  
            __end_of_I2C_DO_SEND_RESTART_WRITE 2848                           ?_I2C_DO_RX_NACK_STOP 0001  
                                _eusartRxCount 00AA                              _MCP79410_get_date 204E  
                         MCP79410_get_date@day 0019                              _MCP79410_get_time 1D10  
                           __size_of_vfpfcnvrt 039A                  __size_of_EUSART_RxDataHandler 002C  
                    __end_of_I2C_MasterSendAck 285E                                        _OSCTUNE 000F9B  
                           ?_MCP79410_get_date 0019                             ?_MCP79410_get_time 0019  
                     ??_EUSART_SetErrorHandler 0007                                        _SSPCON1 000FC6  
                                      _SSPCON2 000FC5                                        _SSPSTAT 000FC7  
                    __end_of_I2C_MasterStartRx 2880                           I2C_Close@returnValue 0005  
                 ?_I2C_SetDataCompleteCallback 000A                                      _I2C_DO_RX 1B46  
                                    _I2C_DO_TX 191C               __end_of_I2C_DO_SEND_RESTART_READ 2850  
                 I2C_Read1ByteRegister@address 0017                            ??_MCP79410_get_date 001F  
                                    _I2C_Close 25DE                            ??_MCP79410_get_time 001F  
                    ??_rdBlkRegCompleteHandler 0010                           _I2C_MasterDisableIrq 2894  
                              ??_I2C_MasterFsm 0012                                        __Hparam 0000  
          __size_of_EUSART_DefaultErrorHandler 0006                                        __Lparam 0000  
                          __end_of_I2C_DO_IDLE 27CA                            __end_of_I2C_DO_RCEN 27BE  
                         MCP79410_get_time@min 001B                           MCP79410_get_time@sec 001D  
                                   _readBuffer 00A7                                ??_I2C_SetBuffer 0009  
                              __size_of___wmul 0026                                      ?_vfprintf 00DE  
                      I2C_SetBuffer@bufferSize 0007                                   __psmallconst 1000  
                               _I2C_MasterOpen 26AA                                        __pcinit 26CC  
                               _I2C_MasterStop 2888                                 _I2C_Initialize 274E  
                                      __ramtop 1000                      __size_of_I2C_DO_SEND_STOP 0008  
                                      __ptext0 1A9C                                        __ptext1 2636  
                                      __ptext2 211E                                        __ptext3 104A  
                                      __ptext4 13E4                                        __ptext5 2182  
                                      __ptext6 2420                                        __ptext7 1856  
                                      __ptext8 24C8                                        __ptext9 22DA  
                              __size_of_printf 002A                          ??_I2C_DO_RX_NACK_STOP 0005  
                    __end_of_MCP79410_get_date 20B8                      __end_of_MCP79410_get_time 1D90  
                              __size_of_strlen 0036                          _OSCILLATOR_Initialize 27D4  
                                 __size_of_pad 00C6                                        _isalpha 23E4  
                                      _isdigit 2490                             I2C_SetCallback@idx 0009  
                     __size_of_I2C_MasterClose 0004                                        _islower 2420  
                     ??_PIN_MANAGER_Initialize 0005                  I2C_CallbackReturnReset@funPtr 000E  
                                      _isspace 2238                             I2C_SetCallback@ptr 0007  
                     wr1RegCompleteHandler@ptr 000E                                        _isupper 2458  
                    I2C_Write1ByteRegister@reg 0016                       fp__I2C_DO_SEND_ADR_WRITE 0000  
                     __size_of_I2C_MasterStart 0004                       __size_of_I2C_MasterWrite 0008  
                                      atoi@neg 0012                     __size_of_SYSTEM_Initialize 0016  
                                      _toupper 2182                           end_of_initialization 26E0  
                                   ?_I2C_DO_RX 0001                                     ?_I2C_DO_TX 0001  
        __end_of_EUSART_SetOverrunErrorHandler 27FC         __size_of_EUSART_SetOverrunErrorHandler 000A  
                _EUSART_SetOverrunErrorHandler 27F2                      __size_of_I2C_MasterIsNack 0014  
                                      fputc@fp 0009                                     ?_I2C_Close 0001  
                                      fputs@fp 0012                         ?_rd1RegCompleteHandler 000E  
                      __end_of_I2C_DO_TX_EMPTY 1E0C                      __size_of_I2C_MasterSetIrq 0004  
                        ?_I2C_MasterDisableIrq 0001                              _EUSART_Initialize 1E86  
                       ?_wr1RegCompleteHandler 000E                         MCP79410_get_date@mouth 001B  
                     fp__rd2RegCompleteHandler 0000                             ?_EUSART_Initialize 0001  
                     __size_of_I2C_SetCallback 007A                              __end_of_vfpfcnvrt 13E4  
                                    _RCSTAbits 000FAB                                        postdec2 000FDD  
                      ??_I2C_Read1ByteRegister 0017                         __end_of_I2C_MasterOpen 26CC  
                     fp__wr2RegCompleteHandler 0000                                        postinc0 000FEE  
                                      postinc1 000FE6                                        postinc2 000FDE  
                       __end_of_I2C_MasterStop 288C                         __end_of_I2C_Initialize 2762  
                                   ??_vfprintf 0053                      fp__I2C_CallbackReturnStop 0000  
                                      strlen@a 0007                                        strlen@s 0005  
                          ??_EUSART_Initialize 0007                 ??_EUSART_SetTxInterruptHandler 0007  
              __end_of_rdBlkRegCompleteHandler 23E4                           _I2C_MasterSendTxData 2850  
                              fp__I2C_DO_RESET 0000                __size_of_I2C_DO_RX_NACK_RESTART 0008  
                  ?_I2C_SetAddressNackCallback 000A                          __size_of_EUSART_Write 0058  
                   __size_of_I2C_MasterSendAck 0006                              __size_of_I2C_Open 008E  
              __size_of_EUSART_SetErrorHandler 000A                     __size_of_I2C_MasterStartRx 0004  
                    __end_of_EUSART_Initialize 1EFC                                    _I2C_DO_IDLE 27BE  
                                  _I2C_DO_RCEN 27B2                     rdBlkRegCompleteHandler@ptr 000E  
                I2C_Write1ByteRegister@address 0018                                      _TXSTAbits 000FAC  
                      ?_I2C_CallbackReturnStop 000E                       _I2C_DO_SEND_RESTART_READ 2848  
                  fp__I2C_DO_SEND_RESTART_READ 0000                   I2C_CallbackReturnStop@funPtr 000E  
                              ?_I2C_MasterOpen 0001                   __end_of_INTERRUPT_Initialize 2874  
                              ?_I2C_MasterStop 0001                                ?_I2C_Initialize 0001  
                      _I2C_CallbackReturnReset 2880                       I2C_Read1ByteRegister@reg 0016  
                   fp__I2C_CallbackReturnReset 0000             __end_of_EUSART_DefaultErrorHandler 2870  
                   _EUSART_DefaultErrorHandler 286A                                    vfpfcnvrt@ap 004D  
                                  vfpfcnvrt@fp 0049                                 __end_of___wmul 2686  
         __size_of_I2C_SetDataCompleteCallback 0018                                   _EUSART_Write 21E0  
                       __size_of_MCP79410_init 0050                          ?_I2C_MasterSendTxData 0001  
                       ?_OSCILLATOR_Initialize 0001                     __size_of_MCP79410_get_date 006A  
                  ??_I2C_DO_SEND_RESTART_WRITE 0005                     __size_of_MCP79410_get_time 0080  
                               __end_of_printf 2660                                 __end_of_strlen 24FE  
                          start_initialization 26CC                __size_of_PIN_MANAGER_Initialize 0030  
                                  __end_of_pad 191C                                  ?_I2C_DO_RESET 0001  
 EUSART_SetRxInterruptHandler@interruptHandler 0005   EUSART_SetTxInterruptHandler@interruptHandler 0005  
                                  putch@txData 0006                                    ??_I2C_DO_RX 0010  
                                  ??_I2C_DO_TX 0010                              ??_I2C_MasterClose 0005  
                       ??_I2C_MasterDisableIrq 0005                                    ??_I2C_Close 0005  
                            ??_I2C_MasterStart 0005                              ??_I2C_MasterWrite 0016  
                                _Slave_Address 00A8                 __end_of_I2C_CallbackReturnStop 2888  
                       _I2C_DO_RX_NACK_RESTART 2818                               ?_I2C_DO_TX_EMPTY 0001  
                           _I2C_MasterClearIrq 289C                 ?_EUSART_SetOverrunErrorHandler 0005  
                                  vfprintf@fmt 00E0                     _EUSART_FramingErrorHandler 00F6  
                                     ??___wmul 0009                         _EUSART_SetErrorHandler 2806  
                          ?_I2C_MasterClearIrq 0001                    __end_of_I2C_MasterGetRxData 287C  
                        __end_of_I2C_DO_RX_ACK 2830                               _I2C_DO_SEND_STOP 2830  
                            ??_I2C_SetCallback 0009                                       ??_printf 0055  
                          I2C_Open@returnValue 0006                             _I2C_MasterSendNack 285E  
                                     ??_strlen 0007                       ?_I2C_MasterEnableRestart 0001  
                       fp__I2C_DO_SEND_RESTART 0000                    __end_of_EUSART_Transmit_ISR 23A4  
                        _I2C_DO_SEND_ADR_WRITE 2786                                    __pbssCOMRAM 0057  
                                __pcstackBANK0 00D1                                  __pcstackBANK1 0100  
                               ??_I2C_DO_RESET 0005                            ?_I2C_MasterSendNack 0001  
                 __end_of_I2C_DO_SEND_ADR_READ 27A6                           ??_I2C_MasterClearIrq 0005  
                  __end_of_I2C_DO_ADDRESS_NACK 211E                     __end_of_EUSART_Receive_ISR 1A9C  
                                _MCP79410_init 228A                               _I2C_MasterIsNack 2762  
                   __size_of_EUSART_Initialize 0076                      _I2C_DO_SEND_RESTART_WRITE 2840  
             _EUSART_RxDefaultInterruptHandler 00F8                               _I2C_MasterSetIrq 2874  
                                    _atoi$2120 0014                                      _atoi$2121 0018  
                                    _atoi$2122 0016                                      __pnvBANK0 00F2  
                        _rd2RegCompleteHandler 255A                          __end_of_fsmStateTable 1021  
                 __end_of_EUSART_RxDataHandler 2636                         _PIN_MANAGER_Initialize 24FE  
                        _wr2RegCompleteHandler 25B2                      ??_I2C_CallbackReturnReset 0010  
                  __end_of_I2C_MasterOperation 2362                           ??_I2C_MasterSendNack 0005  
                     rd2RegCompleteHandler@ptr 000E                                      __pintcode 0008  
                                 _eusartRxHead 0058                                   _eusartTxHead 005A  
                                 _eusartRxTail 0057                         ??_I2C_MasterSendTxData 0005  
                                 _eusartTxTail 0059                   ??_INTERRUPT_InterruptManager 0001  
                            __size_of_vfprintf 0064                                   fp__I2C_DO_RX 0000  
                                 fp__I2C_DO_TX 0000                        _eusartTxBufferRemaining 00FC  
                 __size_of_I2C_DO_SEND_RESTART 0008                                    __smallconst 1000  
                                     ?_isalpha 0005                                       ?_isdigit 0005  
                      I2C_MasterOperation@read 0014                                       _I2C_Open 1C82  
                                     ?_islower 0005                                       ?_isspace 0005  
                                     ?_isupper 0005                                 __size_of_fputc 0096  
                               __size_of_fputs 0044                        ??_rd1RegCompleteHandler 0010  
                                     ?_toupper 000B                                 __size_of_putch 000A  
                               ?_MCP79410_init 0001                           _INTERRUPT_Initialize 2870  
                               _eusartRxBuffer 008C                        ??_wr1RegCompleteHandler 0010  
                               _eusartTxBuffer 0094                                 ___wmul@product 0009  
       EUSART_SetErrorHandler@interruptHandler 0005                                       _PIE1bits 000F9D  
                            _eusartRxLastError 00A9                                       i2u210_40 1A34  
                                     i2u210_41 1A30                                       i2u212_40 1A78  
                                     i2u211_48 1A4A                                       i2u212_41 1A74  
                                     i2u211_49 1A5C                                       i2u213_48 1A7E  
                                     i2u206_40 2374                                       i2u230_40 0070  
                                     i2u213_49 1A92                                       i2u206_41 2370  
                                     i2u230_41 006C                                       i2u207_40 2396  
                                     i2u231_40 007E                                       i2u207_41 2392  
                                     i2u231_41 007A            __size_of_INTERRUPT_InterruptManager 00A8  
                                     i2u208_40 19FE                                       i2u208_41 19FA  
                                     i2u232_48 0084                                       i2u232_49 0098  
                        MCP79410_get_date@year 001D                                       i2u209_48 1A14  
                                     i2u226_40 0028                                       i2u209_49 1A26  
                                     i2u226_41 0024                                       i2u227_40 0036  
                                     i2u227_41 0032                                       i2u228_40 0044  
                                     i2u228_41 0040                                       i2u229_48 004A  
                                     i2u229_49 005E                                       _PIR1bits 000F9E  
              ??_EUSART_SetFramingErrorHandler 0007                                       i2u187_40 262C  
                                     i2u187_41 2628                                       _PIR2bits 000FA1  
                        __end_of_I2C_MasterFsm 1FE0                                       _RCONbits 000FD0  
                  __end_of_I2C_DO_RX_NACK_STOP 2828           fp__EUSART_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART_DefaultOverrunErrorHandler 286A     __size_of_EUSART_DefaultOverrunErrorHandler 0006  
          ??_EUSART_DefaultOverrunErrorHandler 0001             ?_EUSART_DefaultOverrunErrorHandler 0001  
            _EUSART_DefaultOverrunErrorHandler 2864                __end_of_I2C_MasterEnableRestart 2890  
                               fp__I2C_DO_IDLE 0000                                 fp__I2C_DO_RCEN 0000  
               __size_of_I2C_Read1ByteRegister 0074                  __end_of_I2C_Read1ByteRegister 1F70  
                                    _vfpfcnvrt 104A                          __end_of_I2C_SetBuffer 26AA  
                                    _xtoa$2086 0035                                      _xtoa$2087 0037  
                            ___wmul@multiplier 0005                         ?_I2C_DO_SEND_ADR_WRITE 0001  
                     I2C_MasterSendTxData@data 0005                       wr2RegCompleteHandler@ptr 000E  
                                 _isspace$2147 000B                                     vfpfcnvrt@c 00D9  
                                  _INTCON2bits 000FF1                     ??_I2C_DO_SEND_RESTART_READ 0005  
                        ?_INTERRUPT_Initialize 0001                       ?_rdBlkRegCompleteHandler 000E  
                                   _I2C_Poller 26EA                                     _I2C_Status 0060  
                                 ?_I2C_DO_IDLE 0001                                   ?_I2C_DO_RCEN 0001  
                       ?_rd2RegCompleteHandler 000E                          fp__EUSART_Receive_ISR 0000  
                             ??_I2C_MasterOpen 0005                         ?_wr2RegCompleteHandler 000E  
                             ??_I2C_MasterStop 0005                       ??_I2C_MasterWaitForEvent 0005  
                             ??_I2C_Initialize 0005                      fp__I2C_DO_RX_NACK_RESTART 0000  
                                     __Hrparam 0000                                     vfprintf@ap 00E2  
                                     __Lrparam 0000                                     vfprintf@fp 00DE  
                         __end_of_I2C_DO_RESET 27B2                       ??_I2C_Write1ByteRegister 0018  
                        MCP79410_get_time@hour 0019                        ??_OSCILLATOR_Initialize 0005  
                          _EUSART_ErrorHandler 00F2                           _I2C_DO_SEND_ADR_READ 2796  
                  ?_EUSART_DefaultErrorHandler 0001                                     ?_vfpfcnvrt 0049  
             I2C_Read1ByteRegister@returnValue 0018                                _I2C_MasterClose 2898  
                I2C_SetAddressNackCallback@ptr 000C                                I2C_Open@address 0005  
                          fp__I2C_DO_SEND_STOP 0000                                _I2C_MasterStart 2890  
                              _I2C_MasterWrite 2810                               __size_of_isalpha 003C  
                             __size_of_isdigit 0038                           _EUSART_RxDataHandler 260A  
                             __size_of_islower 0038                               __size_of_isspace 0052  
                                     __ptext10 1BEC                                       __ptext11 27CA  
                                     __ptext20 24FE                                       __ptext12 21E0  
                                     __ptext21 27D4                                       __ptext13 2458  
                                     __ptext30 228A                                       __ptext22 2870  
                                     __ptext14 23E4                                       __ptext31 1FE0  
                                     __ptext23 274E                                       __ptext15 16BC  
                                     __ptext40 26EA                                       __ptext32 1D10  
                                     __ptext24 1E86                                       __ptext16 2238  
                                     __ptext41 2776                                       __ptext33 204E  
                                     __ptext25 27DE                                       __ptext17 2490  
                                     __ptext50 2840                                       __ptext42 1F70  
                                     __ptext34 1EFC                                       __ptext26 27E8  
                                     __ptext18 2660                                       __ptext51 2848  
                                     __ptext43 20B8                                       __ptext35 2708  
                                     __ptext27 27F2                                       __ptext19 2738  
                                     __ptext60 2762                                       __ptext52 27B2  
                                     __ptext44 27A6                                       __ptext36 1C82  
                                     __ptext28 27FC                                       __ptext61 2850  
                                     __ptext53 1B46                                       __ptext45 2818  
                                     __ptext37 26AA                                       __ptext29 2806  
                                     __ptext70 255A                                       __ptext62 2858  
                                     __ptext54 191C                                       __ptext46 2820  
                                     __ptext38 2810                                       __ptext71 2586  
                                     __ptext63 2878                                       __ptext55 2786  
                                     __ptext47 2828                                       __ptext39 231E  
                                     __ptext80 2894                                       __ptext72 25B2  
                                     __ptext64 285E                                       __ptext56 2796  
                                     __ptext48 2830                                       __ptext81 2898  
                                     __ptext73 2720                                       __ptext65 287C  
                                     __ptext57 27BE                                       __ptext49 2838  
                              ??_MCP79410_init 0019                                       __ptext90 0000  
                                     __ptext82 289C                                       __ptext74 1E0C  
                                     __ptext66 2880                                       __ptext58 1D90  
                                     __ptext75 2686                                       __ptext67 2884  
                                     __ptext59 2874                                       __ptext84 2362  
                                     __ptext76 2888                                       __ptext68 23A4  
                                     __ptext85 19E0                                       __ptext77 288C  
                                     __ptext69 252E                                       __ptext86 2864  
                                     __ptext78 2890                                       __ptext87 28A0  
                                     __ptext79 25DE                                       __ptext88 286A  
                                     __ptext89 260A                               __size_of_isupper 0038  
          __end_of_I2C_SetDataCompleteCallback 2738                    _I2C_SetDataCompleteCallback 2720  
                      ?_I2C_DO_RX_NACK_RESTART 0001                               __size_of_toupper 005E  
                     __end_of_I2C_DO_SEND_STOP 2838                                  __size_of_atoi 019A  
                                __size_of_main 00AA                                  __size_of_xtoa 02D8  
                      ?_EUSART_SetErrorHandler 0005                                _I2C_SetCallback 1E0C  
                ??_I2C_SetDataCompleteCallback 000E                     I2C_Write1ByteRegister@data 0017  
EUSART_SetOverrunErrorHandler@interruptHandler 0005                                       int$flags 005B  
                        ?_I2C_DO_SEND_ADR_READ 0001                                       _vfprintf 211E  
           __end_of_INTERRUPT_InterruptManager 00B0                     _INTERRUPT_InterruptManager 0008  
                                    printf@fmt 00E4          __end_of_EUSART_SetFramingErrorHandler 2806  
       __size_of_EUSART_SetFramingErrorHandler 000A                  _EUSART_SetFramingErrorHandler 27FC  
                     __end_of_I2C_MasterIsNack 2776                       __end_of_I2C_MasterSetIrq 2878  
                               _vfpfcnvrt$2102 00DC                                     _INTCONbits 000FF2  
                        ?_EUSART_RxDataHandler 0001                                       isalpha@c 0005  
                                     isdigit@c 0005                         ??_INTERRUPT_Initialize 0005  
               __end_of_I2C_DO_RX_NACK_RESTART 2820                                       intlevel2 0000  
                                  ?_I2C_Poller 0001                         fp__EUSART_Transmit_ISR 0000  
             __size_of_I2C_MasterEnableRestart 0004                                       islower@c 0005  
                                     isspace@c 0005                        ?_PIN_MANAGER_Initialize 0001  
               __end_of_EUSART_SetErrorHandler 2810                            _I2C_DO_SEND_RESTART 2838  
                __size_of_I2C_MasterDisableIrq 0004                                       isupper@c 0005  
                       fp__I2C_DO_ADDRESS_NACK 0000           __end_of_EUSART_SetRxInterruptHandler 27F2  
        __size_of_EUSART_SetRxInterruptHandler 000A                   _EUSART_SetRxInterruptHandler 27E8  
              __size_of_I2C_MasterWaitForEvent 0010                                       printf@ap 0102  
              __size_of_I2C_Write1ByteRegister 006E                             _EUSART_Receive_ISR 19E0  
EUSART_SetFramingErrorHandler@interruptHandler 0005                        __end_of_I2C_MasterClose 289C  
                     __size_of_I2C_DO_TX_EMPTY 007C                             fp__I2C_DO_TX_EMPTY 0000  
                                  ??_vfpfcnvrt 004F                        __end_of_I2C_MasterStart 2894  
                      __end_of_I2C_MasterWrite 2818                           ?_I2C_DO_SEND_RESTART 0001  
                          ?_EUSART_Receive_ISR 0001                  fp__EUSART_DefaultErrorHandler 0000  
                 __size_of_I2C_MasterGetRxData 0004                                       toupper@c 000B  
                                  _SSPCON1bits 000FC6                                    _SSPCON2bits 000FC5  
                  __size_of_I2C_MasterClearIrq 0004                             EUSART_Write@txData 0005  
                 __size_of_EUSART_Transmit_ISR 0042                        __end_of_I2C_SetCallback 1E86  
               __end_of_PIN_MANAGER_Initialize 252E                 __size_of_rd1RegCompleteHandler 002C  
                __end_of_rd1RegCompleteHandler 25B2                         __size_of_I2C_DO_RX_ACK 0008  
                             fp__I2C_DO_RX_ACK 0000                 __size_of_wr1RegCompleteHandler 002C  
                         ??_EUSART_Receive_ISR 0001                          __size_of_I2C_DO_RESET 000C  
                __end_of_wr1RegCompleteHandler 255A                   __size_of_I2C_DO_ADDRESS_NACK 0066  
                         __size_of_I2C_DO_IDLE 000C                           __size_of_I2C_DO_RCEN 000C  
                           __size_of_I2C_DO_RX 00A6                             __size_of_I2C_DO_TX 00C4  
